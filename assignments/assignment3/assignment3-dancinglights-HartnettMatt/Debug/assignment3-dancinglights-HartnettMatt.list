
assignment3-dancinglights-HartnettMatt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001940  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c0  08001a00  08001a00  00002a00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001ac0  08001ac0  00003060  2**0
                  CONTENTS
  4 .ARM          00000000  08001ac0  08001ac0  00003060  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001ac0  08001ac0  00003060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001ac0  08001ac0  00002ac0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001ac4  08001ac4  00002ac4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  20000000  08001ac8  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000060  08001b28  00003060  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08001b28  000031cc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00003060  2**0
                  CONTENTS, READONLY
 12 .debug_info   000018d4  00000000  00000000  00003088  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000094b  00000000  00000000  0000495c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000258  00000000  00000000  000052a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000191  00000000  00000000  00005500  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00014c22  00000000  00000000  00005691  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003cf0  00000000  00000000  0001a2b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000686f5  00000000  00000000  0001dfa3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00086698  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000d70  00000000  00000000  000866dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000095  00000000  00000000  0008744c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000060 	.word	0x20000060
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080019e8 	.word	0x080019e8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000064 	.word	0x20000064
 8000104:	080019e8 	.word	0x080019e8

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	@ 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			@ (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			@ (mov r8, r8)

08000234 <button_init>:
#include <stdio.h>
#include <stm32f091xc.h>
#include "button.h"
#include "utilities.h"

int button_init(void) {
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0

	// This section of code was taken from Alex Dean's Github
	// https://github.com/alexander-g-dean/ESF/blob/master/ST/Code/ch2/Basic-LED/main.c
	// Enable peripheral clock of GPIOC (for Switch B1)
	RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 8000238:	4b08      	ldr	r3, [pc, #32]	@ (800025c <button_init+0x28>)
 800023a:	695a      	ldr	r2, [r3, #20]
 800023c:	4b07      	ldr	r3, [pc, #28]	@ (800025c <button_init+0x28>)
 800023e:	2180      	movs	r1, #128	@ 0x80
 8000240:	0309      	lsls	r1, r1, #12
 8000242:	430a      	orrs	r2, r1
 8000244:	615a      	str	r2, [r3, #20]
	// Configure PC13 in input mode (00=0)
	MODIFY_FIELD(GPIOC->MODER, GPIO_MODER_MODER13, ESF_GPIO_MODER_INPUT);
 8000246:	4b06      	ldr	r3, [pc, #24]	@ (8000260 <button_init+0x2c>)
 8000248:	681a      	ldr	r2, [r3, #0]
 800024a:	4b05      	ldr	r3, [pc, #20]	@ (8000260 <button_init+0x2c>)
 800024c:	4905      	ldr	r1, [pc, #20]	@ (8000264 <button_init+0x30>)
 800024e:	400a      	ands	r2, r1
 8000250:	601a      	str	r2, [r3, #0]
	// End of Alex Dean Code

	return 0;
 8000252:	2300      	movs	r3, #0

}
 8000254:	0018      	movs	r0, r3
 8000256:	46bd      	mov	sp, r7
 8000258:	bd80      	pop	{r7, pc}
 800025a:	46c0      	nop			@ (mov r8, r8)
 800025c:	40021000 	.word	0x40021000
 8000260:	48000800 	.word	0x48000800
 8000264:	f3ffffff 	.word	0xf3ffffff

08000268 <read_button>:

int read_button(void){
 8000268:	b580      	push	{r7, lr}
 800026a:	af00      	add	r7, sp, #0
	return !(GPIOC->IDR & B1_IN_MSK);
 800026c:	4b05      	ldr	r3, [pc, #20]	@ (8000284 <read_button+0x1c>)
 800026e:	691a      	ldr	r2, [r3, #16]
 8000270:	2380      	movs	r3, #128	@ 0x80
 8000272:	019b      	lsls	r3, r3, #6
 8000274:	4013      	ands	r3, r2
 8000276:	425a      	negs	r2, r3
 8000278:	4153      	adcs	r3, r2
 800027a:	b2db      	uxtb	r3, r3
}
 800027c:	0018      	movs	r0, r3
 800027e:	46bd      	mov	sp, r7
 8000280:	bd80      	pop	{r7, pc}
 8000282:	46c0      	nop			@ (mov r8, r8)
 8000284:	48000800 	.word	0x48000800

08000288 <eled_init>:
#include <stdio.h>
#include <stm32f091xc.h>
#include "eled.h"
#include "utilities.h"

int eled_init(void) {
 8000288:	b580      	push	{r7, lr}
 800028a:	af00      	add	r7, sp, #0
	// Enable peripheral clock of GPIOB (for PB3)
	RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 800028c:	4b0c      	ldr	r3, [pc, #48]	@ (80002c0 <eled_init+0x38>)
 800028e:	695a      	ldr	r2, [r3, #20]
 8000290:	4b0b      	ldr	r3, [pc, #44]	@ (80002c0 <eled_init+0x38>)
 8000292:	2180      	movs	r1, #128	@ 0x80
 8000294:	02c9      	lsls	r1, r1, #11
 8000296:	430a      	orrs	r2, r1
 8000298:	615a      	str	r2, [r3, #20]
	// Configure PB3 in output mode (01=1)
	MODIFY_FIELD(GPIOB->MODER, GPIO_MODER_MODER3, ESF_GPIO_MODER_OUTPUT);
 800029a:	4b0a      	ldr	r3, [pc, #40]	@ (80002c4 <eled_init+0x3c>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	22c0      	movs	r2, #192	@ 0xc0
 80002a0:	4393      	bics	r3, r2
 80002a2:	001a      	movs	r2, r3
 80002a4:	4b07      	ldr	r3, [pc, #28]	@ (80002c4 <eled_init+0x3c>)
 80002a6:	2140      	movs	r1, #64	@ 0x40
 80002a8:	430a      	orrs	r2, r1
 80002aa:	601a      	str	r2, [r3, #0]
	// Turn off PB3
	GPIOB->BSRR |= PB3_OFF_MSK;
 80002ac:	4b05      	ldr	r3, [pc, #20]	@ (80002c4 <eled_init+0x3c>)
 80002ae:	699a      	ldr	r2, [r3, #24]
 80002b0:	4b04      	ldr	r3, [pc, #16]	@ (80002c4 <eled_init+0x3c>)
 80002b2:	2108      	movs	r1, #8
 80002b4:	430a      	orrs	r2, r1
 80002b6:	619a      	str	r2, [r3, #24]

	return 0;
 80002b8:	2300      	movs	r3, #0

}
 80002ba:	0018      	movs	r0, r3
 80002bc:	46bd      	mov	sp, r7
 80002be:	bd80      	pop	{r7, pc}
 80002c0:	40021000 	.word	0x40021000
 80002c4:	48000400 	.word	0x48000400

080002c8 <eled_on>:

int eled_on(void){
 80002c8:	b580      	push	{r7, lr}
 80002ca:	af00      	add	r7, sp, #0
#ifdef DEBUG
	printf("ELED ON\r\n");
 80002cc:	4b07      	ldr	r3, [pc, #28]	@ (80002ec <eled_on+0x24>)
 80002ce:	0018      	movs	r0, r3
 80002d0:	f000 fcf2 	bl	8000cb8 <puts>
#endif // DEBUG
	GPIOB->BSRR |= PB3_ON_MSK;
 80002d4:	4b06      	ldr	r3, [pc, #24]	@ (80002f0 <eled_on+0x28>)
 80002d6:	699a      	ldr	r2, [r3, #24]
 80002d8:	4b05      	ldr	r3, [pc, #20]	@ (80002f0 <eled_on+0x28>)
 80002da:	2180      	movs	r1, #128	@ 0x80
 80002dc:	0309      	lsls	r1, r1, #12
 80002de:	430a      	orrs	r2, r1
 80002e0:	619a      	str	r2, [r3, #24]
	return 0;
 80002e2:	2300      	movs	r3, #0
}
 80002e4:	0018      	movs	r0, r3
 80002e6:	46bd      	mov	sp, r7
 80002e8:	bd80      	pop	{r7, pc}
 80002ea:	46c0      	nop			@ (mov r8, r8)
 80002ec:	08001a00 	.word	0x08001a00
 80002f0:	48000400 	.word	0x48000400

080002f4 <eled_off>:

int eled_off(void){
 80002f4:	b580      	push	{r7, lr}
 80002f6:	af00      	add	r7, sp, #0
#ifdef DEBUG
	printf("ELED OFF\r\n");
 80002f8:	4b06      	ldr	r3, [pc, #24]	@ (8000314 <eled_off+0x20>)
 80002fa:	0018      	movs	r0, r3
 80002fc:	f000 fcdc 	bl	8000cb8 <puts>
#endif // DEBUG
	GPIOB->BSRR |= PB3_OFF_MSK;
 8000300:	4b05      	ldr	r3, [pc, #20]	@ (8000318 <eled_off+0x24>)
 8000302:	699a      	ldr	r2, [r3, #24]
 8000304:	4b04      	ldr	r3, [pc, #16]	@ (8000318 <eled_off+0x24>)
 8000306:	2108      	movs	r1, #8
 8000308:	430a      	orrs	r2, r1
 800030a:	619a      	str	r2, [r3, #24]
	return 0;
 800030c:	2300      	movs	r3, #0
}
 800030e:	0018      	movs	r0, r3
 8000310:	46bd      	mov	sp, r7
 8000312:	bd80      	pop	{r7, pc}
 8000314:	08001a0c 	.word	0x08001a0c
 8000318:	48000400 	.word	0x48000400

0800031c <init>:
 * Parameters:
 *   none
 *
 * Returns: 0 if everything runs correctly, 0 if an error occurs
 */
int init(void) {
 800031c:	b580      	push	{r7, lr}
 800031e:	af00      	add	r7, sp, #0

	// Configure peripherals
	uled_init();
 8000320:	f000 f96e 	bl	8000600 <uled_init>
	eled_init();
 8000324:	f7ff ffb0 	bl	8000288 <eled_init>
	button_init();
 8000328:	f7ff ff84 	bl	8000234 <button_init>

	// Start up sequence (uninterruptible)
	uled_on();
 800032c:	f000 f98e 	bl	800064c <uled_on>
	delay(STARTUP_LONG_TIME, 0);
 8000330:	23fa      	movs	r3, #250	@ 0xfa
 8000332:	00db      	lsls	r3, r3, #3
 8000334:	2100      	movs	r1, #0
 8000336:	0018      	movs	r0, r3
 8000338:	f000 f922 	bl	8000580 <delay>
	uled_off();
 800033c:	f000 f99a 	bl	8000674 <uled_off>
	delay(STARTUP_SHORT_TIME, 0);
 8000340:	23fa      	movs	r3, #250	@ 0xfa
 8000342:	009b      	lsls	r3, r3, #2
 8000344:	2100      	movs	r1, #0
 8000346:	0018      	movs	r0, r3
 8000348:	f000 f91a 	bl	8000580 <delay>
	eled_on();
 800034c:	f7ff ffbc 	bl	80002c8 <eled_on>
	delay(STARTUP_LONG_TIME, 0);
 8000350:	23fa      	movs	r3, #250	@ 0xfa
 8000352:	00db      	lsls	r3, r3, #3
 8000354:	2100      	movs	r1, #0
 8000356:	0018      	movs	r0, r3
 8000358:	f000 f912 	bl	8000580 <delay>
	eled_off();
 800035c:	f7ff ffca 	bl	80002f4 <eled_off>
	delay(STARTUP_SHORT_TIME, 0);
 8000360:	23fa      	movs	r3, #250	@ 0xfa
 8000362:	009b      	lsls	r3, r3, #2
 8000364:	2100      	movs	r1, #0
 8000366:	0018      	movs	r0, r3
 8000368:	f000 f90a 	bl	8000580 <delay>
	uled_on();
 800036c:	f000 f96e 	bl	800064c <uled_on>
	delay(STARTUP_LONG_TIME, 0);
 8000370:	23fa      	movs	r3, #250	@ 0xfa
 8000372:	00db      	lsls	r3, r3, #3
 8000374:	2100      	movs	r1, #0
 8000376:	0018      	movs	r0, r3
 8000378:	f000 f902 	bl	8000580 <delay>
	uled_off();
 800037c:	f000 f97a 	bl	8000674 <uled_off>
	delay(STARTUP_SHORT_TIME, 0);
 8000380:	23fa      	movs	r3, #250	@ 0xfa
 8000382:	009b      	lsls	r3, r3, #2
 8000384:	2100      	movs	r1, #0
 8000386:	0018      	movs	r0, r3
 8000388:	f000 f8fa 	bl	8000580 <delay>

	return 0;
 800038c:	2300      	movs	r3, #0

}
 800038e:	0018      	movs	r0, r3
 8000390:	46bd      	mov	sp, r7
 8000392:	bd80      	pop	{r7, pc}

08000394 <sequence1>:
 * Parameters:
 *   none
 *
 * Returns: 0 once the button is pressed, 1 if an error occurs
 */
int sequence1(void) {
 8000394:	b580      	push	{r7, lr}
 8000396:	af00      	add	r7, sp, #0
	// Loop the blinking infinitely unless a button is pressed
	while (1) {
		eled_on();
 8000398:	f7ff ff96 	bl	80002c8 <eled_on>
		// These if statements run an interruptible delay loop
		// If the button interrupts the loop, exit the sequence
		if (delay(ELED_ON_TIME, 1)) {
 800039c:	23fa      	movs	r3, #250	@ 0xfa
 800039e:	009b      	lsls	r3, r3, #2
 80003a0:	2101      	movs	r1, #1
 80003a2:	0018      	movs	r0, r3
 80003a4:	f000 f8ec 	bl	8000580 <delay>
 80003a8:	1e03      	subs	r3, r0, #0
 80003aa:	d001      	beq.n	80003b0 <sequence1+0x1c>
			return 0;
 80003ac:	2300      	movs	r3, #0
 80003ae:	e00a      	b.n	80003c6 <sequence1+0x32>
		}
		eled_off();
 80003b0:	f7ff ffa0 	bl	80002f4 <eled_off>
		if (delay(ELED_OFF_TIME, 1)) {
 80003b4:	23fa      	movs	r3, #250	@ 0xfa
 80003b6:	005b      	lsls	r3, r3, #1
 80003b8:	2101      	movs	r1, #1
 80003ba:	0018      	movs	r0, r3
 80003bc:	f000 f8e0 	bl	8000580 <delay>
 80003c0:	1e03      	subs	r3, r0, #0
 80003c2:	d0e9      	beq.n	8000398 <sequence1+0x4>
			return 0;
 80003c4:	2300      	movs	r3, #0
		}
	}
	return 1;
}
 80003c6:	0018      	movs	r0, r3
 80003c8:	46bd      	mov	sp, r7
 80003ca:	bd80      	pop	{r7, pc}

080003cc <sequence2>:
 * Parameters:
 *   none
 *
 * Returns: 0 once the button is pressed, 1 if an error occurs
 */
int sequence2(void) {
 80003cc:	b580      	push	{r7, lr}
 80003ce:	af00      	add	r7, sp, #0
	while (1) {
		uled_on();
 80003d0:	f000 f93c 	bl	800064c <uled_on>
		if (delay(ULED_ON_TIME, 1)) {
 80003d4:	4b0a      	ldr	r3, [pc, #40]	@ (8000400 <sequence2+0x34>)
 80003d6:	2101      	movs	r1, #1
 80003d8:	0018      	movs	r0, r3
 80003da:	f000 f8d1 	bl	8000580 <delay>
 80003de:	1e03      	subs	r3, r0, #0
 80003e0:	d001      	beq.n	80003e6 <sequence2+0x1a>
			return 0;
 80003e2:	2300      	movs	r3, #0
 80003e4:	e009      	b.n	80003fa <sequence2+0x2e>
		}
		uled_off();
 80003e6:	f000 f945 	bl	8000674 <uled_off>
		if (delay(ULED_OFF_TIME, 1)) {
 80003ea:	4b06      	ldr	r3, [pc, #24]	@ (8000404 <sequence2+0x38>)
 80003ec:	2101      	movs	r1, #1
 80003ee:	0018      	movs	r0, r3
 80003f0:	f000 f8c6 	bl	8000580 <delay>
 80003f4:	1e03      	subs	r3, r0, #0
 80003f6:	d0eb      	beq.n	80003d0 <sequence2+0x4>
			return 0;
 80003f8:	2300      	movs	r3, #0
		}
	}
	return 1;
}
 80003fa:	0018      	movs	r0, r3
 80003fc:	46bd      	mov	sp, r7
 80003fe:	bd80      	pop	{r7, pc}
 8000400:	00000bb8 	.word	0x00000bb8
 8000404:	000005dc 	.word	0x000005dc

08000408 <main>:

int main(void) {
 8000408:	b580      	push	{r7, lr}
 800040a:	af00      	add	r7, sp, #0
	 * The settings are: Baud: 9600, Parity: None, Stop Bits: 1 with
	 * the ST-Link COM port setting.
	 * Clocks: Processor = 48 Mhz. AHB = 48 MHz. APB = 24 MHz.
	 */
#ifdef DEBUG
	printf("Hello World !\r\n");
 800040c:	4b0b      	ldr	r3, [pc, #44]	@ (800043c <main+0x34>)
 800040e:	0018      	movs	r0, r3
 8000410:	f000 fc52 	bl	8000cb8 <puts>
#endif //DEBUG
	init();
 8000414:	f7ff ff82 	bl	800031c <init>

	// Loop infinitely - if one sequence returns, switch to the other
	while (1) {
		sequence1(); 	// Blink ELED
 8000418:	f7ff ffbc 	bl	8000394 <sequence1>
		eled_off(); 	// Ensure the ELED is off before moving on
 800041c:	f7ff ff6a 	bl	80002f4 <eled_off>
#ifdef DEBUG
		printf("CHANGE LED TO ULED\r\n");
 8000420:	4b07      	ldr	r3, [pc, #28]	@ (8000440 <main+0x38>)
 8000422:	0018      	movs	r0, r3
 8000424:	f000 fc48 	bl	8000cb8 <puts>
#endif //DEBUG
		sequence2(); 	// Blink ULED
 8000428:	f7ff ffd0 	bl	80003cc <sequence2>
		uled_off(); 	// Ensure the ULED is off before moving on
 800042c:	f000 f922 	bl	8000674 <uled_off>
#ifdef DEBUG
		printf("CHANGE LED TO ELED\r\n");
 8000430:	4b04      	ldr	r3, [pc, #16]	@ (8000444 <main+0x3c>)
 8000432:	0018      	movs	r0, r3
 8000434:	f000 fc40 	bl	8000cb8 <puts>
		sequence1(); 	// Blink ELED
 8000438:	46c0      	nop			@ (mov r8, r8)
 800043a:	e7ed      	b.n	8000418 <main+0x10>
 800043c:	08001a18 	.word	0x08001a18
 8000440:	08001a28 	.word	0x08001a28
 8000444:	08001a3c 	.word	0x08001a3c

08000448 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000448:	b580      	push	{r7, lr}
 800044a:	b086      	sub	sp, #24
 800044c:	af00      	add	r7, sp, #0
 800044e:	60f8      	str	r0, [r7, #12]
 8000450:	60b9      	str	r1, [r7, #8]
 8000452:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000454:	2300      	movs	r3, #0
 8000456:	617b      	str	r3, [r7, #20]
 8000458:	e00a      	b.n	8000470 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800045a:	e000      	b.n	800045e <_read+0x16>
 800045c:	bf00      	nop
 800045e:	0001      	movs	r1, r0
 8000460:	68bb      	ldr	r3, [r7, #8]
 8000462:	1c5a      	adds	r2, r3, #1
 8000464:	60ba      	str	r2, [r7, #8]
 8000466:	b2ca      	uxtb	r2, r1
 8000468:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800046a:	697b      	ldr	r3, [r7, #20]
 800046c:	3301      	adds	r3, #1
 800046e:	617b      	str	r3, [r7, #20]
 8000470:	697a      	ldr	r2, [r7, #20]
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	429a      	cmp	r2, r3
 8000476:	dbf0      	blt.n	800045a <_read+0x12>
  }

  return len;
 8000478:	687b      	ldr	r3, [r7, #4]
}
 800047a:	0018      	movs	r0, r3
 800047c:	46bd      	mov	sp, r7
 800047e:	b006      	add	sp, #24
 8000480:	bd80      	pop	{r7, pc}

08000482 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000482:	b580      	push	{r7, lr}
 8000484:	b086      	sub	sp, #24
 8000486:	af00      	add	r7, sp, #0
 8000488:	60f8      	str	r0, [r7, #12]
 800048a:	60b9      	str	r1, [r7, #8]
 800048c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800048e:	2300      	movs	r3, #0
 8000490:	617b      	str	r3, [r7, #20]
 8000492:	e009      	b.n	80004a8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000494:	68bb      	ldr	r3, [r7, #8]
 8000496:	1c5a      	adds	r2, r3, #1
 8000498:	60ba      	str	r2, [r7, #8]
 800049a:	781b      	ldrb	r3, [r3, #0]
 800049c:	0018      	movs	r0, r3
 800049e:	f000 fad3 	bl	8000a48 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004a2:	697b      	ldr	r3, [r7, #20]
 80004a4:	3301      	adds	r3, #1
 80004a6:	617b      	str	r3, [r7, #20]
 80004a8:	697a      	ldr	r2, [r7, #20]
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	429a      	cmp	r2, r3
 80004ae:	dbf1      	blt.n	8000494 <_write+0x12>
  }
  return len;
 80004b0:	687b      	ldr	r3, [r7, #4]
}
 80004b2:	0018      	movs	r0, r3
 80004b4:	46bd      	mov	sp, r7
 80004b6:	b006      	add	sp, #24
 80004b8:	bd80      	pop	{r7, pc}

080004ba <_close>:

int _close(int file)
{
 80004ba:	b580      	push	{r7, lr}
 80004bc:	b082      	sub	sp, #8
 80004be:	af00      	add	r7, sp, #0
 80004c0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80004c2:	2301      	movs	r3, #1
 80004c4:	425b      	negs	r3, r3
}
 80004c6:	0018      	movs	r0, r3
 80004c8:	46bd      	mov	sp, r7
 80004ca:	b002      	add	sp, #8
 80004cc:	bd80      	pop	{r7, pc}

080004ce <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004ce:	b580      	push	{r7, lr}
 80004d0:	b082      	sub	sp, #8
 80004d2:	af00      	add	r7, sp, #0
 80004d4:	6078      	str	r0, [r7, #4]
 80004d6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80004d8:	683b      	ldr	r3, [r7, #0]
 80004da:	2280      	movs	r2, #128	@ 0x80
 80004dc:	0192      	lsls	r2, r2, #6
 80004de:	605a      	str	r2, [r3, #4]
  return 0;
 80004e0:	2300      	movs	r3, #0
}
 80004e2:	0018      	movs	r0, r3
 80004e4:	46bd      	mov	sp, r7
 80004e6:	b002      	add	sp, #8
 80004e8:	bd80      	pop	{r7, pc}

080004ea <_isatty>:

int _isatty(int file)
{
 80004ea:	b580      	push	{r7, lr}
 80004ec:	b082      	sub	sp, #8
 80004ee:	af00      	add	r7, sp, #0
 80004f0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80004f2:	2301      	movs	r3, #1
}
 80004f4:	0018      	movs	r0, r3
 80004f6:	46bd      	mov	sp, r7
 80004f8:	b002      	add	sp, #8
 80004fa:	bd80      	pop	{r7, pc}

080004fc <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80004fc:	b580      	push	{r7, lr}
 80004fe:	b084      	sub	sp, #16
 8000500:	af00      	add	r7, sp, #0
 8000502:	60f8      	str	r0, [r7, #12]
 8000504:	60b9      	str	r1, [r7, #8]
 8000506:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000508:	2300      	movs	r3, #0
}
 800050a:	0018      	movs	r0, r3
 800050c:	46bd      	mov	sp, r7
 800050e:	b004      	add	sp, #16
 8000510:	bd80      	pop	{r7, pc}
	...

08000514 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000514:	b580      	push	{r7, lr}
 8000516:	b086      	sub	sp, #24
 8000518:	af00      	add	r7, sp, #0
 800051a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800051c:	4a14      	ldr	r2, [pc, #80]	@ (8000570 <_sbrk+0x5c>)
 800051e:	4b15      	ldr	r3, [pc, #84]	@ (8000574 <_sbrk+0x60>)
 8000520:	1ad3      	subs	r3, r2, r3
 8000522:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000524:	697b      	ldr	r3, [r7, #20]
 8000526:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000528:	4b13      	ldr	r3, [pc, #76]	@ (8000578 <_sbrk+0x64>)
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	2b00      	cmp	r3, #0
 800052e:	d102      	bne.n	8000536 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000530:	4b11      	ldr	r3, [pc, #68]	@ (8000578 <_sbrk+0x64>)
 8000532:	4a12      	ldr	r2, [pc, #72]	@ (800057c <_sbrk+0x68>)
 8000534:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000536:	4b10      	ldr	r3, [pc, #64]	@ (8000578 <_sbrk+0x64>)
 8000538:	681a      	ldr	r2, [r3, #0]
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	18d3      	adds	r3, r2, r3
 800053e:	693a      	ldr	r2, [r7, #16]
 8000540:	429a      	cmp	r2, r3
 8000542:	d207      	bcs.n	8000554 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000544:	f000 fd04 	bl	8000f50 <__errno>
 8000548:	0003      	movs	r3, r0
 800054a:	220c      	movs	r2, #12
 800054c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800054e:	2301      	movs	r3, #1
 8000550:	425b      	negs	r3, r3
 8000552:	e009      	b.n	8000568 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000554:	4b08      	ldr	r3, [pc, #32]	@ (8000578 <_sbrk+0x64>)
 8000556:	681b      	ldr	r3, [r3, #0]
 8000558:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800055a:	4b07      	ldr	r3, [pc, #28]	@ (8000578 <_sbrk+0x64>)
 800055c:	681a      	ldr	r2, [r3, #0]
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	18d2      	adds	r2, r2, r3
 8000562:	4b05      	ldr	r3, [pc, #20]	@ (8000578 <_sbrk+0x64>)
 8000564:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8000566:	68fb      	ldr	r3, [r7, #12]
}
 8000568:	0018      	movs	r0, r3
 800056a:	46bd      	mov	sp, r7
 800056c:	b006      	add	sp, #24
 800056e:	bd80      	pop	{r7, pc}
 8000570:	20008000 	.word	0x20008000
 8000574:	00000400 	.word	0x00000400
 8000578:	2000007c 	.word	0x2000007c
 800057c:	200001d0 	.word	0x200001d0

08000580 <delay>:

#include <stdio.h>
#include "timer.h"
#include "button.h"

int delay(int delay_msec, int button_interrupt_en) {
 8000580:	b580      	push	{r7, lr}
 8000582:	b086      	sub	sp, #24
 8000584:	af00      	add	r7, sp, #0
 8000586:	6078      	str	r0, [r7, #4]
 8000588:	6039      	str	r1, [r7, #0]
#ifdef DEBUG
	printf("START TIMER %d\r\n", delay_msec);
 800058a:	687a      	ldr	r2, [r7, #4]
 800058c:	4b1a      	ldr	r3, [pc, #104]	@ (80005f8 <delay+0x78>)
 800058e:	0011      	movs	r1, r2
 8000590:	0018      	movs	r0, r3
 8000592:	f000 fb2b 	bl	8000bec <iprintf>
#endif // DEBUG
	int delay = delay_msec;
 8000596:	687b      	ldr	r3, [r7, #4]
 8000598:	617b      	str	r3, [r7, #20]
	if (button_interrupt_en) {
 800059a:	683b      	ldr	r3, [r7, #0]
 800059c:	2b00      	cmp	r3, #0
 800059e:	d017      	beq.n	80005d0 <delay+0x50>
		while (delay > 0) {
 80005a0:	e011      	b.n	80005c6 <delay+0x46>
			int ctr = BUTTON_POLL_RATE * MSEC_TO_CTR;
 80005a2:	4b16      	ldr	r3, [pc, #88]	@ (80005fc <delay+0x7c>)
 80005a4:	613b      	str	r3, [r7, #16]
			while (ctr-- != 0) {
 80005a6:	e000      	b.n	80005aa <delay+0x2a>
				__asm volatile("NOP");
 80005a8:	46c0      	nop			@ (mov r8, r8)
			while (ctr-- != 0) {
 80005aa:	693b      	ldr	r3, [r7, #16]
 80005ac:	1e5a      	subs	r2, r3, #1
 80005ae:	613a      	str	r2, [r7, #16]
 80005b0:	2b00      	cmp	r3, #0
 80005b2:	d1f9      	bne.n	80005a8 <delay+0x28>
			}
			if(read_button()){
 80005b4:	f7ff fe58 	bl	8000268 <read_button>
 80005b8:	1e03      	subs	r3, r0, #0
 80005ba:	d001      	beq.n	80005c0 <delay+0x40>
				// If the button has been pressed, then cancel the timer
				return 1;
 80005bc:	2301      	movs	r3, #1
 80005be:	e017      	b.n	80005f0 <delay+0x70>
			}
			delay = delay - BUTTON_POLL_RATE;
 80005c0:	697b      	ldr	r3, [r7, #20]
 80005c2:	3b64      	subs	r3, #100	@ 0x64
 80005c4:	617b      	str	r3, [r7, #20]
		while (delay > 0) {
 80005c6:	697b      	ldr	r3, [r7, #20]
 80005c8:	2b00      	cmp	r3, #0
 80005ca:	dcea      	bgt.n	80005a2 <delay+0x22>
		}
		return 0;
 80005cc:	2300      	movs	r3, #0
 80005ce:	e00f      	b.n	80005f0 <delay+0x70>
	} else {
		int ctr = delay_msec * MSEC_TO_CTR;
 80005d0:	687a      	ldr	r2, [r7, #4]
 80005d2:	0013      	movs	r3, r2
 80005d4:	009b      	lsls	r3, r3, #2
 80005d6:	189b      	adds	r3, r3, r2
 80005d8:	009a      	lsls	r2, r3, #2
 80005da:	189b      	adds	r3, r3, r2
 80005dc:	01db      	lsls	r3, r3, #7
 80005de:	60fb      	str	r3, [r7, #12]
		while (ctr-- != 0) {
 80005e0:	e000      	b.n	80005e4 <delay+0x64>
			__asm volatile("NOP");
 80005e2:	46c0      	nop			@ (mov r8, r8)
		while (ctr-- != 0) {
 80005e4:	68fb      	ldr	r3, [r7, #12]
 80005e6:	1e5a      	subs	r2, r3, #1
 80005e8:	60fa      	str	r2, [r7, #12]
 80005ea:	2b00      	cmp	r3, #0
 80005ec:	d1f9      	bne.n	80005e2 <delay+0x62>
		}
		return 0;
 80005ee:	2300      	movs	r3, #0
	}

}
 80005f0:	0018      	movs	r0, r3
 80005f2:	46bd      	mov	sp, r7
 80005f4:	b006      	add	sp, #24
 80005f6:	bd80      	pop	{r7, pc}
 80005f8:	08001a50 	.word	0x08001a50
 80005fc:	0004e200 	.word	0x0004e200

08000600 <uled_init>:
#include <stdio.h>
#include <stm32f091xc.h>
#include "uled.h"
#include "utilities.h"

int uled_init(void) {
 8000600:	b580      	push	{r7, lr}
 8000602:	af00      	add	r7, sp, #0

	// This section of code was taken from Alex Dean's Github
	// https://github.com/alexander-g-dean/ESF/blob/master/ST/Code/ch2/Basic-LED/main.c
	// Enable peripheral clock of GPIOA (for LD2)
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8000604:	4b0f      	ldr	r3, [pc, #60]	@ (8000644 <uled_init+0x44>)
 8000606:	695a      	ldr	r2, [r3, #20]
 8000608:	4b0e      	ldr	r3, [pc, #56]	@ (8000644 <uled_init+0x44>)
 800060a:	2180      	movs	r1, #128	@ 0x80
 800060c:	0289      	lsls	r1, r1, #10
 800060e:	430a      	orrs	r2, r1
 8000610:	615a      	str	r2, [r3, #20]
	// Configure PA5 in output mode (01=1)
	MODIFY_FIELD(GPIOA->MODER, GPIO_MODER_MODER5, ESF_GPIO_MODER_OUTPUT);
 8000612:	2390      	movs	r3, #144	@ 0x90
 8000614:	05db      	lsls	r3, r3, #23
 8000616:	681b      	ldr	r3, [r3, #0]
 8000618:	4a0b      	ldr	r2, [pc, #44]	@ (8000648 <uled_init+0x48>)
 800061a:	401a      	ands	r2, r3
 800061c:	2390      	movs	r3, #144	@ 0x90
 800061e:	05db      	lsls	r3, r3, #23
 8000620:	2180      	movs	r1, #128	@ 0x80
 8000622:	00c9      	lsls	r1, r1, #3
 8000624:	430a      	orrs	r2, r1
 8000626:	601a      	str	r2, [r3, #0]
	// Turn off LD2
	GPIOA->BSRR |= LD2_OFF_MSK;
 8000628:	2390      	movs	r3, #144	@ 0x90
 800062a:	05db      	lsls	r3, r3, #23
 800062c:	699a      	ldr	r2, [r3, #24]
 800062e:	2390      	movs	r3, #144	@ 0x90
 8000630:	05db      	lsls	r3, r3, #23
 8000632:	2180      	movs	r1, #128	@ 0x80
 8000634:	0389      	lsls	r1, r1, #14
 8000636:	430a      	orrs	r2, r1
 8000638:	619a      	str	r2, [r3, #24]
	// End of Alex Dean Code

	return 0;
 800063a:	2300      	movs	r3, #0

}
 800063c:	0018      	movs	r0, r3
 800063e:	46bd      	mov	sp, r7
 8000640:	bd80      	pop	{r7, pc}
 8000642:	46c0      	nop			@ (mov r8, r8)
 8000644:	40021000 	.word	0x40021000
 8000648:	fffff3ff 	.word	0xfffff3ff

0800064c <uled_on>:

int uled_on(void){
 800064c:	b580      	push	{r7, lr}
 800064e:	af00      	add	r7, sp, #0
#ifdef DEBUG
	printf("ULED ON\r\n");
 8000650:	4b07      	ldr	r3, [pc, #28]	@ (8000670 <uled_on+0x24>)
 8000652:	0018      	movs	r0, r3
 8000654:	f000 fb30 	bl	8000cb8 <puts>
#endif // DEBUG
	GPIOA->BSRR |= LD2_ON_MSK;
 8000658:	2390      	movs	r3, #144	@ 0x90
 800065a:	05db      	lsls	r3, r3, #23
 800065c:	699a      	ldr	r2, [r3, #24]
 800065e:	2390      	movs	r3, #144	@ 0x90
 8000660:	05db      	lsls	r3, r3, #23
 8000662:	2120      	movs	r1, #32
 8000664:	430a      	orrs	r2, r1
 8000666:	619a      	str	r2, [r3, #24]
	return 0;
 8000668:	2300      	movs	r3, #0
}
 800066a:	0018      	movs	r0, r3
 800066c:	46bd      	mov	sp, r7
 800066e:	bd80      	pop	{r7, pc}
 8000670:	08001a64 	.word	0x08001a64

08000674 <uled_off>:

int uled_off(void){
 8000674:	b580      	push	{r7, lr}
 8000676:	af00      	add	r7, sp, #0
#ifdef DEBUG
	printf("ULED OFF\r\n");
 8000678:	4b08      	ldr	r3, [pc, #32]	@ (800069c <uled_off+0x28>)
 800067a:	0018      	movs	r0, r3
 800067c:	f000 fb1c 	bl	8000cb8 <puts>
#endif // DEBUG
	GPIOA->BSRR |= LD2_OFF_MSK;
 8000680:	2390      	movs	r3, #144	@ 0x90
 8000682:	05db      	lsls	r3, r3, #23
 8000684:	699a      	ldr	r2, [r3, #24]
 8000686:	2390      	movs	r3, #144	@ 0x90
 8000688:	05db      	lsls	r3, r3, #23
 800068a:	2180      	movs	r1, #128	@ 0x80
 800068c:	0389      	lsls	r1, r1, #14
 800068e:	430a      	orrs	r2, r1
 8000690:	619a      	str	r2, [r3, #24]
	return 0;
 8000692:	2300      	movs	r3, #0
}
 8000694:	0018      	movs	r0, r3
 8000696:	46bd      	mov	sp, r7
 8000698:	bd80      	pop	{r7, pc}
 800069a:	46c0      	nop			@ (mov r8, r8)
 800069c:	08001a70 	.word	0x08001a70

080006a0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006a0:	480e      	ldr	r0, [pc, #56]	@ (80006dc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006a2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006a4:	f000 f86a 	bl	800077c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006a8:	480d      	ldr	r0, [pc, #52]	@ (80006e0 <LoopForever+0x6>)
  ldr r1, =_edata
 80006aa:	490e      	ldr	r1, [pc, #56]	@ (80006e4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80006ac:	4a0e      	ldr	r2, [pc, #56]	@ (80006e8 <LoopForever+0xe>)
  movs r3, #0
 80006ae:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006b0:	e002      	b.n	80006b8 <LoopCopyDataInit>

080006b2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006b2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006b4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006b6:	3304      	adds	r3, #4

080006b8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006b8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006ba:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006bc:	d3f9      	bcc.n	80006b2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006be:	4a0b      	ldr	r2, [pc, #44]	@ (80006ec <LoopForever+0x12>)
  ldr r4, =_ebss
 80006c0:	4c0b      	ldr	r4, [pc, #44]	@ (80006f0 <LoopForever+0x16>)
  movs r3, #0
 80006c2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006c4:	e001      	b.n	80006ca <LoopFillZerobss>

080006c6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006c6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006c8:	3204      	adds	r2, #4

080006ca <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006ca:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006cc:	d3fb      	bcc.n	80006c6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006ce:	f000 fc45 	bl	8000f5c <__libc_init_array>
/* LP - Update system core clocks */
  bl SystemCoreClockUpdate
 80006d2:	f000 f89b 	bl	800080c <SystemCoreClockUpdate>
/* Call the application's entry point.*/
  bl main
 80006d6:	f7ff fe97 	bl	8000408 <main>

080006da <LoopForever>:

LoopForever:
  b LoopForever
 80006da:	e7fe      	b.n	80006da <LoopForever>
  ldr   r0, =_estack
 80006dc:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 80006e0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006e4:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 80006e8:	08001ac8 	.word	0x08001ac8
  ldr r2, =_sbss
 80006ec:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 80006f0:	200001cc 	.word	0x200001cc

080006f4 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006f4:	e7fe      	b.n	80006f4 <ADC_COMP_IRQHandler>
	...

080006f8 <Set_Clocks_To_48MHz>:
 80006f8:	b580      	push	{r7, lr}
 80006fa:	af00      	add	r7, sp, #0
 80006fc:	4b1c      	ldr	r3, [pc, #112]	@ (8000770 <Set_Clocks_To_48MHz+0x78>)
 80006fe:	681a      	ldr	r2, [r3, #0]
 8000700:	4b1b      	ldr	r3, [pc, #108]	@ (8000770 <Set_Clocks_To_48MHz+0x78>)
 8000702:	2101      	movs	r1, #1
 8000704:	430a      	orrs	r2, r1
 8000706:	601a      	str	r2, [r3, #0]
 8000708:	4b1a      	ldr	r3, [pc, #104]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 800070a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800070c:	4b19      	ldr	r3, [pc, #100]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 800070e:	2180      	movs	r1, #128	@ 0x80
 8000710:	0249      	lsls	r1, r1, #9
 8000712:	430a      	orrs	r2, r1
 8000714:	635a      	str	r2, [r3, #52]	@ 0x34
 8000716:	46c0      	nop			@ (mov r8, r8)
 8000718:	4b16      	ldr	r3, [pc, #88]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 800071a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800071c:	2380      	movs	r3, #128	@ 0x80
 800071e:	029b      	lsls	r3, r3, #10
 8000720:	4013      	ands	r3, r2
 8000722:	d0f9      	beq.n	8000718 <Set_Clocks_To_48MHz+0x20>
 8000724:	4b13      	ldr	r3, [pc, #76]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 8000726:	685b      	ldr	r3, [r3, #4]
 8000728:	22f0      	movs	r2, #240	@ 0xf0
 800072a:	4393      	bics	r3, r2
 800072c:	001a      	movs	r2, r3
 800072e:	4b11      	ldr	r3, [pc, #68]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 8000730:	2110      	movs	r1, #16
 8000732:	430a      	orrs	r2, r1
 8000734:	605a      	str	r2, [r3, #4]
 8000736:	4b0f      	ldr	r3, [pc, #60]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 8000738:	685a      	ldr	r2, [r3, #4]
 800073a:	4b0e      	ldr	r3, [pc, #56]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 800073c:	2103      	movs	r1, #3
 800073e:	430a      	orrs	r2, r1
 8000740:	605a      	str	r2, [r3, #4]
 8000742:	46c0      	nop			@ (mov r8, r8)
 8000744:	4b0b      	ldr	r3, [pc, #44]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 8000746:	685b      	ldr	r3, [r3, #4]
 8000748:	089a      	lsrs	r2, r3, #2
 800074a:	4b0a      	ldr	r3, [pc, #40]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 800074c:	685b      	ldr	r3, [r3, #4]
 800074e:	4053      	eors	r3, r2
 8000750:	2203      	movs	r2, #3
 8000752:	4013      	ands	r3, r2
 8000754:	d1f6      	bne.n	8000744 <Set_Clocks_To_48MHz+0x4c>
 8000756:	4b07      	ldr	r3, [pc, #28]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 8000758:	685b      	ldr	r3, [r3, #4]
 800075a:	4a07      	ldr	r2, [pc, #28]	@ (8000778 <Set_Clocks_To_48MHz+0x80>)
 800075c:	401a      	ands	r2, r3
 800075e:	4b05      	ldr	r3, [pc, #20]	@ (8000774 <Set_Clocks_To_48MHz+0x7c>)
 8000760:	2180      	movs	r1, #128	@ 0x80
 8000762:	00c9      	lsls	r1, r1, #3
 8000764:	430a      	orrs	r2, r1
 8000766:	605a      	str	r2, [r3, #4]
 8000768:	46c0      	nop			@ (mov r8, r8)
 800076a:	46bd      	mov	sp, r7
 800076c:	bd80      	pop	{r7, pc}
 800076e:	46c0      	nop			@ (mov r8, r8)
 8000770:	40022000 	.word	0x40022000
 8000774:	40021000 	.word	0x40021000
 8000778:	fffff8ff 	.word	0xfffff8ff

0800077c <SystemInit>:
 800077c:	b580      	push	{r7, lr}
 800077e:	af00      	add	r7, sp, #0
 8000780:	4b1c      	ldr	r3, [pc, #112]	@ (80007f4 <SystemInit+0x78>)
 8000782:	681a      	ldr	r2, [r3, #0]
 8000784:	4b1b      	ldr	r3, [pc, #108]	@ (80007f4 <SystemInit+0x78>)
 8000786:	2101      	movs	r1, #1
 8000788:	430a      	orrs	r2, r1
 800078a:	601a      	str	r2, [r3, #0]
 800078c:	4b19      	ldr	r3, [pc, #100]	@ (80007f4 <SystemInit+0x78>)
 800078e:	685a      	ldr	r2, [r3, #4]
 8000790:	4b18      	ldr	r3, [pc, #96]	@ (80007f4 <SystemInit+0x78>)
 8000792:	4919      	ldr	r1, [pc, #100]	@ (80007f8 <SystemInit+0x7c>)
 8000794:	400a      	ands	r2, r1
 8000796:	605a      	str	r2, [r3, #4]
 8000798:	4b16      	ldr	r3, [pc, #88]	@ (80007f4 <SystemInit+0x78>)
 800079a:	681a      	ldr	r2, [r3, #0]
 800079c:	4b15      	ldr	r3, [pc, #84]	@ (80007f4 <SystemInit+0x78>)
 800079e:	4917      	ldr	r1, [pc, #92]	@ (80007fc <SystemInit+0x80>)
 80007a0:	400a      	ands	r2, r1
 80007a2:	601a      	str	r2, [r3, #0]
 80007a4:	4b13      	ldr	r3, [pc, #76]	@ (80007f4 <SystemInit+0x78>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	4b12      	ldr	r3, [pc, #72]	@ (80007f4 <SystemInit+0x78>)
 80007aa:	4915      	ldr	r1, [pc, #84]	@ (8000800 <SystemInit+0x84>)
 80007ac:	400a      	ands	r2, r1
 80007ae:	601a      	str	r2, [r3, #0]
 80007b0:	4b10      	ldr	r3, [pc, #64]	@ (80007f4 <SystemInit+0x78>)
 80007b2:	685a      	ldr	r2, [r3, #4]
 80007b4:	4b0f      	ldr	r3, [pc, #60]	@ (80007f4 <SystemInit+0x78>)
 80007b6:	4913      	ldr	r1, [pc, #76]	@ (8000804 <SystemInit+0x88>)
 80007b8:	400a      	ands	r2, r1
 80007ba:	605a      	str	r2, [r3, #4]
 80007bc:	4b0d      	ldr	r3, [pc, #52]	@ (80007f4 <SystemInit+0x78>)
 80007be:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80007c0:	4b0c      	ldr	r3, [pc, #48]	@ (80007f4 <SystemInit+0x78>)
 80007c2:	210f      	movs	r1, #15
 80007c4:	438a      	bics	r2, r1
 80007c6:	62da      	str	r2, [r3, #44]	@ 0x2c
 80007c8:	4b0a      	ldr	r3, [pc, #40]	@ (80007f4 <SystemInit+0x78>)
 80007ca:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007cc:	4b09      	ldr	r3, [pc, #36]	@ (80007f4 <SystemInit+0x78>)
 80007ce:	490e      	ldr	r1, [pc, #56]	@ (8000808 <SystemInit+0x8c>)
 80007d0:	400a      	ands	r2, r1
 80007d2:	631a      	str	r2, [r3, #48]	@ 0x30
 80007d4:	4b07      	ldr	r3, [pc, #28]	@ (80007f4 <SystemInit+0x78>)
 80007d6:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80007d8:	4b06      	ldr	r3, [pc, #24]	@ (80007f4 <SystemInit+0x78>)
 80007da:	2101      	movs	r1, #1
 80007dc:	438a      	bics	r2, r1
 80007de:	635a      	str	r2, [r3, #52]	@ 0x34
 80007e0:	4b04      	ldr	r3, [pc, #16]	@ (80007f4 <SystemInit+0x78>)
 80007e2:	2200      	movs	r2, #0
 80007e4:	609a      	str	r2, [r3, #8]
 80007e6:	f7ff ff87 	bl	80006f8 <Set_Clocks_To_48MHz>
 80007ea:	f000 f89f 	bl	800092c <Init_USART2>
 80007ee:	46c0      	nop			@ (mov r8, r8)
 80007f0:	46bd      	mov	sp, r7
 80007f2:	bd80      	pop	{r7, pc}
 80007f4:	40021000 	.word	0x40021000
 80007f8:	08ffb80c 	.word	0x08ffb80c
 80007fc:	fef6ffff 	.word	0xfef6ffff
 8000800:	fffbffff 	.word	0xfffbffff
 8000804:	ffc0ffff 	.word	0xffc0ffff
 8000808:	fff0feac 	.word	0xfff0feac

0800080c <SystemCoreClockUpdate>:
 800080c:	b580      	push	{r7, lr}
 800080e:	b084      	sub	sp, #16
 8000810:	af00      	add	r7, sp, #0
 8000812:	2300      	movs	r3, #0
 8000814:	60fb      	str	r3, [r7, #12]
 8000816:	2300      	movs	r3, #0
 8000818:	60bb      	str	r3, [r7, #8]
 800081a:	2300      	movs	r3, #0
 800081c:	607b      	str	r3, [r7, #4]
 800081e:	2300      	movs	r3, #0
 8000820:	603b      	str	r3, [r7, #0]
 8000822:	4b3d      	ldr	r3, [pc, #244]	@ (8000918 <SystemCoreClockUpdate+0x10c>)
 8000824:	685b      	ldr	r3, [r3, #4]
 8000826:	220c      	movs	r2, #12
 8000828:	4013      	ands	r3, r2
 800082a:	60fb      	str	r3, [r7, #12]
 800082c:	68fb      	ldr	r3, [r7, #12]
 800082e:	2b0c      	cmp	r3, #12
 8000830:	d00f      	beq.n	8000852 <SystemCoreClockUpdate+0x46>
 8000832:	68fb      	ldr	r3, [r7, #12]
 8000834:	2b0c      	cmp	r3, #12
 8000836:	d859      	bhi.n	80008ec <SystemCoreClockUpdate+0xe0>
 8000838:	68fb      	ldr	r3, [r7, #12]
 800083a:	2b08      	cmp	r3, #8
 800083c:	d015      	beq.n	800086a <SystemCoreClockUpdate+0x5e>
 800083e:	68fb      	ldr	r3, [r7, #12]
 8000840:	2b08      	cmp	r3, #8
 8000842:	d853      	bhi.n	80008ec <SystemCoreClockUpdate+0xe0>
 8000844:	68fb      	ldr	r3, [r7, #12]
 8000846:	2b00      	cmp	r3, #0
 8000848:	d007      	beq.n	800085a <SystemCoreClockUpdate+0x4e>
 800084a:	68fb      	ldr	r3, [r7, #12]
 800084c:	2b04      	cmp	r3, #4
 800084e:	d008      	beq.n	8000862 <SystemCoreClockUpdate+0x56>
 8000850:	e04c      	b.n	80008ec <SystemCoreClockUpdate+0xe0>
 8000852:	4b32      	ldr	r3, [pc, #200]	@ (800091c <SystemCoreClockUpdate+0x110>)
 8000854:	4a32      	ldr	r2, [pc, #200]	@ (8000920 <SystemCoreClockUpdate+0x114>)
 8000856:	601a      	str	r2, [r3, #0]
 8000858:	e04c      	b.n	80008f4 <SystemCoreClockUpdate+0xe8>
 800085a:	4b30      	ldr	r3, [pc, #192]	@ (800091c <SystemCoreClockUpdate+0x110>)
 800085c:	4a31      	ldr	r2, [pc, #196]	@ (8000924 <SystemCoreClockUpdate+0x118>)
 800085e:	601a      	str	r2, [r3, #0]
 8000860:	e048      	b.n	80008f4 <SystemCoreClockUpdate+0xe8>
 8000862:	4b2e      	ldr	r3, [pc, #184]	@ (800091c <SystemCoreClockUpdate+0x110>)
 8000864:	4a2f      	ldr	r2, [pc, #188]	@ (8000924 <SystemCoreClockUpdate+0x118>)
 8000866:	601a      	str	r2, [r3, #0]
 8000868:	e044      	b.n	80008f4 <SystemCoreClockUpdate+0xe8>
 800086a:	4b2b      	ldr	r3, [pc, #172]	@ (8000918 <SystemCoreClockUpdate+0x10c>)
 800086c:	685a      	ldr	r2, [r3, #4]
 800086e:	23f0      	movs	r3, #240	@ 0xf0
 8000870:	039b      	lsls	r3, r3, #14
 8000872:	4013      	ands	r3, r2
 8000874:	60bb      	str	r3, [r7, #8]
 8000876:	4b28      	ldr	r3, [pc, #160]	@ (8000918 <SystemCoreClockUpdate+0x10c>)
 8000878:	685a      	ldr	r2, [r3, #4]
 800087a:	23c0      	movs	r3, #192	@ 0xc0
 800087c:	025b      	lsls	r3, r3, #9
 800087e:	4013      	ands	r3, r2
 8000880:	607b      	str	r3, [r7, #4]
 8000882:	68bb      	ldr	r3, [r7, #8]
 8000884:	0c9b      	lsrs	r3, r3, #18
 8000886:	3302      	adds	r3, #2
 8000888:	60bb      	str	r3, [r7, #8]
 800088a:	4b23      	ldr	r3, [pc, #140]	@ (8000918 <SystemCoreClockUpdate+0x10c>)
 800088c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800088e:	220f      	movs	r2, #15
 8000890:	4013      	ands	r3, r2
 8000892:	3301      	adds	r3, #1
 8000894:	603b      	str	r3, [r7, #0]
 8000896:	687a      	ldr	r2, [r7, #4]
 8000898:	2380      	movs	r3, #128	@ 0x80
 800089a:	025b      	lsls	r3, r3, #9
 800089c:	429a      	cmp	r2, r3
 800089e:	d10a      	bne.n	80008b6 <SystemCoreClockUpdate+0xaa>
 80008a0:	6839      	ldr	r1, [r7, #0]
 80008a2:	4820      	ldr	r0, [pc, #128]	@ (8000924 <SystemCoreClockUpdate+0x118>)
 80008a4:	f7ff fc3a 	bl	800011c <__udivsi3>
 80008a8:	0003      	movs	r3, r0
 80008aa:	001a      	movs	r2, r3
 80008ac:	68bb      	ldr	r3, [r7, #8]
 80008ae:	435a      	muls	r2, r3
 80008b0:	4b1a      	ldr	r3, [pc, #104]	@ (800091c <SystemCoreClockUpdate+0x110>)
 80008b2:	601a      	str	r2, [r3, #0]
 80008b4:	e01e      	b.n	80008f4 <SystemCoreClockUpdate+0xe8>
 80008b6:	687a      	ldr	r2, [r7, #4]
 80008b8:	23c0      	movs	r3, #192	@ 0xc0
 80008ba:	025b      	lsls	r3, r3, #9
 80008bc:	429a      	cmp	r2, r3
 80008be:	d10a      	bne.n	80008d6 <SystemCoreClockUpdate+0xca>
 80008c0:	6839      	ldr	r1, [r7, #0]
 80008c2:	4817      	ldr	r0, [pc, #92]	@ (8000920 <SystemCoreClockUpdate+0x114>)
 80008c4:	f7ff fc2a 	bl	800011c <__udivsi3>
 80008c8:	0003      	movs	r3, r0
 80008ca:	001a      	movs	r2, r3
 80008cc:	68bb      	ldr	r3, [r7, #8]
 80008ce:	435a      	muls	r2, r3
 80008d0:	4b12      	ldr	r3, [pc, #72]	@ (800091c <SystemCoreClockUpdate+0x110>)
 80008d2:	601a      	str	r2, [r3, #0]
 80008d4:	e00e      	b.n	80008f4 <SystemCoreClockUpdate+0xe8>
 80008d6:	6839      	ldr	r1, [r7, #0]
 80008d8:	4812      	ldr	r0, [pc, #72]	@ (8000924 <SystemCoreClockUpdate+0x118>)
 80008da:	f7ff fc1f 	bl	800011c <__udivsi3>
 80008de:	0003      	movs	r3, r0
 80008e0:	001a      	movs	r2, r3
 80008e2:	68bb      	ldr	r3, [r7, #8]
 80008e4:	435a      	muls	r2, r3
 80008e6:	4b0d      	ldr	r3, [pc, #52]	@ (800091c <SystemCoreClockUpdate+0x110>)
 80008e8:	601a      	str	r2, [r3, #0]
 80008ea:	e003      	b.n	80008f4 <SystemCoreClockUpdate+0xe8>
 80008ec:	4b0b      	ldr	r3, [pc, #44]	@ (800091c <SystemCoreClockUpdate+0x110>)
 80008ee:	4a0d      	ldr	r2, [pc, #52]	@ (8000924 <SystemCoreClockUpdate+0x118>)
 80008f0:	601a      	str	r2, [r3, #0]
 80008f2:	46c0      	nop			@ (mov r8, r8)
 80008f4:	4b08      	ldr	r3, [pc, #32]	@ (8000918 <SystemCoreClockUpdate+0x10c>)
 80008f6:	685b      	ldr	r3, [r3, #4]
 80008f8:	091b      	lsrs	r3, r3, #4
 80008fa:	220f      	movs	r2, #15
 80008fc:	4013      	ands	r3, r2
 80008fe:	4a0a      	ldr	r2, [pc, #40]	@ (8000928 <SystemCoreClockUpdate+0x11c>)
 8000900:	5cd3      	ldrb	r3, [r2, r3]
 8000902:	60fb      	str	r3, [r7, #12]
 8000904:	4b05      	ldr	r3, [pc, #20]	@ (800091c <SystemCoreClockUpdate+0x110>)
 8000906:	681a      	ldr	r2, [r3, #0]
 8000908:	68fb      	ldr	r3, [r7, #12]
 800090a:	40da      	lsrs	r2, r3
 800090c:	4b03      	ldr	r3, [pc, #12]	@ (800091c <SystemCoreClockUpdate+0x110>)
 800090e:	601a      	str	r2, [r3, #0]
 8000910:	46c0      	nop			@ (mov r8, r8)
 8000912:	46bd      	mov	sp, r7
 8000914:	b004      	add	sp, #16
 8000916:	bd80      	pop	{r7, pc}
 8000918:	40021000 	.word	0x40021000
 800091c:	20000000 	.word	0x20000000
 8000920:	02dc6c00 	.word	0x02dc6c00
 8000924:	007a1200 	.word	0x007a1200
 8000928:	08001a7c 	.word	0x08001a7c

0800092c <Init_USART2>:
 800092c:	b580      	push	{r7, lr}
 800092e:	af00      	add	r7, sp, #0
 8000930:	4b31      	ldr	r3, [pc, #196]	@ (80009f8 <Init_USART2+0xcc>)
 8000932:	69da      	ldr	r2, [r3, #28]
 8000934:	4b30      	ldr	r3, [pc, #192]	@ (80009f8 <Init_USART2+0xcc>)
 8000936:	2180      	movs	r1, #128	@ 0x80
 8000938:	0289      	lsls	r1, r1, #10
 800093a:	430a      	orrs	r2, r1
 800093c:	61da      	str	r2, [r3, #28]
 800093e:	4b2e      	ldr	r3, [pc, #184]	@ (80009f8 <Init_USART2+0xcc>)
 8000940:	695a      	ldr	r2, [r3, #20]
 8000942:	4b2d      	ldr	r3, [pc, #180]	@ (80009f8 <Init_USART2+0xcc>)
 8000944:	2180      	movs	r1, #128	@ 0x80
 8000946:	0289      	lsls	r1, r1, #10
 8000948:	430a      	orrs	r2, r1
 800094a:	615a      	str	r2, [r3, #20]
 800094c:	2390      	movs	r3, #144	@ 0x90
 800094e:	05db      	lsls	r3, r3, #23
 8000950:	681b      	ldr	r3, [r3, #0]
 8000952:	2230      	movs	r2, #48	@ 0x30
 8000954:	4393      	bics	r3, r2
 8000956:	001a      	movs	r2, r3
 8000958:	2390      	movs	r3, #144	@ 0x90
 800095a:	05db      	lsls	r3, r3, #23
 800095c:	2120      	movs	r1, #32
 800095e:	430a      	orrs	r2, r1
 8000960:	601a      	str	r2, [r3, #0]
 8000962:	2390      	movs	r3, #144	@ 0x90
 8000964:	05db      	lsls	r3, r3, #23
 8000966:	681b      	ldr	r3, [r3, #0]
 8000968:	22c0      	movs	r2, #192	@ 0xc0
 800096a:	4393      	bics	r3, r2
 800096c:	001a      	movs	r2, r3
 800096e:	2390      	movs	r3, #144	@ 0x90
 8000970:	05db      	lsls	r3, r3, #23
 8000972:	2180      	movs	r1, #128	@ 0x80
 8000974:	430a      	orrs	r2, r1
 8000976:	601a      	str	r2, [r3, #0]
 8000978:	2390      	movs	r3, #144	@ 0x90
 800097a:	05db      	lsls	r3, r3, #23
 800097c:	6a1b      	ldr	r3, [r3, #32]
 800097e:	4a1f      	ldr	r2, [pc, #124]	@ (80009fc <Init_USART2+0xd0>)
 8000980:	401a      	ands	r2, r3
 8000982:	2390      	movs	r3, #144	@ 0x90
 8000984:	05db      	lsls	r3, r3, #23
 8000986:	2180      	movs	r1, #128	@ 0x80
 8000988:	0049      	lsls	r1, r1, #1
 800098a:	430a      	orrs	r2, r1
 800098c:	621a      	str	r2, [r3, #32]
 800098e:	2390      	movs	r3, #144	@ 0x90
 8000990:	05db      	lsls	r3, r3, #23
 8000992:	6a1b      	ldr	r3, [r3, #32]
 8000994:	4a1a      	ldr	r2, [pc, #104]	@ (8000a00 <Init_USART2+0xd4>)
 8000996:	401a      	ands	r2, r3
 8000998:	2390      	movs	r3, #144	@ 0x90
 800099a:	05db      	lsls	r3, r3, #23
 800099c:	2180      	movs	r1, #128	@ 0x80
 800099e:	0149      	lsls	r1, r1, #5
 80009a0:	430a      	orrs	r2, r1
 80009a2:	621a      	str	r2, [r3, #32]
 80009a4:	4b17      	ldr	r3, [pc, #92]	@ (8000a04 <Init_USART2+0xd8>)
 80009a6:	4a18      	ldr	r2, [pc, #96]	@ (8000a08 <Init_USART2+0xdc>)
 80009a8:	60da      	str	r2, [r3, #12]
 80009aa:	4b16      	ldr	r3, [pc, #88]	@ (8000a04 <Init_USART2+0xd8>)
 80009ac:	681a      	ldr	r2, [r3, #0]
 80009ae:	4b15      	ldr	r3, [pc, #84]	@ (8000a04 <Init_USART2+0xd8>)
 80009b0:	4916      	ldr	r1, [pc, #88]	@ (8000a0c <Init_USART2+0xe0>)
 80009b2:	400a      	ands	r2, r1
 80009b4:	601a      	str	r2, [r3, #0]
 80009b6:	4b13      	ldr	r3, [pc, #76]	@ (8000a04 <Init_USART2+0xd8>)
 80009b8:	681a      	ldr	r2, [r3, #0]
 80009ba:	4b12      	ldr	r3, [pc, #72]	@ (8000a04 <Init_USART2+0xd8>)
 80009bc:	4914      	ldr	r1, [pc, #80]	@ (8000a10 <Init_USART2+0xe4>)
 80009be:	400a      	ands	r2, r1
 80009c0:	601a      	str	r2, [r3, #0]
 80009c2:	4b10      	ldr	r3, [pc, #64]	@ (8000a04 <Init_USART2+0xd8>)
 80009c4:	685a      	ldr	r2, [r3, #4]
 80009c6:	4b0f      	ldr	r3, [pc, #60]	@ (8000a04 <Init_USART2+0xd8>)
 80009c8:	4912      	ldr	r1, [pc, #72]	@ (8000a14 <Init_USART2+0xe8>)
 80009ca:	400a      	ands	r2, r1
 80009cc:	605a      	str	r2, [r3, #4]
 80009ce:	4b0d      	ldr	r3, [pc, #52]	@ (8000a04 <Init_USART2+0xd8>)
 80009d0:	681a      	ldr	r2, [r3, #0]
 80009d2:	4b0c      	ldr	r3, [pc, #48]	@ (8000a04 <Init_USART2+0xd8>)
 80009d4:	2108      	movs	r1, #8
 80009d6:	430a      	orrs	r2, r1
 80009d8:	601a      	str	r2, [r3, #0]
 80009da:	4b0a      	ldr	r3, [pc, #40]	@ (8000a04 <Init_USART2+0xd8>)
 80009dc:	681a      	ldr	r2, [r3, #0]
 80009de:	4b09      	ldr	r3, [pc, #36]	@ (8000a04 <Init_USART2+0xd8>)
 80009e0:	2104      	movs	r1, #4
 80009e2:	430a      	orrs	r2, r1
 80009e4:	601a      	str	r2, [r3, #0]
 80009e6:	4b07      	ldr	r3, [pc, #28]	@ (8000a04 <Init_USART2+0xd8>)
 80009e8:	681a      	ldr	r2, [r3, #0]
 80009ea:	4b06      	ldr	r3, [pc, #24]	@ (8000a04 <Init_USART2+0xd8>)
 80009ec:	2101      	movs	r1, #1
 80009ee:	430a      	orrs	r2, r1
 80009f0:	601a      	str	r2, [r3, #0]
 80009f2:	46c0      	nop			@ (mov r8, r8)
 80009f4:	46bd      	mov	sp, r7
 80009f6:	bd80      	pop	{r7, pc}
 80009f8:	40021000 	.word	0x40021000
 80009fc:	fffff0ff 	.word	0xfffff0ff
 8000a00:	ffff0fff 	.word	0xffff0fff
 8000a04:	40004400 	.word	0x40004400
 8000a08:	000009c4 	.word	0x000009c4
 8000a0c:	fffffbff 	.word	0xfffffbff
 8000a10:	efffefff 	.word	0xefffefff
 8000a14:	ffffcfff 	.word	0xffffcfff

08000a18 <UART_Transmit>:
 8000a18:	b580      	push	{r7, lr}
 8000a1a:	b082      	sub	sp, #8
 8000a1c:	af00      	add	r7, sp, #0
 8000a1e:	0002      	movs	r2, r0
 8000a20:	1dfb      	adds	r3, r7, #7
 8000a22:	701a      	strb	r2, [r3, #0]
 8000a24:	46c0      	nop			@ (mov r8, r8)
 8000a26:	4b07      	ldr	r3, [pc, #28]	@ (8000a44 <UART_Transmit+0x2c>)
 8000a28:	69db      	ldr	r3, [r3, #28]
 8000a2a:	2280      	movs	r2, #128	@ 0x80
 8000a2c:	4013      	ands	r3, r2
 8000a2e:	d0fa      	beq.n	8000a26 <UART_Transmit+0xe>
 8000a30:	4a04      	ldr	r2, [pc, #16]	@ (8000a44 <UART_Transmit+0x2c>)
 8000a32:	1dfb      	adds	r3, r7, #7
 8000a34:	781b      	ldrb	r3, [r3, #0]
 8000a36:	b29b      	uxth	r3, r3
 8000a38:	8513      	strh	r3, [r2, #40]	@ 0x28
 8000a3a:	46c0      	nop			@ (mov r8, r8)
 8000a3c:	46bd      	mov	sp, r7
 8000a3e:	b002      	add	sp, #8
 8000a40:	bd80      	pop	{r7, pc}
 8000a42:	46c0      	nop			@ (mov r8, r8)
 8000a44:	40004400 	.word	0x40004400

08000a48 <__io_putchar>:
 8000a48:	b580      	push	{r7, lr}
 8000a4a:	b082      	sub	sp, #8
 8000a4c:	af00      	add	r7, sp, #0
 8000a4e:	6078      	str	r0, [r7, #4]
 8000a50:	687b      	ldr	r3, [r7, #4]
 8000a52:	b2db      	uxtb	r3, r3
 8000a54:	0018      	movs	r0, r3
 8000a56:	f7ff ffdf 	bl	8000a18 <UART_Transmit>
 8000a5a:	687b      	ldr	r3, [r7, #4]
 8000a5c:	0018      	movs	r0, r3
 8000a5e:	46bd      	mov	sp, r7
 8000a60:	b002      	add	sp, #8
 8000a62:	bd80      	pop	{r7, pc}

08000a64 <std>:
 8000a64:	2300      	movs	r3, #0
 8000a66:	b510      	push	{r4, lr}
 8000a68:	0004      	movs	r4, r0
 8000a6a:	6003      	str	r3, [r0, #0]
 8000a6c:	6043      	str	r3, [r0, #4]
 8000a6e:	6083      	str	r3, [r0, #8]
 8000a70:	8181      	strh	r1, [r0, #12]
 8000a72:	6643      	str	r3, [r0, #100]	@ 0x64
 8000a74:	81c2      	strh	r2, [r0, #14]
 8000a76:	6103      	str	r3, [r0, #16]
 8000a78:	6143      	str	r3, [r0, #20]
 8000a7a:	6183      	str	r3, [r0, #24]
 8000a7c:	0019      	movs	r1, r3
 8000a7e:	2208      	movs	r2, #8
 8000a80:	305c      	adds	r0, #92	@ 0x5c
 8000a82:	f000 fa0f 	bl	8000ea4 <memset>
 8000a86:	4b0b      	ldr	r3, [pc, #44]	@ (8000ab4 <std+0x50>)
 8000a88:	6224      	str	r4, [r4, #32]
 8000a8a:	6263      	str	r3, [r4, #36]	@ 0x24
 8000a8c:	4b0a      	ldr	r3, [pc, #40]	@ (8000ab8 <std+0x54>)
 8000a8e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000a90:	4b0a      	ldr	r3, [pc, #40]	@ (8000abc <std+0x58>)
 8000a92:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000a94:	4b0a      	ldr	r3, [pc, #40]	@ (8000ac0 <std+0x5c>)
 8000a96:	6323      	str	r3, [r4, #48]	@ 0x30
 8000a98:	4b0a      	ldr	r3, [pc, #40]	@ (8000ac4 <std+0x60>)
 8000a9a:	429c      	cmp	r4, r3
 8000a9c:	d005      	beq.n	8000aaa <std+0x46>
 8000a9e:	4b0a      	ldr	r3, [pc, #40]	@ (8000ac8 <std+0x64>)
 8000aa0:	429c      	cmp	r4, r3
 8000aa2:	d002      	beq.n	8000aaa <std+0x46>
 8000aa4:	4b09      	ldr	r3, [pc, #36]	@ (8000acc <std+0x68>)
 8000aa6:	429c      	cmp	r4, r3
 8000aa8:	d103      	bne.n	8000ab2 <std+0x4e>
 8000aaa:	0020      	movs	r0, r4
 8000aac:	3058      	adds	r0, #88	@ 0x58
 8000aae:	f000 fa79 	bl	8000fa4 <__retarget_lock_init_recursive>
 8000ab2:	bd10      	pop	{r4, pc}
 8000ab4:	08000ccd 	.word	0x08000ccd
 8000ab8:	08000cf5 	.word	0x08000cf5
 8000abc:	08000d2d 	.word	0x08000d2d
 8000ac0:	08000d59 	.word	0x08000d59
 8000ac4:	20000080 	.word	0x20000080
 8000ac8:	200000e8 	.word	0x200000e8
 8000acc:	20000150 	.word	0x20000150

08000ad0 <stdio_exit_handler>:
 8000ad0:	b510      	push	{r4, lr}
 8000ad2:	4a03      	ldr	r2, [pc, #12]	@ (8000ae0 <stdio_exit_handler+0x10>)
 8000ad4:	4903      	ldr	r1, [pc, #12]	@ (8000ae4 <stdio_exit_handler+0x14>)
 8000ad6:	4804      	ldr	r0, [pc, #16]	@ (8000ae8 <stdio_exit_handler+0x18>)
 8000ad8:	f000 f86c 	bl	8000bb4 <_fwalk_sglue>
 8000adc:	bd10      	pop	{r4, pc}
 8000ade:	46c0      	nop			@ (mov r8, r8)
 8000ae0:	20000004 	.word	0x20000004
 8000ae4:	08001835 	.word	0x08001835
 8000ae8:	20000014 	.word	0x20000014

08000aec <cleanup_stdio>:
 8000aec:	6841      	ldr	r1, [r0, #4]
 8000aee:	4b0b      	ldr	r3, [pc, #44]	@ (8000b1c <cleanup_stdio+0x30>)
 8000af0:	b510      	push	{r4, lr}
 8000af2:	0004      	movs	r4, r0
 8000af4:	4299      	cmp	r1, r3
 8000af6:	d001      	beq.n	8000afc <cleanup_stdio+0x10>
 8000af8:	f000 fe9c 	bl	8001834 <_fflush_r>
 8000afc:	68a1      	ldr	r1, [r4, #8]
 8000afe:	4b08      	ldr	r3, [pc, #32]	@ (8000b20 <cleanup_stdio+0x34>)
 8000b00:	4299      	cmp	r1, r3
 8000b02:	d002      	beq.n	8000b0a <cleanup_stdio+0x1e>
 8000b04:	0020      	movs	r0, r4
 8000b06:	f000 fe95 	bl	8001834 <_fflush_r>
 8000b0a:	68e1      	ldr	r1, [r4, #12]
 8000b0c:	4b05      	ldr	r3, [pc, #20]	@ (8000b24 <cleanup_stdio+0x38>)
 8000b0e:	4299      	cmp	r1, r3
 8000b10:	d002      	beq.n	8000b18 <cleanup_stdio+0x2c>
 8000b12:	0020      	movs	r0, r4
 8000b14:	f000 fe8e 	bl	8001834 <_fflush_r>
 8000b18:	bd10      	pop	{r4, pc}
 8000b1a:	46c0      	nop			@ (mov r8, r8)
 8000b1c:	20000080 	.word	0x20000080
 8000b20:	200000e8 	.word	0x200000e8
 8000b24:	20000150 	.word	0x20000150

08000b28 <global_stdio_init.part.0>:
 8000b28:	b510      	push	{r4, lr}
 8000b2a:	4b09      	ldr	r3, [pc, #36]	@ (8000b50 <global_stdio_init.part.0+0x28>)
 8000b2c:	4a09      	ldr	r2, [pc, #36]	@ (8000b54 <global_stdio_init.part.0+0x2c>)
 8000b2e:	2104      	movs	r1, #4
 8000b30:	601a      	str	r2, [r3, #0]
 8000b32:	4809      	ldr	r0, [pc, #36]	@ (8000b58 <global_stdio_init.part.0+0x30>)
 8000b34:	2200      	movs	r2, #0
 8000b36:	f7ff ff95 	bl	8000a64 <std>
 8000b3a:	2201      	movs	r2, #1
 8000b3c:	2109      	movs	r1, #9
 8000b3e:	4807      	ldr	r0, [pc, #28]	@ (8000b5c <global_stdio_init.part.0+0x34>)
 8000b40:	f7ff ff90 	bl	8000a64 <std>
 8000b44:	2202      	movs	r2, #2
 8000b46:	2112      	movs	r1, #18
 8000b48:	4805      	ldr	r0, [pc, #20]	@ (8000b60 <global_stdio_init.part.0+0x38>)
 8000b4a:	f7ff ff8b 	bl	8000a64 <std>
 8000b4e:	bd10      	pop	{r4, pc}
 8000b50:	200001b8 	.word	0x200001b8
 8000b54:	08000ad1 	.word	0x08000ad1
 8000b58:	20000080 	.word	0x20000080
 8000b5c:	200000e8 	.word	0x200000e8
 8000b60:	20000150 	.word	0x20000150

08000b64 <__sfp_lock_acquire>:
 8000b64:	b510      	push	{r4, lr}
 8000b66:	4802      	ldr	r0, [pc, #8]	@ (8000b70 <__sfp_lock_acquire+0xc>)
 8000b68:	f000 fa1d 	bl	8000fa6 <__retarget_lock_acquire_recursive>
 8000b6c:	bd10      	pop	{r4, pc}
 8000b6e:	46c0      	nop			@ (mov r8, r8)
 8000b70:	200001c1 	.word	0x200001c1

08000b74 <__sfp_lock_release>:
 8000b74:	b510      	push	{r4, lr}
 8000b76:	4802      	ldr	r0, [pc, #8]	@ (8000b80 <__sfp_lock_release+0xc>)
 8000b78:	f000 fa16 	bl	8000fa8 <__retarget_lock_release_recursive>
 8000b7c:	bd10      	pop	{r4, pc}
 8000b7e:	46c0      	nop			@ (mov r8, r8)
 8000b80:	200001c1 	.word	0x200001c1

08000b84 <__sinit>:
 8000b84:	b510      	push	{r4, lr}
 8000b86:	0004      	movs	r4, r0
 8000b88:	f7ff ffec 	bl	8000b64 <__sfp_lock_acquire>
 8000b8c:	6a23      	ldr	r3, [r4, #32]
 8000b8e:	2b00      	cmp	r3, #0
 8000b90:	d002      	beq.n	8000b98 <__sinit+0x14>
 8000b92:	f7ff ffef 	bl	8000b74 <__sfp_lock_release>
 8000b96:	bd10      	pop	{r4, pc}
 8000b98:	4b04      	ldr	r3, [pc, #16]	@ (8000bac <__sinit+0x28>)
 8000b9a:	6223      	str	r3, [r4, #32]
 8000b9c:	4b04      	ldr	r3, [pc, #16]	@ (8000bb0 <__sinit+0x2c>)
 8000b9e:	681b      	ldr	r3, [r3, #0]
 8000ba0:	2b00      	cmp	r3, #0
 8000ba2:	d1f6      	bne.n	8000b92 <__sinit+0xe>
 8000ba4:	f7ff ffc0 	bl	8000b28 <global_stdio_init.part.0>
 8000ba8:	e7f3      	b.n	8000b92 <__sinit+0xe>
 8000baa:	46c0      	nop			@ (mov r8, r8)
 8000bac:	08000aed 	.word	0x08000aed
 8000bb0:	200001b8 	.word	0x200001b8

08000bb4 <_fwalk_sglue>:
 8000bb4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000bb6:	0014      	movs	r4, r2
 8000bb8:	2600      	movs	r6, #0
 8000bba:	9000      	str	r0, [sp, #0]
 8000bbc:	9101      	str	r1, [sp, #4]
 8000bbe:	68a5      	ldr	r5, [r4, #8]
 8000bc0:	6867      	ldr	r7, [r4, #4]
 8000bc2:	3f01      	subs	r7, #1
 8000bc4:	d504      	bpl.n	8000bd0 <_fwalk_sglue+0x1c>
 8000bc6:	6824      	ldr	r4, [r4, #0]
 8000bc8:	2c00      	cmp	r4, #0
 8000bca:	d1f8      	bne.n	8000bbe <_fwalk_sglue+0xa>
 8000bcc:	0030      	movs	r0, r6
 8000bce:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000bd0:	89ab      	ldrh	r3, [r5, #12]
 8000bd2:	2b01      	cmp	r3, #1
 8000bd4:	d908      	bls.n	8000be8 <_fwalk_sglue+0x34>
 8000bd6:	220e      	movs	r2, #14
 8000bd8:	5eab      	ldrsh	r3, [r5, r2]
 8000bda:	3301      	adds	r3, #1
 8000bdc:	d004      	beq.n	8000be8 <_fwalk_sglue+0x34>
 8000bde:	0029      	movs	r1, r5
 8000be0:	9800      	ldr	r0, [sp, #0]
 8000be2:	9b01      	ldr	r3, [sp, #4]
 8000be4:	4798      	blx	r3
 8000be6:	4306      	orrs	r6, r0
 8000be8:	3568      	adds	r5, #104	@ 0x68
 8000bea:	e7ea      	b.n	8000bc2 <_fwalk_sglue+0xe>

08000bec <iprintf>:
 8000bec:	b40f      	push	{r0, r1, r2, r3}
 8000bee:	b507      	push	{r0, r1, r2, lr}
 8000bf0:	4905      	ldr	r1, [pc, #20]	@ (8000c08 <iprintf+0x1c>)
 8000bf2:	ab04      	add	r3, sp, #16
 8000bf4:	6808      	ldr	r0, [r1, #0]
 8000bf6:	cb04      	ldmia	r3!, {r2}
 8000bf8:	6881      	ldr	r1, [r0, #8]
 8000bfa:	9301      	str	r3, [sp, #4]
 8000bfc:	f000 fafa 	bl	80011f4 <_vfiprintf_r>
 8000c00:	b003      	add	sp, #12
 8000c02:	bc08      	pop	{r3}
 8000c04:	b004      	add	sp, #16
 8000c06:	4718      	bx	r3
 8000c08:	20000010 	.word	0x20000010

08000c0c <_puts_r>:
 8000c0c:	6a03      	ldr	r3, [r0, #32]
 8000c0e:	b570      	push	{r4, r5, r6, lr}
 8000c10:	0005      	movs	r5, r0
 8000c12:	000e      	movs	r6, r1
 8000c14:	6884      	ldr	r4, [r0, #8]
 8000c16:	2b00      	cmp	r3, #0
 8000c18:	d101      	bne.n	8000c1e <_puts_r+0x12>
 8000c1a:	f7ff ffb3 	bl	8000b84 <__sinit>
 8000c1e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000c20:	07db      	lsls	r3, r3, #31
 8000c22:	d405      	bmi.n	8000c30 <_puts_r+0x24>
 8000c24:	89a3      	ldrh	r3, [r4, #12]
 8000c26:	059b      	lsls	r3, r3, #22
 8000c28:	d402      	bmi.n	8000c30 <_puts_r+0x24>
 8000c2a:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c2c:	f000 f9bb 	bl	8000fa6 <__retarget_lock_acquire_recursive>
 8000c30:	89a3      	ldrh	r3, [r4, #12]
 8000c32:	071b      	lsls	r3, r3, #28
 8000c34:	d502      	bpl.n	8000c3c <_puts_r+0x30>
 8000c36:	6923      	ldr	r3, [r4, #16]
 8000c38:	2b00      	cmp	r3, #0
 8000c3a:	d11f      	bne.n	8000c7c <_puts_r+0x70>
 8000c3c:	0021      	movs	r1, r4
 8000c3e:	0028      	movs	r0, r5
 8000c40:	f000 f8d2 	bl	8000de8 <__swsetup_r>
 8000c44:	2800      	cmp	r0, #0
 8000c46:	d019      	beq.n	8000c7c <_puts_r+0x70>
 8000c48:	2501      	movs	r5, #1
 8000c4a:	426d      	negs	r5, r5
 8000c4c:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000c4e:	07db      	lsls	r3, r3, #31
 8000c50:	d405      	bmi.n	8000c5e <_puts_r+0x52>
 8000c52:	89a3      	ldrh	r3, [r4, #12]
 8000c54:	059b      	lsls	r3, r3, #22
 8000c56:	d402      	bmi.n	8000c5e <_puts_r+0x52>
 8000c58:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c5a:	f000 f9a5 	bl	8000fa8 <__retarget_lock_release_recursive>
 8000c5e:	0028      	movs	r0, r5
 8000c60:	bd70      	pop	{r4, r5, r6, pc}
 8000c62:	3601      	adds	r6, #1
 8000c64:	60a3      	str	r3, [r4, #8]
 8000c66:	2b00      	cmp	r3, #0
 8000c68:	da04      	bge.n	8000c74 <_puts_r+0x68>
 8000c6a:	69a2      	ldr	r2, [r4, #24]
 8000c6c:	429a      	cmp	r2, r3
 8000c6e:	dc16      	bgt.n	8000c9e <_puts_r+0x92>
 8000c70:	290a      	cmp	r1, #10
 8000c72:	d014      	beq.n	8000c9e <_puts_r+0x92>
 8000c74:	6823      	ldr	r3, [r4, #0]
 8000c76:	1c5a      	adds	r2, r3, #1
 8000c78:	6022      	str	r2, [r4, #0]
 8000c7a:	7019      	strb	r1, [r3, #0]
 8000c7c:	68a3      	ldr	r3, [r4, #8]
 8000c7e:	7831      	ldrb	r1, [r6, #0]
 8000c80:	3b01      	subs	r3, #1
 8000c82:	2900      	cmp	r1, #0
 8000c84:	d1ed      	bne.n	8000c62 <_puts_r+0x56>
 8000c86:	60a3      	str	r3, [r4, #8]
 8000c88:	2b00      	cmp	r3, #0
 8000c8a:	da0f      	bge.n	8000cac <_puts_r+0xa0>
 8000c8c:	0022      	movs	r2, r4
 8000c8e:	0028      	movs	r0, r5
 8000c90:	310a      	adds	r1, #10
 8000c92:	f000 f867 	bl	8000d64 <__swbuf_r>
 8000c96:	3001      	adds	r0, #1
 8000c98:	d0d6      	beq.n	8000c48 <_puts_r+0x3c>
 8000c9a:	250a      	movs	r5, #10
 8000c9c:	e7d6      	b.n	8000c4c <_puts_r+0x40>
 8000c9e:	0022      	movs	r2, r4
 8000ca0:	0028      	movs	r0, r5
 8000ca2:	f000 f85f 	bl	8000d64 <__swbuf_r>
 8000ca6:	3001      	adds	r0, #1
 8000ca8:	d1e8      	bne.n	8000c7c <_puts_r+0x70>
 8000caa:	e7cd      	b.n	8000c48 <_puts_r+0x3c>
 8000cac:	6823      	ldr	r3, [r4, #0]
 8000cae:	1c5a      	adds	r2, r3, #1
 8000cb0:	6022      	str	r2, [r4, #0]
 8000cb2:	220a      	movs	r2, #10
 8000cb4:	701a      	strb	r2, [r3, #0]
 8000cb6:	e7f0      	b.n	8000c9a <_puts_r+0x8e>

08000cb8 <puts>:
 8000cb8:	b510      	push	{r4, lr}
 8000cba:	4b03      	ldr	r3, [pc, #12]	@ (8000cc8 <puts+0x10>)
 8000cbc:	0001      	movs	r1, r0
 8000cbe:	6818      	ldr	r0, [r3, #0]
 8000cc0:	f7ff ffa4 	bl	8000c0c <_puts_r>
 8000cc4:	bd10      	pop	{r4, pc}
 8000cc6:	46c0      	nop			@ (mov r8, r8)
 8000cc8:	20000010 	.word	0x20000010

08000ccc <__sread>:
 8000ccc:	b570      	push	{r4, r5, r6, lr}
 8000cce:	000c      	movs	r4, r1
 8000cd0:	250e      	movs	r5, #14
 8000cd2:	5f49      	ldrsh	r1, [r1, r5]
 8000cd4:	f000 f914 	bl	8000f00 <_read_r>
 8000cd8:	2800      	cmp	r0, #0
 8000cda:	db03      	blt.n	8000ce4 <__sread+0x18>
 8000cdc:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8000cde:	181b      	adds	r3, r3, r0
 8000ce0:	6563      	str	r3, [r4, #84]	@ 0x54
 8000ce2:	bd70      	pop	{r4, r5, r6, pc}
 8000ce4:	89a3      	ldrh	r3, [r4, #12]
 8000ce6:	4a02      	ldr	r2, [pc, #8]	@ (8000cf0 <__sread+0x24>)
 8000ce8:	4013      	ands	r3, r2
 8000cea:	81a3      	strh	r3, [r4, #12]
 8000cec:	e7f9      	b.n	8000ce2 <__sread+0x16>
 8000cee:	46c0      	nop			@ (mov r8, r8)
 8000cf0:	ffffefff 	.word	0xffffefff

08000cf4 <__swrite>:
 8000cf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000cf6:	001f      	movs	r7, r3
 8000cf8:	898b      	ldrh	r3, [r1, #12]
 8000cfa:	0005      	movs	r5, r0
 8000cfc:	000c      	movs	r4, r1
 8000cfe:	0016      	movs	r6, r2
 8000d00:	05db      	lsls	r3, r3, #23
 8000d02:	d505      	bpl.n	8000d10 <__swrite+0x1c>
 8000d04:	230e      	movs	r3, #14
 8000d06:	5ec9      	ldrsh	r1, [r1, r3]
 8000d08:	2200      	movs	r2, #0
 8000d0a:	2302      	movs	r3, #2
 8000d0c:	f000 f8e4 	bl	8000ed8 <_lseek_r>
 8000d10:	89a3      	ldrh	r3, [r4, #12]
 8000d12:	4a05      	ldr	r2, [pc, #20]	@ (8000d28 <__swrite+0x34>)
 8000d14:	0028      	movs	r0, r5
 8000d16:	4013      	ands	r3, r2
 8000d18:	81a3      	strh	r3, [r4, #12]
 8000d1a:	0032      	movs	r2, r6
 8000d1c:	230e      	movs	r3, #14
 8000d1e:	5ee1      	ldrsh	r1, [r4, r3]
 8000d20:	003b      	movs	r3, r7
 8000d22:	f000 f901 	bl	8000f28 <_write_r>
 8000d26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d28:	ffffefff 	.word	0xffffefff

08000d2c <__sseek>:
 8000d2c:	b570      	push	{r4, r5, r6, lr}
 8000d2e:	000c      	movs	r4, r1
 8000d30:	250e      	movs	r5, #14
 8000d32:	5f49      	ldrsh	r1, [r1, r5]
 8000d34:	f000 f8d0 	bl	8000ed8 <_lseek_r>
 8000d38:	89a3      	ldrh	r3, [r4, #12]
 8000d3a:	1c42      	adds	r2, r0, #1
 8000d3c:	d103      	bne.n	8000d46 <__sseek+0x1a>
 8000d3e:	4a05      	ldr	r2, [pc, #20]	@ (8000d54 <__sseek+0x28>)
 8000d40:	4013      	ands	r3, r2
 8000d42:	81a3      	strh	r3, [r4, #12]
 8000d44:	bd70      	pop	{r4, r5, r6, pc}
 8000d46:	2280      	movs	r2, #128	@ 0x80
 8000d48:	0152      	lsls	r2, r2, #5
 8000d4a:	4313      	orrs	r3, r2
 8000d4c:	81a3      	strh	r3, [r4, #12]
 8000d4e:	6560      	str	r0, [r4, #84]	@ 0x54
 8000d50:	e7f8      	b.n	8000d44 <__sseek+0x18>
 8000d52:	46c0      	nop			@ (mov r8, r8)
 8000d54:	ffffefff 	.word	0xffffefff

08000d58 <__sclose>:
 8000d58:	b510      	push	{r4, lr}
 8000d5a:	230e      	movs	r3, #14
 8000d5c:	5ec9      	ldrsh	r1, [r1, r3]
 8000d5e:	f000 f8a9 	bl	8000eb4 <_close_r>
 8000d62:	bd10      	pop	{r4, pc}

08000d64 <__swbuf_r>:
 8000d64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d66:	0006      	movs	r6, r0
 8000d68:	000d      	movs	r5, r1
 8000d6a:	0014      	movs	r4, r2
 8000d6c:	2800      	cmp	r0, #0
 8000d6e:	d004      	beq.n	8000d7a <__swbuf_r+0x16>
 8000d70:	6a03      	ldr	r3, [r0, #32]
 8000d72:	2b00      	cmp	r3, #0
 8000d74:	d101      	bne.n	8000d7a <__swbuf_r+0x16>
 8000d76:	f7ff ff05 	bl	8000b84 <__sinit>
 8000d7a:	69a3      	ldr	r3, [r4, #24]
 8000d7c:	60a3      	str	r3, [r4, #8]
 8000d7e:	89a3      	ldrh	r3, [r4, #12]
 8000d80:	071b      	lsls	r3, r3, #28
 8000d82:	d502      	bpl.n	8000d8a <__swbuf_r+0x26>
 8000d84:	6923      	ldr	r3, [r4, #16]
 8000d86:	2b00      	cmp	r3, #0
 8000d88:	d109      	bne.n	8000d9e <__swbuf_r+0x3a>
 8000d8a:	0021      	movs	r1, r4
 8000d8c:	0030      	movs	r0, r6
 8000d8e:	f000 f82b 	bl	8000de8 <__swsetup_r>
 8000d92:	2800      	cmp	r0, #0
 8000d94:	d003      	beq.n	8000d9e <__swbuf_r+0x3a>
 8000d96:	2501      	movs	r5, #1
 8000d98:	426d      	negs	r5, r5
 8000d9a:	0028      	movs	r0, r5
 8000d9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d9e:	6923      	ldr	r3, [r4, #16]
 8000da0:	6820      	ldr	r0, [r4, #0]
 8000da2:	b2ef      	uxtb	r7, r5
 8000da4:	1ac0      	subs	r0, r0, r3
 8000da6:	6963      	ldr	r3, [r4, #20]
 8000da8:	b2ed      	uxtb	r5, r5
 8000daa:	4283      	cmp	r3, r0
 8000dac:	dc05      	bgt.n	8000dba <__swbuf_r+0x56>
 8000dae:	0021      	movs	r1, r4
 8000db0:	0030      	movs	r0, r6
 8000db2:	f000 fd3f 	bl	8001834 <_fflush_r>
 8000db6:	2800      	cmp	r0, #0
 8000db8:	d1ed      	bne.n	8000d96 <__swbuf_r+0x32>
 8000dba:	68a3      	ldr	r3, [r4, #8]
 8000dbc:	3001      	adds	r0, #1
 8000dbe:	3b01      	subs	r3, #1
 8000dc0:	60a3      	str	r3, [r4, #8]
 8000dc2:	6823      	ldr	r3, [r4, #0]
 8000dc4:	1c5a      	adds	r2, r3, #1
 8000dc6:	6022      	str	r2, [r4, #0]
 8000dc8:	701f      	strb	r7, [r3, #0]
 8000dca:	6963      	ldr	r3, [r4, #20]
 8000dcc:	4283      	cmp	r3, r0
 8000dce:	d004      	beq.n	8000dda <__swbuf_r+0x76>
 8000dd0:	89a3      	ldrh	r3, [r4, #12]
 8000dd2:	07db      	lsls	r3, r3, #31
 8000dd4:	d5e1      	bpl.n	8000d9a <__swbuf_r+0x36>
 8000dd6:	2d0a      	cmp	r5, #10
 8000dd8:	d1df      	bne.n	8000d9a <__swbuf_r+0x36>
 8000dda:	0021      	movs	r1, r4
 8000ddc:	0030      	movs	r0, r6
 8000dde:	f000 fd29 	bl	8001834 <_fflush_r>
 8000de2:	2800      	cmp	r0, #0
 8000de4:	d0d9      	beq.n	8000d9a <__swbuf_r+0x36>
 8000de6:	e7d6      	b.n	8000d96 <__swbuf_r+0x32>

08000de8 <__swsetup_r>:
 8000de8:	4b2d      	ldr	r3, [pc, #180]	@ (8000ea0 <__swsetup_r+0xb8>)
 8000dea:	b570      	push	{r4, r5, r6, lr}
 8000dec:	0005      	movs	r5, r0
 8000dee:	6818      	ldr	r0, [r3, #0]
 8000df0:	000c      	movs	r4, r1
 8000df2:	2800      	cmp	r0, #0
 8000df4:	d004      	beq.n	8000e00 <__swsetup_r+0x18>
 8000df6:	6a03      	ldr	r3, [r0, #32]
 8000df8:	2b00      	cmp	r3, #0
 8000dfa:	d101      	bne.n	8000e00 <__swsetup_r+0x18>
 8000dfc:	f7ff fec2 	bl	8000b84 <__sinit>
 8000e00:	230c      	movs	r3, #12
 8000e02:	5ee2      	ldrsh	r2, [r4, r3]
 8000e04:	0713      	lsls	r3, r2, #28
 8000e06:	d423      	bmi.n	8000e50 <__swsetup_r+0x68>
 8000e08:	06d3      	lsls	r3, r2, #27
 8000e0a:	d407      	bmi.n	8000e1c <__swsetup_r+0x34>
 8000e0c:	2309      	movs	r3, #9
 8000e0e:	602b      	str	r3, [r5, #0]
 8000e10:	2340      	movs	r3, #64	@ 0x40
 8000e12:	2001      	movs	r0, #1
 8000e14:	4313      	orrs	r3, r2
 8000e16:	81a3      	strh	r3, [r4, #12]
 8000e18:	4240      	negs	r0, r0
 8000e1a:	e03a      	b.n	8000e92 <__swsetup_r+0xaa>
 8000e1c:	0752      	lsls	r2, r2, #29
 8000e1e:	d513      	bpl.n	8000e48 <__swsetup_r+0x60>
 8000e20:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000e22:	2900      	cmp	r1, #0
 8000e24:	d008      	beq.n	8000e38 <__swsetup_r+0x50>
 8000e26:	0023      	movs	r3, r4
 8000e28:	3344      	adds	r3, #68	@ 0x44
 8000e2a:	4299      	cmp	r1, r3
 8000e2c:	d002      	beq.n	8000e34 <__swsetup_r+0x4c>
 8000e2e:	0028      	movs	r0, r5
 8000e30:	f000 f8bc 	bl	8000fac <_free_r>
 8000e34:	2300      	movs	r3, #0
 8000e36:	6363      	str	r3, [r4, #52]	@ 0x34
 8000e38:	2224      	movs	r2, #36	@ 0x24
 8000e3a:	89a3      	ldrh	r3, [r4, #12]
 8000e3c:	4393      	bics	r3, r2
 8000e3e:	81a3      	strh	r3, [r4, #12]
 8000e40:	2300      	movs	r3, #0
 8000e42:	6063      	str	r3, [r4, #4]
 8000e44:	6923      	ldr	r3, [r4, #16]
 8000e46:	6023      	str	r3, [r4, #0]
 8000e48:	2308      	movs	r3, #8
 8000e4a:	89a2      	ldrh	r2, [r4, #12]
 8000e4c:	4313      	orrs	r3, r2
 8000e4e:	81a3      	strh	r3, [r4, #12]
 8000e50:	6923      	ldr	r3, [r4, #16]
 8000e52:	2b00      	cmp	r3, #0
 8000e54:	d10b      	bne.n	8000e6e <__swsetup_r+0x86>
 8000e56:	21a0      	movs	r1, #160	@ 0xa0
 8000e58:	2280      	movs	r2, #128	@ 0x80
 8000e5a:	89a3      	ldrh	r3, [r4, #12]
 8000e5c:	0089      	lsls	r1, r1, #2
 8000e5e:	0092      	lsls	r2, r2, #2
 8000e60:	400b      	ands	r3, r1
 8000e62:	4293      	cmp	r3, r2
 8000e64:	d003      	beq.n	8000e6e <__swsetup_r+0x86>
 8000e66:	0021      	movs	r1, r4
 8000e68:	0028      	movs	r0, r5
 8000e6a:	f000 fd39 	bl	80018e0 <__smakebuf_r>
 8000e6e:	230c      	movs	r3, #12
 8000e70:	5ee2      	ldrsh	r2, [r4, r3]
 8000e72:	2101      	movs	r1, #1
 8000e74:	0013      	movs	r3, r2
 8000e76:	400b      	ands	r3, r1
 8000e78:	420a      	tst	r2, r1
 8000e7a:	d00b      	beq.n	8000e94 <__swsetup_r+0xac>
 8000e7c:	2300      	movs	r3, #0
 8000e7e:	60a3      	str	r3, [r4, #8]
 8000e80:	6963      	ldr	r3, [r4, #20]
 8000e82:	425b      	negs	r3, r3
 8000e84:	61a3      	str	r3, [r4, #24]
 8000e86:	2000      	movs	r0, #0
 8000e88:	6923      	ldr	r3, [r4, #16]
 8000e8a:	4283      	cmp	r3, r0
 8000e8c:	d101      	bne.n	8000e92 <__swsetup_r+0xaa>
 8000e8e:	0613      	lsls	r3, r2, #24
 8000e90:	d4be      	bmi.n	8000e10 <__swsetup_r+0x28>
 8000e92:	bd70      	pop	{r4, r5, r6, pc}
 8000e94:	0791      	lsls	r1, r2, #30
 8000e96:	d400      	bmi.n	8000e9a <__swsetup_r+0xb2>
 8000e98:	6963      	ldr	r3, [r4, #20]
 8000e9a:	60a3      	str	r3, [r4, #8]
 8000e9c:	e7f3      	b.n	8000e86 <__swsetup_r+0x9e>
 8000e9e:	46c0      	nop			@ (mov r8, r8)
 8000ea0:	20000010 	.word	0x20000010

08000ea4 <memset>:
 8000ea4:	0003      	movs	r3, r0
 8000ea6:	1882      	adds	r2, r0, r2
 8000ea8:	4293      	cmp	r3, r2
 8000eaa:	d100      	bne.n	8000eae <memset+0xa>
 8000eac:	4770      	bx	lr
 8000eae:	7019      	strb	r1, [r3, #0]
 8000eb0:	3301      	adds	r3, #1
 8000eb2:	e7f9      	b.n	8000ea8 <memset+0x4>

08000eb4 <_close_r>:
 8000eb4:	2300      	movs	r3, #0
 8000eb6:	b570      	push	{r4, r5, r6, lr}
 8000eb8:	4d06      	ldr	r5, [pc, #24]	@ (8000ed4 <_close_r+0x20>)
 8000eba:	0004      	movs	r4, r0
 8000ebc:	0008      	movs	r0, r1
 8000ebe:	602b      	str	r3, [r5, #0]
 8000ec0:	f7ff fafb 	bl	80004ba <_close>
 8000ec4:	1c43      	adds	r3, r0, #1
 8000ec6:	d103      	bne.n	8000ed0 <_close_r+0x1c>
 8000ec8:	682b      	ldr	r3, [r5, #0]
 8000eca:	2b00      	cmp	r3, #0
 8000ecc:	d000      	beq.n	8000ed0 <_close_r+0x1c>
 8000ece:	6023      	str	r3, [r4, #0]
 8000ed0:	bd70      	pop	{r4, r5, r6, pc}
 8000ed2:	46c0      	nop			@ (mov r8, r8)
 8000ed4:	200001bc 	.word	0x200001bc

08000ed8 <_lseek_r>:
 8000ed8:	b570      	push	{r4, r5, r6, lr}
 8000eda:	0004      	movs	r4, r0
 8000edc:	0008      	movs	r0, r1
 8000ede:	0011      	movs	r1, r2
 8000ee0:	001a      	movs	r2, r3
 8000ee2:	2300      	movs	r3, #0
 8000ee4:	4d05      	ldr	r5, [pc, #20]	@ (8000efc <_lseek_r+0x24>)
 8000ee6:	602b      	str	r3, [r5, #0]
 8000ee8:	f7ff fb08 	bl	80004fc <_lseek>
 8000eec:	1c43      	adds	r3, r0, #1
 8000eee:	d103      	bne.n	8000ef8 <_lseek_r+0x20>
 8000ef0:	682b      	ldr	r3, [r5, #0]
 8000ef2:	2b00      	cmp	r3, #0
 8000ef4:	d000      	beq.n	8000ef8 <_lseek_r+0x20>
 8000ef6:	6023      	str	r3, [r4, #0]
 8000ef8:	bd70      	pop	{r4, r5, r6, pc}
 8000efa:	46c0      	nop			@ (mov r8, r8)
 8000efc:	200001bc 	.word	0x200001bc

08000f00 <_read_r>:
 8000f00:	b570      	push	{r4, r5, r6, lr}
 8000f02:	0004      	movs	r4, r0
 8000f04:	0008      	movs	r0, r1
 8000f06:	0011      	movs	r1, r2
 8000f08:	001a      	movs	r2, r3
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	4d05      	ldr	r5, [pc, #20]	@ (8000f24 <_read_r+0x24>)
 8000f0e:	602b      	str	r3, [r5, #0]
 8000f10:	f7ff fa9a 	bl	8000448 <_read>
 8000f14:	1c43      	adds	r3, r0, #1
 8000f16:	d103      	bne.n	8000f20 <_read_r+0x20>
 8000f18:	682b      	ldr	r3, [r5, #0]
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	d000      	beq.n	8000f20 <_read_r+0x20>
 8000f1e:	6023      	str	r3, [r4, #0]
 8000f20:	bd70      	pop	{r4, r5, r6, pc}
 8000f22:	46c0      	nop			@ (mov r8, r8)
 8000f24:	200001bc 	.word	0x200001bc

08000f28 <_write_r>:
 8000f28:	b570      	push	{r4, r5, r6, lr}
 8000f2a:	0004      	movs	r4, r0
 8000f2c:	0008      	movs	r0, r1
 8000f2e:	0011      	movs	r1, r2
 8000f30:	001a      	movs	r2, r3
 8000f32:	2300      	movs	r3, #0
 8000f34:	4d05      	ldr	r5, [pc, #20]	@ (8000f4c <_write_r+0x24>)
 8000f36:	602b      	str	r3, [r5, #0]
 8000f38:	f7ff faa3 	bl	8000482 <_write>
 8000f3c:	1c43      	adds	r3, r0, #1
 8000f3e:	d103      	bne.n	8000f48 <_write_r+0x20>
 8000f40:	682b      	ldr	r3, [r5, #0]
 8000f42:	2b00      	cmp	r3, #0
 8000f44:	d000      	beq.n	8000f48 <_write_r+0x20>
 8000f46:	6023      	str	r3, [r4, #0]
 8000f48:	bd70      	pop	{r4, r5, r6, pc}
 8000f4a:	46c0      	nop			@ (mov r8, r8)
 8000f4c:	200001bc 	.word	0x200001bc

08000f50 <__errno>:
 8000f50:	4b01      	ldr	r3, [pc, #4]	@ (8000f58 <__errno+0x8>)
 8000f52:	6818      	ldr	r0, [r3, #0]
 8000f54:	4770      	bx	lr
 8000f56:	46c0      	nop			@ (mov r8, r8)
 8000f58:	20000010 	.word	0x20000010

08000f5c <__libc_init_array>:
 8000f5c:	b570      	push	{r4, r5, r6, lr}
 8000f5e:	2600      	movs	r6, #0
 8000f60:	4c0c      	ldr	r4, [pc, #48]	@ (8000f94 <__libc_init_array+0x38>)
 8000f62:	4d0d      	ldr	r5, [pc, #52]	@ (8000f98 <__libc_init_array+0x3c>)
 8000f64:	1b64      	subs	r4, r4, r5
 8000f66:	10a4      	asrs	r4, r4, #2
 8000f68:	42a6      	cmp	r6, r4
 8000f6a:	d109      	bne.n	8000f80 <__libc_init_array+0x24>
 8000f6c:	2600      	movs	r6, #0
 8000f6e:	f000 fd3b 	bl	80019e8 <_init>
 8000f72:	4c0a      	ldr	r4, [pc, #40]	@ (8000f9c <__libc_init_array+0x40>)
 8000f74:	4d0a      	ldr	r5, [pc, #40]	@ (8000fa0 <__libc_init_array+0x44>)
 8000f76:	1b64      	subs	r4, r4, r5
 8000f78:	10a4      	asrs	r4, r4, #2
 8000f7a:	42a6      	cmp	r6, r4
 8000f7c:	d105      	bne.n	8000f8a <__libc_init_array+0x2e>
 8000f7e:	bd70      	pop	{r4, r5, r6, pc}
 8000f80:	00b3      	lsls	r3, r6, #2
 8000f82:	58eb      	ldr	r3, [r5, r3]
 8000f84:	4798      	blx	r3
 8000f86:	3601      	adds	r6, #1
 8000f88:	e7ee      	b.n	8000f68 <__libc_init_array+0xc>
 8000f8a:	00b3      	lsls	r3, r6, #2
 8000f8c:	58eb      	ldr	r3, [r5, r3]
 8000f8e:	4798      	blx	r3
 8000f90:	3601      	adds	r6, #1
 8000f92:	e7f2      	b.n	8000f7a <__libc_init_array+0x1e>
 8000f94:	08001ac0 	.word	0x08001ac0
 8000f98:	08001ac0 	.word	0x08001ac0
 8000f9c:	08001ac4 	.word	0x08001ac4
 8000fa0:	08001ac0 	.word	0x08001ac0

08000fa4 <__retarget_lock_init_recursive>:
 8000fa4:	4770      	bx	lr

08000fa6 <__retarget_lock_acquire_recursive>:
 8000fa6:	4770      	bx	lr

08000fa8 <__retarget_lock_release_recursive>:
 8000fa8:	4770      	bx	lr
	...

08000fac <_free_r>:
 8000fac:	b570      	push	{r4, r5, r6, lr}
 8000fae:	0005      	movs	r5, r0
 8000fb0:	1e0c      	subs	r4, r1, #0
 8000fb2:	d010      	beq.n	8000fd6 <_free_r+0x2a>
 8000fb4:	3c04      	subs	r4, #4
 8000fb6:	6823      	ldr	r3, [r4, #0]
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	da00      	bge.n	8000fbe <_free_r+0x12>
 8000fbc:	18e4      	adds	r4, r4, r3
 8000fbe:	0028      	movs	r0, r5
 8000fc0:	f000 f8e0 	bl	8001184 <__malloc_lock>
 8000fc4:	4a1d      	ldr	r2, [pc, #116]	@ (800103c <_free_r+0x90>)
 8000fc6:	6813      	ldr	r3, [r2, #0]
 8000fc8:	2b00      	cmp	r3, #0
 8000fca:	d105      	bne.n	8000fd8 <_free_r+0x2c>
 8000fcc:	6063      	str	r3, [r4, #4]
 8000fce:	6014      	str	r4, [r2, #0]
 8000fd0:	0028      	movs	r0, r5
 8000fd2:	f000 f8df 	bl	8001194 <__malloc_unlock>
 8000fd6:	bd70      	pop	{r4, r5, r6, pc}
 8000fd8:	42a3      	cmp	r3, r4
 8000fda:	d908      	bls.n	8000fee <_free_r+0x42>
 8000fdc:	6820      	ldr	r0, [r4, #0]
 8000fde:	1821      	adds	r1, r4, r0
 8000fe0:	428b      	cmp	r3, r1
 8000fe2:	d1f3      	bne.n	8000fcc <_free_r+0x20>
 8000fe4:	6819      	ldr	r1, [r3, #0]
 8000fe6:	685b      	ldr	r3, [r3, #4]
 8000fe8:	1809      	adds	r1, r1, r0
 8000fea:	6021      	str	r1, [r4, #0]
 8000fec:	e7ee      	b.n	8000fcc <_free_r+0x20>
 8000fee:	001a      	movs	r2, r3
 8000ff0:	685b      	ldr	r3, [r3, #4]
 8000ff2:	2b00      	cmp	r3, #0
 8000ff4:	d001      	beq.n	8000ffa <_free_r+0x4e>
 8000ff6:	42a3      	cmp	r3, r4
 8000ff8:	d9f9      	bls.n	8000fee <_free_r+0x42>
 8000ffa:	6811      	ldr	r1, [r2, #0]
 8000ffc:	1850      	adds	r0, r2, r1
 8000ffe:	42a0      	cmp	r0, r4
 8001000:	d10b      	bne.n	800101a <_free_r+0x6e>
 8001002:	6820      	ldr	r0, [r4, #0]
 8001004:	1809      	adds	r1, r1, r0
 8001006:	1850      	adds	r0, r2, r1
 8001008:	6011      	str	r1, [r2, #0]
 800100a:	4283      	cmp	r3, r0
 800100c:	d1e0      	bne.n	8000fd0 <_free_r+0x24>
 800100e:	6818      	ldr	r0, [r3, #0]
 8001010:	685b      	ldr	r3, [r3, #4]
 8001012:	1841      	adds	r1, r0, r1
 8001014:	6011      	str	r1, [r2, #0]
 8001016:	6053      	str	r3, [r2, #4]
 8001018:	e7da      	b.n	8000fd0 <_free_r+0x24>
 800101a:	42a0      	cmp	r0, r4
 800101c:	d902      	bls.n	8001024 <_free_r+0x78>
 800101e:	230c      	movs	r3, #12
 8001020:	602b      	str	r3, [r5, #0]
 8001022:	e7d5      	b.n	8000fd0 <_free_r+0x24>
 8001024:	6820      	ldr	r0, [r4, #0]
 8001026:	1821      	adds	r1, r4, r0
 8001028:	428b      	cmp	r3, r1
 800102a:	d103      	bne.n	8001034 <_free_r+0x88>
 800102c:	6819      	ldr	r1, [r3, #0]
 800102e:	685b      	ldr	r3, [r3, #4]
 8001030:	1809      	adds	r1, r1, r0
 8001032:	6021      	str	r1, [r4, #0]
 8001034:	6063      	str	r3, [r4, #4]
 8001036:	6054      	str	r4, [r2, #4]
 8001038:	e7ca      	b.n	8000fd0 <_free_r+0x24>
 800103a:	46c0      	nop			@ (mov r8, r8)
 800103c:	200001c8 	.word	0x200001c8

08001040 <sbrk_aligned>:
 8001040:	b570      	push	{r4, r5, r6, lr}
 8001042:	4e0f      	ldr	r6, [pc, #60]	@ (8001080 <sbrk_aligned+0x40>)
 8001044:	000d      	movs	r5, r1
 8001046:	6831      	ldr	r1, [r6, #0]
 8001048:	0004      	movs	r4, r0
 800104a:	2900      	cmp	r1, #0
 800104c:	d102      	bne.n	8001054 <sbrk_aligned+0x14>
 800104e:	f000 fcad 	bl	80019ac <_sbrk_r>
 8001052:	6030      	str	r0, [r6, #0]
 8001054:	0029      	movs	r1, r5
 8001056:	0020      	movs	r0, r4
 8001058:	f000 fca8 	bl	80019ac <_sbrk_r>
 800105c:	1c43      	adds	r3, r0, #1
 800105e:	d103      	bne.n	8001068 <sbrk_aligned+0x28>
 8001060:	2501      	movs	r5, #1
 8001062:	426d      	negs	r5, r5
 8001064:	0028      	movs	r0, r5
 8001066:	bd70      	pop	{r4, r5, r6, pc}
 8001068:	2303      	movs	r3, #3
 800106a:	1cc5      	adds	r5, r0, #3
 800106c:	439d      	bics	r5, r3
 800106e:	42a8      	cmp	r0, r5
 8001070:	d0f8      	beq.n	8001064 <sbrk_aligned+0x24>
 8001072:	1a29      	subs	r1, r5, r0
 8001074:	0020      	movs	r0, r4
 8001076:	f000 fc99 	bl	80019ac <_sbrk_r>
 800107a:	3001      	adds	r0, #1
 800107c:	d1f2      	bne.n	8001064 <sbrk_aligned+0x24>
 800107e:	e7ef      	b.n	8001060 <sbrk_aligned+0x20>
 8001080:	200001c4 	.word	0x200001c4

08001084 <_malloc_r>:
 8001084:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001086:	2203      	movs	r2, #3
 8001088:	1ccb      	adds	r3, r1, #3
 800108a:	4393      	bics	r3, r2
 800108c:	3308      	adds	r3, #8
 800108e:	0005      	movs	r5, r0
 8001090:	001f      	movs	r7, r3
 8001092:	2b0c      	cmp	r3, #12
 8001094:	d234      	bcs.n	8001100 <_malloc_r+0x7c>
 8001096:	270c      	movs	r7, #12
 8001098:	42b9      	cmp	r1, r7
 800109a:	d833      	bhi.n	8001104 <_malloc_r+0x80>
 800109c:	0028      	movs	r0, r5
 800109e:	f000 f871 	bl	8001184 <__malloc_lock>
 80010a2:	4e37      	ldr	r6, [pc, #220]	@ (8001180 <_malloc_r+0xfc>)
 80010a4:	6833      	ldr	r3, [r6, #0]
 80010a6:	001c      	movs	r4, r3
 80010a8:	2c00      	cmp	r4, #0
 80010aa:	d12f      	bne.n	800110c <_malloc_r+0x88>
 80010ac:	0039      	movs	r1, r7
 80010ae:	0028      	movs	r0, r5
 80010b0:	f7ff ffc6 	bl	8001040 <sbrk_aligned>
 80010b4:	0004      	movs	r4, r0
 80010b6:	1c43      	adds	r3, r0, #1
 80010b8:	d15f      	bne.n	800117a <_malloc_r+0xf6>
 80010ba:	6834      	ldr	r4, [r6, #0]
 80010bc:	9400      	str	r4, [sp, #0]
 80010be:	9b00      	ldr	r3, [sp, #0]
 80010c0:	2b00      	cmp	r3, #0
 80010c2:	d14a      	bne.n	800115a <_malloc_r+0xd6>
 80010c4:	2c00      	cmp	r4, #0
 80010c6:	d052      	beq.n	800116e <_malloc_r+0xea>
 80010c8:	6823      	ldr	r3, [r4, #0]
 80010ca:	0028      	movs	r0, r5
 80010cc:	18e3      	adds	r3, r4, r3
 80010ce:	9900      	ldr	r1, [sp, #0]
 80010d0:	9301      	str	r3, [sp, #4]
 80010d2:	f000 fc6b 	bl	80019ac <_sbrk_r>
 80010d6:	9b01      	ldr	r3, [sp, #4]
 80010d8:	4283      	cmp	r3, r0
 80010da:	d148      	bne.n	800116e <_malloc_r+0xea>
 80010dc:	6823      	ldr	r3, [r4, #0]
 80010de:	0028      	movs	r0, r5
 80010e0:	1aff      	subs	r7, r7, r3
 80010e2:	0039      	movs	r1, r7
 80010e4:	f7ff ffac 	bl	8001040 <sbrk_aligned>
 80010e8:	3001      	adds	r0, #1
 80010ea:	d040      	beq.n	800116e <_malloc_r+0xea>
 80010ec:	6823      	ldr	r3, [r4, #0]
 80010ee:	19db      	adds	r3, r3, r7
 80010f0:	6023      	str	r3, [r4, #0]
 80010f2:	6833      	ldr	r3, [r6, #0]
 80010f4:	685a      	ldr	r2, [r3, #4]
 80010f6:	2a00      	cmp	r2, #0
 80010f8:	d133      	bne.n	8001162 <_malloc_r+0xde>
 80010fa:	9b00      	ldr	r3, [sp, #0]
 80010fc:	6033      	str	r3, [r6, #0]
 80010fe:	e019      	b.n	8001134 <_malloc_r+0xb0>
 8001100:	2b00      	cmp	r3, #0
 8001102:	dac9      	bge.n	8001098 <_malloc_r+0x14>
 8001104:	230c      	movs	r3, #12
 8001106:	602b      	str	r3, [r5, #0]
 8001108:	2000      	movs	r0, #0
 800110a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800110c:	6821      	ldr	r1, [r4, #0]
 800110e:	1bc9      	subs	r1, r1, r7
 8001110:	d420      	bmi.n	8001154 <_malloc_r+0xd0>
 8001112:	290b      	cmp	r1, #11
 8001114:	d90a      	bls.n	800112c <_malloc_r+0xa8>
 8001116:	19e2      	adds	r2, r4, r7
 8001118:	6027      	str	r7, [r4, #0]
 800111a:	42a3      	cmp	r3, r4
 800111c:	d104      	bne.n	8001128 <_malloc_r+0xa4>
 800111e:	6032      	str	r2, [r6, #0]
 8001120:	6863      	ldr	r3, [r4, #4]
 8001122:	6011      	str	r1, [r2, #0]
 8001124:	6053      	str	r3, [r2, #4]
 8001126:	e005      	b.n	8001134 <_malloc_r+0xb0>
 8001128:	605a      	str	r2, [r3, #4]
 800112a:	e7f9      	b.n	8001120 <_malloc_r+0x9c>
 800112c:	6862      	ldr	r2, [r4, #4]
 800112e:	42a3      	cmp	r3, r4
 8001130:	d10e      	bne.n	8001150 <_malloc_r+0xcc>
 8001132:	6032      	str	r2, [r6, #0]
 8001134:	0028      	movs	r0, r5
 8001136:	f000 f82d 	bl	8001194 <__malloc_unlock>
 800113a:	0020      	movs	r0, r4
 800113c:	2207      	movs	r2, #7
 800113e:	300b      	adds	r0, #11
 8001140:	1d23      	adds	r3, r4, #4
 8001142:	4390      	bics	r0, r2
 8001144:	1ac2      	subs	r2, r0, r3
 8001146:	4298      	cmp	r0, r3
 8001148:	d0df      	beq.n	800110a <_malloc_r+0x86>
 800114a:	1a1b      	subs	r3, r3, r0
 800114c:	50a3      	str	r3, [r4, r2]
 800114e:	e7dc      	b.n	800110a <_malloc_r+0x86>
 8001150:	605a      	str	r2, [r3, #4]
 8001152:	e7ef      	b.n	8001134 <_malloc_r+0xb0>
 8001154:	0023      	movs	r3, r4
 8001156:	6864      	ldr	r4, [r4, #4]
 8001158:	e7a6      	b.n	80010a8 <_malloc_r+0x24>
 800115a:	9c00      	ldr	r4, [sp, #0]
 800115c:	6863      	ldr	r3, [r4, #4]
 800115e:	9300      	str	r3, [sp, #0]
 8001160:	e7ad      	b.n	80010be <_malloc_r+0x3a>
 8001162:	001a      	movs	r2, r3
 8001164:	685b      	ldr	r3, [r3, #4]
 8001166:	42a3      	cmp	r3, r4
 8001168:	d1fb      	bne.n	8001162 <_malloc_r+0xde>
 800116a:	2300      	movs	r3, #0
 800116c:	e7da      	b.n	8001124 <_malloc_r+0xa0>
 800116e:	230c      	movs	r3, #12
 8001170:	0028      	movs	r0, r5
 8001172:	602b      	str	r3, [r5, #0]
 8001174:	f000 f80e 	bl	8001194 <__malloc_unlock>
 8001178:	e7c6      	b.n	8001108 <_malloc_r+0x84>
 800117a:	6007      	str	r7, [r0, #0]
 800117c:	e7da      	b.n	8001134 <_malloc_r+0xb0>
 800117e:	46c0      	nop			@ (mov r8, r8)
 8001180:	200001c8 	.word	0x200001c8

08001184 <__malloc_lock>:
 8001184:	b510      	push	{r4, lr}
 8001186:	4802      	ldr	r0, [pc, #8]	@ (8001190 <__malloc_lock+0xc>)
 8001188:	f7ff ff0d 	bl	8000fa6 <__retarget_lock_acquire_recursive>
 800118c:	bd10      	pop	{r4, pc}
 800118e:	46c0      	nop			@ (mov r8, r8)
 8001190:	200001c0 	.word	0x200001c0

08001194 <__malloc_unlock>:
 8001194:	b510      	push	{r4, lr}
 8001196:	4802      	ldr	r0, [pc, #8]	@ (80011a0 <__malloc_unlock+0xc>)
 8001198:	f7ff ff06 	bl	8000fa8 <__retarget_lock_release_recursive>
 800119c:	bd10      	pop	{r4, pc}
 800119e:	46c0      	nop			@ (mov r8, r8)
 80011a0:	200001c0 	.word	0x200001c0

080011a4 <__sfputc_r>:
 80011a4:	6893      	ldr	r3, [r2, #8]
 80011a6:	b510      	push	{r4, lr}
 80011a8:	3b01      	subs	r3, #1
 80011aa:	6093      	str	r3, [r2, #8]
 80011ac:	2b00      	cmp	r3, #0
 80011ae:	da04      	bge.n	80011ba <__sfputc_r+0x16>
 80011b0:	6994      	ldr	r4, [r2, #24]
 80011b2:	42a3      	cmp	r3, r4
 80011b4:	db07      	blt.n	80011c6 <__sfputc_r+0x22>
 80011b6:	290a      	cmp	r1, #10
 80011b8:	d005      	beq.n	80011c6 <__sfputc_r+0x22>
 80011ba:	6813      	ldr	r3, [r2, #0]
 80011bc:	1c58      	adds	r0, r3, #1
 80011be:	6010      	str	r0, [r2, #0]
 80011c0:	7019      	strb	r1, [r3, #0]
 80011c2:	0008      	movs	r0, r1
 80011c4:	bd10      	pop	{r4, pc}
 80011c6:	f7ff fdcd 	bl	8000d64 <__swbuf_r>
 80011ca:	0001      	movs	r1, r0
 80011cc:	e7f9      	b.n	80011c2 <__sfputc_r+0x1e>

080011ce <__sfputs_r>:
 80011ce:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011d0:	0006      	movs	r6, r0
 80011d2:	000f      	movs	r7, r1
 80011d4:	0014      	movs	r4, r2
 80011d6:	18d5      	adds	r5, r2, r3
 80011d8:	42ac      	cmp	r4, r5
 80011da:	d101      	bne.n	80011e0 <__sfputs_r+0x12>
 80011dc:	2000      	movs	r0, #0
 80011de:	e007      	b.n	80011f0 <__sfputs_r+0x22>
 80011e0:	7821      	ldrb	r1, [r4, #0]
 80011e2:	003a      	movs	r2, r7
 80011e4:	0030      	movs	r0, r6
 80011e6:	f7ff ffdd 	bl	80011a4 <__sfputc_r>
 80011ea:	3401      	adds	r4, #1
 80011ec:	1c43      	adds	r3, r0, #1
 80011ee:	d1f3      	bne.n	80011d8 <__sfputs_r+0xa>
 80011f0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080011f4 <_vfiprintf_r>:
 80011f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80011f6:	b0a1      	sub	sp, #132	@ 0x84
 80011f8:	000f      	movs	r7, r1
 80011fa:	0015      	movs	r5, r2
 80011fc:	001e      	movs	r6, r3
 80011fe:	9003      	str	r0, [sp, #12]
 8001200:	2800      	cmp	r0, #0
 8001202:	d004      	beq.n	800120e <_vfiprintf_r+0x1a>
 8001204:	6a03      	ldr	r3, [r0, #32]
 8001206:	2b00      	cmp	r3, #0
 8001208:	d101      	bne.n	800120e <_vfiprintf_r+0x1a>
 800120a:	f7ff fcbb 	bl	8000b84 <__sinit>
 800120e:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001210:	07db      	lsls	r3, r3, #31
 8001212:	d405      	bmi.n	8001220 <_vfiprintf_r+0x2c>
 8001214:	89bb      	ldrh	r3, [r7, #12]
 8001216:	059b      	lsls	r3, r3, #22
 8001218:	d402      	bmi.n	8001220 <_vfiprintf_r+0x2c>
 800121a:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 800121c:	f7ff fec3 	bl	8000fa6 <__retarget_lock_acquire_recursive>
 8001220:	89bb      	ldrh	r3, [r7, #12]
 8001222:	071b      	lsls	r3, r3, #28
 8001224:	d502      	bpl.n	800122c <_vfiprintf_r+0x38>
 8001226:	693b      	ldr	r3, [r7, #16]
 8001228:	2b00      	cmp	r3, #0
 800122a:	d113      	bne.n	8001254 <_vfiprintf_r+0x60>
 800122c:	0039      	movs	r1, r7
 800122e:	9803      	ldr	r0, [sp, #12]
 8001230:	f7ff fdda 	bl	8000de8 <__swsetup_r>
 8001234:	2800      	cmp	r0, #0
 8001236:	d00d      	beq.n	8001254 <_vfiprintf_r+0x60>
 8001238:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800123a:	07db      	lsls	r3, r3, #31
 800123c:	d503      	bpl.n	8001246 <_vfiprintf_r+0x52>
 800123e:	2001      	movs	r0, #1
 8001240:	4240      	negs	r0, r0
 8001242:	b021      	add	sp, #132	@ 0x84
 8001244:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001246:	89bb      	ldrh	r3, [r7, #12]
 8001248:	059b      	lsls	r3, r3, #22
 800124a:	d4f8      	bmi.n	800123e <_vfiprintf_r+0x4a>
 800124c:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 800124e:	f7ff feab 	bl	8000fa8 <__retarget_lock_release_recursive>
 8001252:	e7f4      	b.n	800123e <_vfiprintf_r+0x4a>
 8001254:	2300      	movs	r3, #0
 8001256:	ac08      	add	r4, sp, #32
 8001258:	6163      	str	r3, [r4, #20]
 800125a:	3320      	adds	r3, #32
 800125c:	7663      	strb	r3, [r4, #25]
 800125e:	3310      	adds	r3, #16
 8001260:	76a3      	strb	r3, [r4, #26]
 8001262:	9607      	str	r6, [sp, #28]
 8001264:	002e      	movs	r6, r5
 8001266:	7833      	ldrb	r3, [r6, #0]
 8001268:	2b00      	cmp	r3, #0
 800126a:	d001      	beq.n	8001270 <_vfiprintf_r+0x7c>
 800126c:	2b25      	cmp	r3, #37	@ 0x25
 800126e:	d148      	bne.n	8001302 <_vfiprintf_r+0x10e>
 8001270:	1b73      	subs	r3, r6, r5
 8001272:	9305      	str	r3, [sp, #20]
 8001274:	42ae      	cmp	r6, r5
 8001276:	d00b      	beq.n	8001290 <_vfiprintf_r+0x9c>
 8001278:	002a      	movs	r2, r5
 800127a:	0039      	movs	r1, r7
 800127c:	9803      	ldr	r0, [sp, #12]
 800127e:	f7ff ffa6 	bl	80011ce <__sfputs_r>
 8001282:	3001      	adds	r0, #1
 8001284:	d100      	bne.n	8001288 <_vfiprintf_r+0x94>
 8001286:	e0ae      	b.n	80013e6 <_vfiprintf_r+0x1f2>
 8001288:	6963      	ldr	r3, [r4, #20]
 800128a:	9a05      	ldr	r2, [sp, #20]
 800128c:	189b      	adds	r3, r3, r2
 800128e:	6163      	str	r3, [r4, #20]
 8001290:	7833      	ldrb	r3, [r6, #0]
 8001292:	2b00      	cmp	r3, #0
 8001294:	d100      	bne.n	8001298 <_vfiprintf_r+0xa4>
 8001296:	e0a6      	b.n	80013e6 <_vfiprintf_r+0x1f2>
 8001298:	2201      	movs	r2, #1
 800129a:	2300      	movs	r3, #0
 800129c:	4252      	negs	r2, r2
 800129e:	6062      	str	r2, [r4, #4]
 80012a0:	a904      	add	r1, sp, #16
 80012a2:	3254      	adds	r2, #84	@ 0x54
 80012a4:	1852      	adds	r2, r2, r1
 80012a6:	1c75      	adds	r5, r6, #1
 80012a8:	6023      	str	r3, [r4, #0]
 80012aa:	60e3      	str	r3, [r4, #12]
 80012ac:	60a3      	str	r3, [r4, #8]
 80012ae:	7013      	strb	r3, [r2, #0]
 80012b0:	65a3      	str	r3, [r4, #88]	@ 0x58
 80012b2:	4b59      	ldr	r3, [pc, #356]	@ (8001418 <_vfiprintf_r+0x224>)
 80012b4:	2205      	movs	r2, #5
 80012b6:	0018      	movs	r0, r3
 80012b8:	7829      	ldrb	r1, [r5, #0]
 80012ba:	9305      	str	r3, [sp, #20]
 80012bc:	f000 fb88 	bl	80019d0 <memchr>
 80012c0:	1c6e      	adds	r6, r5, #1
 80012c2:	2800      	cmp	r0, #0
 80012c4:	d11f      	bne.n	8001306 <_vfiprintf_r+0x112>
 80012c6:	6822      	ldr	r2, [r4, #0]
 80012c8:	06d3      	lsls	r3, r2, #27
 80012ca:	d504      	bpl.n	80012d6 <_vfiprintf_r+0xe2>
 80012cc:	2353      	movs	r3, #83	@ 0x53
 80012ce:	a904      	add	r1, sp, #16
 80012d0:	185b      	adds	r3, r3, r1
 80012d2:	2120      	movs	r1, #32
 80012d4:	7019      	strb	r1, [r3, #0]
 80012d6:	0713      	lsls	r3, r2, #28
 80012d8:	d504      	bpl.n	80012e4 <_vfiprintf_r+0xf0>
 80012da:	2353      	movs	r3, #83	@ 0x53
 80012dc:	a904      	add	r1, sp, #16
 80012de:	185b      	adds	r3, r3, r1
 80012e0:	212b      	movs	r1, #43	@ 0x2b
 80012e2:	7019      	strb	r1, [r3, #0]
 80012e4:	782b      	ldrb	r3, [r5, #0]
 80012e6:	2b2a      	cmp	r3, #42	@ 0x2a
 80012e8:	d016      	beq.n	8001318 <_vfiprintf_r+0x124>
 80012ea:	002e      	movs	r6, r5
 80012ec:	2100      	movs	r1, #0
 80012ee:	200a      	movs	r0, #10
 80012f0:	68e3      	ldr	r3, [r4, #12]
 80012f2:	7832      	ldrb	r2, [r6, #0]
 80012f4:	1c75      	adds	r5, r6, #1
 80012f6:	3a30      	subs	r2, #48	@ 0x30
 80012f8:	2a09      	cmp	r2, #9
 80012fa:	d950      	bls.n	800139e <_vfiprintf_r+0x1aa>
 80012fc:	2900      	cmp	r1, #0
 80012fe:	d111      	bne.n	8001324 <_vfiprintf_r+0x130>
 8001300:	e017      	b.n	8001332 <_vfiprintf_r+0x13e>
 8001302:	3601      	adds	r6, #1
 8001304:	e7af      	b.n	8001266 <_vfiprintf_r+0x72>
 8001306:	9b05      	ldr	r3, [sp, #20]
 8001308:	6822      	ldr	r2, [r4, #0]
 800130a:	1ac0      	subs	r0, r0, r3
 800130c:	2301      	movs	r3, #1
 800130e:	4083      	lsls	r3, r0
 8001310:	4313      	orrs	r3, r2
 8001312:	0035      	movs	r5, r6
 8001314:	6023      	str	r3, [r4, #0]
 8001316:	e7cc      	b.n	80012b2 <_vfiprintf_r+0xbe>
 8001318:	9b07      	ldr	r3, [sp, #28]
 800131a:	1d19      	adds	r1, r3, #4
 800131c:	681b      	ldr	r3, [r3, #0]
 800131e:	9107      	str	r1, [sp, #28]
 8001320:	2b00      	cmp	r3, #0
 8001322:	db01      	blt.n	8001328 <_vfiprintf_r+0x134>
 8001324:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001326:	e004      	b.n	8001332 <_vfiprintf_r+0x13e>
 8001328:	425b      	negs	r3, r3
 800132a:	60e3      	str	r3, [r4, #12]
 800132c:	2302      	movs	r3, #2
 800132e:	4313      	orrs	r3, r2
 8001330:	6023      	str	r3, [r4, #0]
 8001332:	7833      	ldrb	r3, [r6, #0]
 8001334:	2b2e      	cmp	r3, #46	@ 0x2e
 8001336:	d10c      	bne.n	8001352 <_vfiprintf_r+0x15e>
 8001338:	7873      	ldrb	r3, [r6, #1]
 800133a:	2b2a      	cmp	r3, #42	@ 0x2a
 800133c:	d134      	bne.n	80013a8 <_vfiprintf_r+0x1b4>
 800133e:	9b07      	ldr	r3, [sp, #28]
 8001340:	3602      	adds	r6, #2
 8001342:	1d1a      	adds	r2, r3, #4
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	9207      	str	r2, [sp, #28]
 8001348:	2b00      	cmp	r3, #0
 800134a:	da01      	bge.n	8001350 <_vfiprintf_r+0x15c>
 800134c:	2301      	movs	r3, #1
 800134e:	425b      	negs	r3, r3
 8001350:	9309      	str	r3, [sp, #36]	@ 0x24
 8001352:	4d32      	ldr	r5, [pc, #200]	@ (800141c <_vfiprintf_r+0x228>)
 8001354:	2203      	movs	r2, #3
 8001356:	0028      	movs	r0, r5
 8001358:	7831      	ldrb	r1, [r6, #0]
 800135a:	f000 fb39 	bl	80019d0 <memchr>
 800135e:	2800      	cmp	r0, #0
 8001360:	d006      	beq.n	8001370 <_vfiprintf_r+0x17c>
 8001362:	2340      	movs	r3, #64	@ 0x40
 8001364:	1b40      	subs	r0, r0, r5
 8001366:	4083      	lsls	r3, r0
 8001368:	6822      	ldr	r2, [r4, #0]
 800136a:	3601      	adds	r6, #1
 800136c:	4313      	orrs	r3, r2
 800136e:	6023      	str	r3, [r4, #0]
 8001370:	7831      	ldrb	r1, [r6, #0]
 8001372:	2206      	movs	r2, #6
 8001374:	482a      	ldr	r0, [pc, #168]	@ (8001420 <_vfiprintf_r+0x22c>)
 8001376:	1c75      	adds	r5, r6, #1
 8001378:	7621      	strb	r1, [r4, #24]
 800137a:	f000 fb29 	bl	80019d0 <memchr>
 800137e:	2800      	cmp	r0, #0
 8001380:	d040      	beq.n	8001404 <_vfiprintf_r+0x210>
 8001382:	4b28      	ldr	r3, [pc, #160]	@ (8001424 <_vfiprintf_r+0x230>)
 8001384:	2b00      	cmp	r3, #0
 8001386:	d122      	bne.n	80013ce <_vfiprintf_r+0x1da>
 8001388:	2207      	movs	r2, #7
 800138a:	9b07      	ldr	r3, [sp, #28]
 800138c:	3307      	adds	r3, #7
 800138e:	4393      	bics	r3, r2
 8001390:	3308      	adds	r3, #8
 8001392:	9307      	str	r3, [sp, #28]
 8001394:	6963      	ldr	r3, [r4, #20]
 8001396:	9a04      	ldr	r2, [sp, #16]
 8001398:	189b      	adds	r3, r3, r2
 800139a:	6163      	str	r3, [r4, #20]
 800139c:	e762      	b.n	8001264 <_vfiprintf_r+0x70>
 800139e:	4343      	muls	r3, r0
 80013a0:	002e      	movs	r6, r5
 80013a2:	2101      	movs	r1, #1
 80013a4:	189b      	adds	r3, r3, r2
 80013a6:	e7a4      	b.n	80012f2 <_vfiprintf_r+0xfe>
 80013a8:	2300      	movs	r3, #0
 80013aa:	200a      	movs	r0, #10
 80013ac:	0019      	movs	r1, r3
 80013ae:	3601      	adds	r6, #1
 80013b0:	6063      	str	r3, [r4, #4]
 80013b2:	7832      	ldrb	r2, [r6, #0]
 80013b4:	1c75      	adds	r5, r6, #1
 80013b6:	3a30      	subs	r2, #48	@ 0x30
 80013b8:	2a09      	cmp	r2, #9
 80013ba:	d903      	bls.n	80013c4 <_vfiprintf_r+0x1d0>
 80013bc:	2b00      	cmp	r3, #0
 80013be:	d0c8      	beq.n	8001352 <_vfiprintf_r+0x15e>
 80013c0:	9109      	str	r1, [sp, #36]	@ 0x24
 80013c2:	e7c6      	b.n	8001352 <_vfiprintf_r+0x15e>
 80013c4:	4341      	muls	r1, r0
 80013c6:	002e      	movs	r6, r5
 80013c8:	2301      	movs	r3, #1
 80013ca:	1889      	adds	r1, r1, r2
 80013cc:	e7f1      	b.n	80013b2 <_vfiprintf_r+0x1be>
 80013ce:	aa07      	add	r2, sp, #28
 80013d0:	9200      	str	r2, [sp, #0]
 80013d2:	0021      	movs	r1, r4
 80013d4:	003a      	movs	r2, r7
 80013d6:	4b14      	ldr	r3, [pc, #80]	@ (8001428 <_vfiprintf_r+0x234>)
 80013d8:	9803      	ldr	r0, [sp, #12]
 80013da:	e000      	b.n	80013de <_vfiprintf_r+0x1ea>
 80013dc:	bf00      	nop
 80013de:	9004      	str	r0, [sp, #16]
 80013e0:	9b04      	ldr	r3, [sp, #16]
 80013e2:	3301      	adds	r3, #1
 80013e4:	d1d6      	bne.n	8001394 <_vfiprintf_r+0x1a0>
 80013e6:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80013e8:	07db      	lsls	r3, r3, #31
 80013ea:	d405      	bmi.n	80013f8 <_vfiprintf_r+0x204>
 80013ec:	89bb      	ldrh	r3, [r7, #12]
 80013ee:	059b      	lsls	r3, r3, #22
 80013f0:	d402      	bmi.n	80013f8 <_vfiprintf_r+0x204>
 80013f2:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80013f4:	f7ff fdd8 	bl	8000fa8 <__retarget_lock_release_recursive>
 80013f8:	89bb      	ldrh	r3, [r7, #12]
 80013fa:	065b      	lsls	r3, r3, #25
 80013fc:	d500      	bpl.n	8001400 <_vfiprintf_r+0x20c>
 80013fe:	e71e      	b.n	800123e <_vfiprintf_r+0x4a>
 8001400:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8001402:	e71e      	b.n	8001242 <_vfiprintf_r+0x4e>
 8001404:	aa07      	add	r2, sp, #28
 8001406:	9200      	str	r2, [sp, #0]
 8001408:	0021      	movs	r1, r4
 800140a:	003a      	movs	r2, r7
 800140c:	4b06      	ldr	r3, [pc, #24]	@ (8001428 <_vfiprintf_r+0x234>)
 800140e:	9803      	ldr	r0, [sp, #12]
 8001410:	f000 f87c 	bl	800150c <_printf_i>
 8001414:	e7e3      	b.n	80013de <_vfiprintf_r+0x1ea>
 8001416:	46c0      	nop			@ (mov r8, r8)
 8001418:	08001a8c 	.word	0x08001a8c
 800141c:	08001a92 	.word	0x08001a92
 8001420:	08001a96 	.word	0x08001a96
 8001424:	00000000 	.word	0x00000000
 8001428:	080011cf 	.word	0x080011cf

0800142c <_printf_common>:
 800142c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800142e:	0016      	movs	r6, r2
 8001430:	9301      	str	r3, [sp, #4]
 8001432:	688a      	ldr	r2, [r1, #8]
 8001434:	690b      	ldr	r3, [r1, #16]
 8001436:	000c      	movs	r4, r1
 8001438:	9000      	str	r0, [sp, #0]
 800143a:	4293      	cmp	r3, r2
 800143c:	da00      	bge.n	8001440 <_printf_common+0x14>
 800143e:	0013      	movs	r3, r2
 8001440:	0022      	movs	r2, r4
 8001442:	6033      	str	r3, [r6, #0]
 8001444:	3243      	adds	r2, #67	@ 0x43
 8001446:	7812      	ldrb	r2, [r2, #0]
 8001448:	2a00      	cmp	r2, #0
 800144a:	d001      	beq.n	8001450 <_printf_common+0x24>
 800144c:	3301      	adds	r3, #1
 800144e:	6033      	str	r3, [r6, #0]
 8001450:	6823      	ldr	r3, [r4, #0]
 8001452:	069b      	lsls	r3, r3, #26
 8001454:	d502      	bpl.n	800145c <_printf_common+0x30>
 8001456:	6833      	ldr	r3, [r6, #0]
 8001458:	3302      	adds	r3, #2
 800145a:	6033      	str	r3, [r6, #0]
 800145c:	6822      	ldr	r2, [r4, #0]
 800145e:	2306      	movs	r3, #6
 8001460:	0015      	movs	r5, r2
 8001462:	401d      	ands	r5, r3
 8001464:	421a      	tst	r2, r3
 8001466:	d027      	beq.n	80014b8 <_printf_common+0x8c>
 8001468:	0023      	movs	r3, r4
 800146a:	3343      	adds	r3, #67	@ 0x43
 800146c:	781b      	ldrb	r3, [r3, #0]
 800146e:	1e5a      	subs	r2, r3, #1
 8001470:	4193      	sbcs	r3, r2
 8001472:	6822      	ldr	r2, [r4, #0]
 8001474:	0692      	lsls	r2, r2, #26
 8001476:	d430      	bmi.n	80014da <_printf_common+0xae>
 8001478:	0022      	movs	r2, r4
 800147a:	9901      	ldr	r1, [sp, #4]
 800147c:	9800      	ldr	r0, [sp, #0]
 800147e:	9d08      	ldr	r5, [sp, #32]
 8001480:	3243      	adds	r2, #67	@ 0x43
 8001482:	47a8      	blx	r5
 8001484:	3001      	adds	r0, #1
 8001486:	d025      	beq.n	80014d4 <_printf_common+0xa8>
 8001488:	2206      	movs	r2, #6
 800148a:	6823      	ldr	r3, [r4, #0]
 800148c:	2500      	movs	r5, #0
 800148e:	4013      	ands	r3, r2
 8001490:	2b04      	cmp	r3, #4
 8001492:	d105      	bne.n	80014a0 <_printf_common+0x74>
 8001494:	6833      	ldr	r3, [r6, #0]
 8001496:	68e5      	ldr	r5, [r4, #12]
 8001498:	1aed      	subs	r5, r5, r3
 800149a:	43eb      	mvns	r3, r5
 800149c:	17db      	asrs	r3, r3, #31
 800149e:	401d      	ands	r5, r3
 80014a0:	68a3      	ldr	r3, [r4, #8]
 80014a2:	6922      	ldr	r2, [r4, #16]
 80014a4:	4293      	cmp	r3, r2
 80014a6:	dd01      	ble.n	80014ac <_printf_common+0x80>
 80014a8:	1a9b      	subs	r3, r3, r2
 80014aa:	18ed      	adds	r5, r5, r3
 80014ac:	2600      	movs	r6, #0
 80014ae:	42b5      	cmp	r5, r6
 80014b0:	d120      	bne.n	80014f4 <_printf_common+0xc8>
 80014b2:	2000      	movs	r0, #0
 80014b4:	e010      	b.n	80014d8 <_printf_common+0xac>
 80014b6:	3501      	adds	r5, #1
 80014b8:	68e3      	ldr	r3, [r4, #12]
 80014ba:	6832      	ldr	r2, [r6, #0]
 80014bc:	1a9b      	subs	r3, r3, r2
 80014be:	42ab      	cmp	r3, r5
 80014c0:	ddd2      	ble.n	8001468 <_printf_common+0x3c>
 80014c2:	0022      	movs	r2, r4
 80014c4:	2301      	movs	r3, #1
 80014c6:	9901      	ldr	r1, [sp, #4]
 80014c8:	9800      	ldr	r0, [sp, #0]
 80014ca:	9f08      	ldr	r7, [sp, #32]
 80014cc:	3219      	adds	r2, #25
 80014ce:	47b8      	blx	r7
 80014d0:	3001      	adds	r0, #1
 80014d2:	d1f0      	bne.n	80014b6 <_printf_common+0x8a>
 80014d4:	2001      	movs	r0, #1
 80014d6:	4240      	negs	r0, r0
 80014d8:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80014da:	2030      	movs	r0, #48	@ 0x30
 80014dc:	18e1      	adds	r1, r4, r3
 80014de:	3143      	adds	r1, #67	@ 0x43
 80014e0:	7008      	strb	r0, [r1, #0]
 80014e2:	0021      	movs	r1, r4
 80014e4:	1c5a      	adds	r2, r3, #1
 80014e6:	3145      	adds	r1, #69	@ 0x45
 80014e8:	7809      	ldrb	r1, [r1, #0]
 80014ea:	18a2      	adds	r2, r4, r2
 80014ec:	3243      	adds	r2, #67	@ 0x43
 80014ee:	3302      	adds	r3, #2
 80014f0:	7011      	strb	r1, [r2, #0]
 80014f2:	e7c1      	b.n	8001478 <_printf_common+0x4c>
 80014f4:	0022      	movs	r2, r4
 80014f6:	2301      	movs	r3, #1
 80014f8:	9901      	ldr	r1, [sp, #4]
 80014fa:	9800      	ldr	r0, [sp, #0]
 80014fc:	9f08      	ldr	r7, [sp, #32]
 80014fe:	321a      	adds	r2, #26
 8001500:	47b8      	blx	r7
 8001502:	3001      	adds	r0, #1
 8001504:	d0e6      	beq.n	80014d4 <_printf_common+0xa8>
 8001506:	3601      	adds	r6, #1
 8001508:	e7d1      	b.n	80014ae <_printf_common+0x82>
	...

0800150c <_printf_i>:
 800150c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800150e:	b08b      	sub	sp, #44	@ 0x2c
 8001510:	9206      	str	r2, [sp, #24]
 8001512:	000a      	movs	r2, r1
 8001514:	3243      	adds	r2, #67	@ 0x43
 8001516:	9307      	str	r3, [sp, #28]
 8001518:	9005      	str	r0, [sp, #20]
 800151a:	9203      	str	r2, [sp, #12]
 800151c:	7e0a      	ldrb	r2, [r1, #24]
 800151e:	000c      	movs	r4, r1
 8001520:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8001522:	2a78      	cmp	r2, #120	@ 0x78
 8001524:	d809      	bhi.n	800153a <_printf_i+0x2e>
 8001526:	2a62      	cmp	r2, #98	@ 0x62
 8001528:	d80b      	bhi.n	8001542 <_printf_i+0x36>
 800152a:	2a00      	cmp	r2, #0
 800152c:	d100      	bne.n	8001530 <_printf_i+0x24>
 800152e:	e0bc      	b.n	80016aa <_printf_i+0x19e>
 8001530:	497b      	ldr	r1, [pc, #492]	@ (8001720 <_printf_i+0x214>)
 8001532:	9104      	str	r1, [sp, #16]
 8001534:	2a58      	cmp	r2, #88	@ 0x58
 8001536:	d100      	bne.n	800153a <_printf_i+0x2e>
 8001538:	e090      	b.n	800165c <_printf_i+0x150>
 800153a:	0025      	movs	r5, r4
 800153c:	3542      	adds	r5, #66	@ 0x42
 800153e:	702a      	strb	r2, [r5, #0]
 8001540:	e022      	b.n	8001588 <_printf_i+0x7c>
 8001542:	0010      	movs	r0, r2
 8001544:	3863      	subs	r0, #99	@ 0x63
 8001546:	2815      	cmp	r0, #21
 8001548:	d8f7      	bhi.n	800153a <_printf_i+0x2e>
 800154a:	f7fe fddd 	bl	8000108 <__gnu_thumb1_case_shi>
 800154e:	0016      	.short	0x0016
 8001550:	fff6001f 	.word	0xfff6001f
 8001554:	fff6fff6 	.word	0xfff6fff6
 8001558:	001ffff6 	.word	0x001ffff6
 800155c:	fff6fff6 	.word	0xfff6fff6
 8001560:	fff6fff6 	.word	0xfff6fff6
 8001564:	003600a1 	.word	0x003600a1
 8001568:	fff60080 	.word	0xfff60080
 800156c:	00b2fff6 	.word	0x00b2fff6
 8001570:	0036fff6 	.word	0x0036fff6
 8001574:	fff6fff6 	.word	0xfff6fff6
 8001578:	0084      	.short	0x0084
 800157a:	0025      	movs	r5, r4
 800157c:	681a      	ldr	r2, [r3, #0]
 800157e:	3542      	adds	r5, #66	@ 0x42
 8001580:	1d11      	adds	r1, r2, #4
 8001582:	6019      	str	r1, [r3, #0]
 8001584:	6813      	ldr	r3, [r2, #0]
 8001586:	702b      	strb	r3, [r5, #0]
 8001588:	2301      	movs	r3, #1
 800158a:	e0a0      	b.n	80016ce <_printf_i+0x1c2>
 800158c:	6818      	ldr	r0, [r3, #0]
 800158e:	6809      	ldr	r1, [r1, #0]
 8001590:	1d02      	adds	r2, r0, #4
 8001592:	060d      	lsls	r5, r1, #24
 8001594:	d50b      	bpl.n	80015ae <_printf_i+0xa2>
 8001596:	6806      	ldr	r6, [r0, #0]
 8001598:	601a      	str	r2, [r3, #0]
 800159a:	2e00      	cmp	r6, #0
 800159c:	da03      	bge.n	80015a6 <_printf_i+0x9a>
 800159e:	232d      	movs	r3, #45	@ 0x2d
 80015a0:	9a03      	ldr	r2, [sp, #12]
 80015a2:	4276      	negs	r6, r6
 80015a4:	7013      	strb	r3, [r2, #0]
 80015a6:	4b5e      	ldr	r3, [pc, #376]	@ (8001720 <_printf_i+0x214>)
 80015a8:	270a      	movs	r7, #10
 80015aa:	9304      	str	r3, [sp, #16]
 80015ac:	e018      	b.n	80015e0 <_printf_i+0xd4>
 80015ae:	6806      	ldr	r6, [r0, #0]
 80015b0:	601a      	str	r2, [r3, #0]
 80015b2:	0649      	lsls	r1, r1, #25
 80015b4:	d5f1      	bpl.n	800159a <_printf_i+0x8e>
 80015b6:	b236      	sxth	r6, r6
 80015b8:	e7ef      	b.n	800159a <_printf_i+0x8e>
 80015ba:	6808      	ldr	r0, [r1, #0]
 80015bc:	6819      	ldr	r1, [r3, #0]
 80015be:	c940      	ldmia	r1!, {r6}
 80015c0:	0605      	lsls	r5, r0, #24
 80015c2:	d402      	bmi.n	80015ca <_printf_i+0xbe>
 80015c4:	0640      	lsls	r0, r0, #25
 80015c6:	d500      	bpl.n	80015ca <_printf_i+0xbe>
 80015c8:	b2b6      	uxth	r6, r6
 80015ca:	6019      	str	r1, [r3, #0]
 80015cc:	4b54      	ldr	r3, [pc, #336]	@ (8001720 <_printf_i+0x214>)
 80015ce:	270a      	movs	r7, #10
 80015d0:	9304      	str	r3, [sp, #16]
 80015d2:	2a6f      	cmp	r2, #111	@ 0x6f
 80015d4:	d100      	bne.n	80015d8 <_printf_i+0xcc>
 80015d6:	3f02      	subs	r7, #2
 80015d8:	0023      	movs	r3, r4
 80015da:	2200      	movs	r2, #0
 80015dc:	3343      	adds	r3, #67	@ 0x43
 80015de:	701a      	strb	r2, [r3, #0]
 80015e0:	6863      	ldr	r3, [r4, #4]
 80015e2:	60a3      	str	r3, [r4, #8]
 80015e4:	2b00      	cmp	r3, #0
 80015e6:	db03      	blt.n	80015f0 <_printf_i+0xe4>
 80015e8:	2104      	movs	r1, #4
 80015ea:	6822      	ldr	r2, [r4, #0]
 80015ec:	438a      	bics	r2, r1
 80015ee:	6022      	str	r2, [r4, #0]
 80015f0:	2e00      	cmp	r6, #0
 80015f2:	d102      	bne.n	80015fa <_printf_i+0xee>
 80015f4:	9d03      	ldr	r5, [sp, #12]
 80015f6:	2b00      	cmp	r3, #0
 80015f8:	d00c      	beq.n	8001614 <_printf_i+0x108>
 80015fa:	9d03      	ldr	r5, [sp, #12]
 80015fc:	0030      	movs	r0, r6
 80015fe:	0039      	movs	r1, r7
 8001600:	f7fe fe12 	bl	8000228 <__aeabi_uidivmod>
 8001604:	9b04      	ldr	r3, [sp, #16]
 8001606:	3d01      	subs	r5, #1
 8001608:	5c5b      	ldrb	r3, [r3, r1]
 800160a:	702b      	strb	r3, [r5, #0]
 800160c:	0033      	movs	r3, r6
 800160e:	0006      	movs	r6, r0
 8001610:	429f      	cmp	r7, r3
 8001612:	d9f3      	bls.n	80015fc <_printf_i+0xf0>
 8001614:	2f08      	cmp	r7, #8
 8001616:	d109      	bne.n	800162c <_printf_i+0x120>
 8001618:	6823      	ldr	r3, [r4, #0]
 800161a:	07db      	lsls	r3, r3, #31
 800161c:	d506      	bpl.n	800162c <_printf_i+0x120>
 800161e:	6862      	ldr	r2, [r4, #4]
 8001620:	6923      	ldr	r3, [r4, #16]
 8001622:	429a      	cmp	r2, r3
 8001624:	dc02      	bgt.n	800162c <_printf_i+0x120>
 8001626:	2330      	movs	r3, #48	@ 0x30
 8001628:	3d01      	subs	r5, #1
 800162a:	702b      	strb	r3, [r5, #0]
 800162c:	9b03      	ldr	r3, [sp, #12]
 800162e:	1b5b      	subs	r3, r3, r5
 8001630:	6123      	str	r3, [r4, #16]
 8001632:	9b07      	ldr	r3, [sp, #28]
 8001634:	0021      	movs	r1, r4
 8001636:	9300      	str	r3, [sp, #0]
 8001638:	9805      	ldr	r0, [sp, #20]
 800163a:	9b06      	ldr	r3, [sp, #24]
 800163c:	aa09      	add	r2, sp, #36	@ 0x24
 800163e:	f7ff fef5 	bl	800142c <_printf_common>
 8001642:	3001      	adds	r0, #1
 8001644:	d148      	bne.n	80016d8 <_printf_i+0x1cc>
 8001646:	2001      	movs	r0, #1
 8001648:	4240      	negs	r0, r0
 800164a:	b00b      	add	sp, #44	@ 0x2c
 800164c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800164e:	2220      	movs	r2, #32
 8001650:	6809      	ldr	r1, [r1, #0]
 8001652:	430a      	orrs	r2, r1
 8001654:	6022      	str	r2, [r4, #0]
 8001656:	2278      	movs	r2, #120	@ 0x78
 8001658:	4932      	ldr	r1, [pc, #200]	@ (8001724 <_printf_i+0x218>)
 800165a:	9104      	str	r1, [sp, #16]
 800165c:	0021      	movs	r1, r4
 800165e:	3145      	adds	r1, #69	@ 0x45
 8001660:	700a      	strb	r2, [r1, #0]
 8001662:	6819      	ldr	r1, [r3, #0]
 8001664:	6822      	ldr	r2, [r4, #0]
 8001666:	c940      	ldmia	r1!, {r6}
 8001668:	0610      	lsls	r0, r2, #24
 800166a:	d402      	bmi.n	8001672 <_printf_i+0x166>
 800166c:	0650      	lsls	r0, r2, #25
 800166e:	d500      	bpl.n	8001672 <_printf_i+0x166>
 8001670:	b2b6      	uxth	r6, r6
 8001672:	6019      	str	r1, [r3, #0]
 8001674:	07d3      	lsls	r3, r2, #31
 8001676:	d502      	bpl.n	800167e <_printf_i+0x172>
 8001678:	2320      	movs	r3, #32
 800167a:	4313      	orrs	r3, r2
 800167c:	6023      	str	r3, [r4, #0]
 800167e:	2e00      	cmp	r6, #0
 8001680:	d001      	beq.n	8001686 <_printf_i+0x17a>
 8001682:	2710      	movs	r7, #16
 8001684:	e7a8      	b.n	80015d8 <_printf_i+0xcc>
 8001686:	2220      	movs	r2, #32
 8001688:	6823      	ldr	r3, [r4, #0]
 800168a:	4393      	bics	r3, r2
 800168c:	6023      	str	r3, [r4, #0]
 800168e:	e7f8      	b.n	8001682 <_printf_i+0x176>
 8001690:	681a      	ldr	r2, [r3, #0]
 8001692:	680d      	ldr	r5, [r1, #0]
 8001694:	1d10      	adds	r0, r2, #4
 8001696:	6949      	ldr	r1, [r1, #20]
 8001698:	6018      	str	r0, [r3, #0]
 800169a:	6813      	ldr	r3, [r2, #0]
 800169c:	062e      	lsls	r6, r5, #24
 800169e:	d501      	bpl.n	80016a4 <_printf_i+0x198>
 80016a0:	6019      	str	r1, [r3, #0]
 80016a2:	e002      	b.n	80016aa <_printf_i+0x19e>
 80016a4:	066d      	lsls	r5, r5, #25
 80016a6:	d5fb      	bpl.n	80016a0 <_printf_i+0x194>
 80016a8:	8019      	strh	r1, [r3, #0]
 80016aa:	2300      	movs	r3, #0
 80016ac:	9d03      	ldr	r5, [sp, #12]
 80016ae:	6123      	str	r3, [r4, #16]
 80016b0:	e7bf      	b.n	8001632 <_printf_i+0x126>
 80016b2:	681a      	ldr	r2, [r3, #0]
 80016b4:	1d11      	adds	r1, r2, #4
 80016b6:	6019      	str	r1, [r3, #0]
 80016b8:	6815      	ldr	r5, [r2, #0]
 80016ba:	2100      	movs	r1, #0
 80016bc:	0028      	movs	r0, r5
 80016be:	6862      	ldr	r2, [r4, #4]
 80016c0:	f000 f986 	bl	80019d0 <memchr>
 80016c4:	2800      	cmp	r0, #0
 80016c6:	d001      	beq.n	80016cc <_printf_i+0x1c0>
 80016c8:	1b40      	subs	r0, r0, r5
 80016ca:	6060      	str	r0, [r4, #4]
 80016cc:	6863      	ldr	r3, [r4, #4]
 80016ce:	6123      	str	r3, [r4, #16]
 80016d0:	2300      	movs	r3, #0
 80016d2:	9a03      	ldr	r2, [sp, #12]
 80016d4:	7013      	strb	r3, [r2, #0]
 80016d6:	e7ac      	b.n	8001632 <_printf_i+0x126>
 80016d8:	002a      	movs	r2, r5
 80016da:	6923      	ldr	r3, [r4, #16]
 80016dc:	9906      	ldr	r1, [sp, #24]
 80016de:	9805      	ldr	r0, [sp, #20]
 80016e0:	9d07      	ldr	r5, [sp, #28]
 80016e2:	47a8      	blx	r5
 80016e4:	3001      	adds	r0, #1
 80016e6:	d0ae      	beq.n	8001646 <_printf_i+0x13a>
 80016e8:	6823      	ldr	r3, [r4, #0]
 80016ea:	079b      	lsls	r3, r3, #30
 80016ec:	d415      	bmi.n	800171a <_printf_i+0x20e>
 80016ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80016f0:	68e0      	ldr	r0, [r4, #12]
 80016f2:	4298      	cmp	r0, r3
 80016f4:	daa9      	bge.n	800164a <_printf_i+0x13e>
 80016f6:	0018      	movs	r0, r3
 80016f8:	e7a7      	b.n	800164a <_printf_i+0x13e>
 80016fa:	0022      	movs	r2, r4
 80016fc:	2301      	movs	r3, #1
 80016fe:	9906      	ldr	r1, [sp, #24]
 8001700:	9805      	ldr	r0, [sp, #20]
 8001702:	9e07      	ldr	r6, [sp, #28]
 8001704:	3219      	adds	r2, #25
 8001706:	47b0      	blx	r6
 8001708:	3001      	adds	r0, #1
 800170a:	d09c      	beq.n	8001646 <_printf_i+0x13a>
 800170c:	3501      	adds	r5, #1
 800170e:	68e3      	ldr	r3, [r4, #12]
 8001710:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8001712:	1a9b      	subs	r3, r3, r2
 8001714:	42ab      	cmp	r3, r5
 8001716:	dcf0      	bgt.n	80016fa <_printf_i+0x1ee>
 8001718:	e7e9      	b.n	80016ee <_printf_i+0x1e2>
 800171a:	2500      	movs	r5, #0
 800171c:	e7f7      	b.n	800170e <_printf_i+0x202>
 800171e:	46c0      	nop			@ (mov r8, r8)
 8001720:	08001a9d 	.word	0x08001a9d
 8001724:	08001aae 	.word	0x08001aae

08001728 <__sflush_r>:
 8001728:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800172a:	220c      	movs	r2, #12
 800172c:	5e8b      	ldrsh	r3, [r1, r2]
 800172e:	0005      	movs	r5, r0
 8001730:	000c      	movs	r4, r1
 8001732:	071a      	lsls	r2, r3, #28
 8001734:	d456      	bmi.n	80017e4 <__sflush_r+0xbc>
 8001736:	684a      	ldr	r2, [r1, #4]
 8001738:	2a00      	cmp	r2, #0
 800173a:	dc02      	bgt.n	8001742 <__sflush_r+0x1a>
 800173c:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 800173e:	2a00      	cmp	r2, #0
 8001740:	dd4e      	ble.n	80017e0 <__sflush_r+0xb8>
 8001742:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001744:	2f00      	cmp	r7, #0
 8001746:	d04b      	beq.n	80017e0 <__sflush_r+0xb8>
 8001748:	2200      	movs	r2, #0
 800174a:	2080      	movs	r0, #128	@ 0x80
 800174c:	682e      	ldr	r6, [r5, #0]
 800174e:	602a      	str	r2, [r5, #0]
 8001750:	001a      	movs	r2, r3
 8001752:	0140      	lsls	r0, r0, #5
 8001754:	6a21      	ldr	r1, [r4, #32]
 8001756:	4002      	ands	r2, r0
 8001758:	4203      	tst	r3, r0
 800175a:	d033      	beq.n	80017c4 <__sflush_r+0x9c>
 800175c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800175e:	89a3      	ldrh	r3, [r4, #12]
 8001760:	075b      	lsls	r3, r3, #29
 8001762:	d506      	bpl.n	8001772 <__sflush_r+0x4a>
 8001764:	6863      	ldr	r3, [r4, #4]
 8001766:	1ad2      	subs	r2, r2, r3
 8001768:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 800176a:	2b00      	cmp	r3, #0
 800176c:	d001      	beq.n	8001772 <__sflush_r+0x4a>
 800176e:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001770:	1ad2      	subs	r2, r2, r3
 8001772:	2300      	movs	r3, #0
 8001774:	0028      	movs	r0, r5
 8001776:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001778:	6a21      	ldr	r1, [r4, #32]
 800177a:	47b8      	blx	r7
 800177c:	89a2      	ldrh	r2, [r4, #12]
 800177e:	1c43      	adds	r3, r0, #1
 8001780:	d106      	bne.n	8001790 <__sflush_r+0x68>
 8001782:	6829      	ldr	r1, [r5, #0]
 8001784:	291d      	cmp	r1, #29
 8001786:	d846      	bhi.n	8001816 <__sflush_r+0xee>
 8001788:	4b29      	ldr	r3, [pc, #164]	@ (8001830 <__sflush_r+0x108>)
 800178a:	410b      	asrs	r3, r1
 800178c:	07db      	lsls	r3, r3, #31
 800178e:	d442      	bmi.n	8001816 <__sflush_r+0xee>
 8001790:	2300      	movs	r3, #0
 8001792:	6063      	str	r3, [r4, #4]
 8001794:	6923      	ldr	r3, [r4, #16]
 8001796:	6023      	str	r3, [r4, #0]
 8001798:	04d2      	lsls	r2, r2, #19
 800179a:	d505      	bpl.n	80017a8 <__sflush_r+0x80>
 800179c:	1c43      	adds	r3, r0, #1
 800179e:	d102      	bne.n	80017a6 <__sflush_r+0x7e>
 80017a0:	682b      	ldr	r3, [r5, #0]
 80017a2:	2b00      	cmp	r3, #0
 80017a4:	d100      	bne.n	80017a8 <__sflush_r+0x80>
 80017a6:	6560      	str	r0, [r4, #84]	@ 0x54
 80017a8:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80017aa:	602e      	str	r6, [r5, #0]
 80017ac:	2900      	cmp	r1, #0
 80017ae:	d017      	beq.n	80017e0 <__sflush_r+0xb8>
 80017b0:	0023      	movs	r3, r4
 80017b2:	3344      	adds	r3, #68	@ 0x44
 80017b4:	4299      	cmp	r1, r3
 80017b6:	d002      	beq.n	80017be <__sflush_r+0x96>
 80017b8:	0028      	movs	r0, r5
 80017ba:	f7ff fbf7 	bl	8000fac <_free_r>
 80017be:	2300      	movs	r3, #0
 80017c0:	6363      	str	r3, [r4, #52]	@ 0x34
 80017c2:	e00d      	b.n	80017e0 <__sflush_r+0xb8>
 80017c4:	2301      	movs	r3, #1
 80017c6:	0028      	movs	r0, r5
 80017c8:	47b8      	blx	r7
 80017ca:	0002      	movs	r2, r0
 80017cc:	1c43      	adds	r3, r0, #1
 80017ce:	d1c6      	bne.n	800175e <__sflush_r+0x36>
 80017d0:	682b      	ldr	r3, [r5, #0]
 80017d2:	2b00      	cmp	r3, #0
 80017d4:	d0c3      	beq.n	800175e <__sflush_r+0x36>
 80017d6:	2b1d      	cmp	r3, #29
 80017d8:	d001      	beq.n	80017de <__sflush_r+0xb6>
 80017da:	2b16      	cmp	r3, #22
 80017dc:	d11a      	bne.n	8001814 <__sflush_r+0xec>
 80017de:	602e      	str	r6, [r5, #0]
 80017e0:	2000      	movs	r0, #0
 80017e2:	e01e      	b.n	8001822 <__sflush_r+0xfa>
 80017e4:	690e      	ldr	r6, [r1, #16]
 80017e6:	2e00      	cmp	r6, #0
 80017e8:	d0fa      	beq.n	80017e0 <__sflush_r+0xb8>
 80017ea:	680f      	ldr	r7, [r1, #0]
 80017ec:	600e      	str	r6, [r1, #0]
 80017ee:	1bba      	subs	r2, r7, r6
 80017f0:	9201      	str	r2, [sp, #4]
 80017f2:	2200      	movs	r2, #0
 80017f4:	079b      	lsls	r3, r3, #30
 80017f6:	d100      	bne.n	80017fa <__sflush_r+0xd2>
 80017f8:	694a      	ldr	r2, [r1, #20]
 80017fa:	60a2      	str	r2, [r4, #8]
 80017fc:	9b01      	ldr	r3, [sp, #4]
 80017fe:	2b00      	cmp	r3, #0
 8001800:	ddee      	ble.n	80017e0 <__sflush_r+0xb8>
 8001802:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001804:	0032      	movs	r2, r6
 8001806:	001f      	movs	r7, r3
 8001808:	0028      	movs	r0, r5
 800180a:	9b01      	ldr	r3, [sp, #4]
 800180c:	6a21      	ldr	r1, [r4, #32]
 800180e:	47b8      	blx	r7
 8001810:	2800      	cmp	r0, #0
 8001812:	dc07      	bgt.n	8001824 <__sflush_r+0xfc>
 8001814:	89a2      	ldrh	r2, [r4, #12]
 8001816:	2340      	movs	r3, #64	@ 0x40
 8001818:	2001      	movs	r0, #1
 800181a:	4313      	orrs	r3, r2
 800181c:	b21b      	sxth	r3, r3
 800181e:	81a3      	strh	r3, [r4, #12]
 8001820:	4240      	negs	r0, r0
 8001822:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001824:	9b01      	ldr	r3, [sp, #4]
 8001826:	1836      	adds	r6, r6, r0
 8001828:	1a1b      	subs	r3, r3, r0
 800182a:	9301      	str	r3, [sp, #4]
 800182c:	e7e6      	b.n	80017fc <__sflush_r+0xd4>
 800182e:	46c0      	nop			@ (mov r8, r8)
 8001830:	dfbffffe 	.word	0xdfbffffe

08001834 <_fflush_r>:
 8001834:	690b      	ldr	r3, [r1, #16]
 8001836:	b570      	push	{r4, r5, r6, lr}
 8001838:	0005      	movs	r5, r0
 800183a:	000c      	movs	r4, r1
 800183c:	2b00      	cmp	r3, #0
 800183e:	d102      	bne.n	8001846 <_fflush_r+0x12>
 8001840:	2500      	movs	r5, #0
 8001842:	0028      	movs	r0, r5
 8001844:	bd70      	pop	{r4, r5, r6, pc}
 8001846:	2800      	cmp	r0, #0
 8001848:	d004      	beq.n	8001854 <_fflush_r+0x20>
 800184a:	6a03      	ldr	r3, [r0, #32]
 800184c:	2b00      	cmp	r3, #0
 800184e:	d101      	bne.n	8001854 <_fflush_r+0x20>
 8001850:	f7ff f998 	bl	8000b84 <__sinit>
 8001854:	220c      	movs	r2, #12
 8001856:	5ea3      	ldrsh	r3, [r4, r2]
 8001858:	2b00      	cmp	r3, #0
 800185a:	d0f1      	beq.n	8001840 <_fflush_r+0xc>
 800185c:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800185e:	07d2      	lsls	r2, r2, #31
 8001860:	d404      	bmi.n	800186c <_fflush_r+0x38>
 8001862:	059b      	lsls	r3, r3, #22
 8001864:	d402      	bmi.n	800186c <_fflush_r+0x38>
 8001866:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001868:	f7ff fb9d 	bl	8000fa6 <__retarget_lock_acquire_recursive>
 800186c:	0028      	movs	r0, r5
 800186e:	0021      	movs	r1, r4
 8001870:	f7ff ff5a 	bl	8001728 <__sflush_r>
 8001874:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001876:	0005      	movs	r5, r0
 8001878:	07db      	lsls	r3, r3, #31
 800187a:	d4e2      	bmi.n	8001842 <_fflush_r+0xe>
 800187c:	89a3      	ldrh	r3, [r4, #12]
 800187e:	059b      	lsls	r3, r3, #22
 8001880:	d4df      	bmi.n	8001842 <_fflush_r+0xe>
 8001882:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001884:	f7ff fb90 	bl	8000fa8 <__retarget_lock_release_recursive>
 8001888:	e7db      	b.n	8001842 <_fflush_r+0xe>
	...

0800188c <__swhatbuf_r>:
 800188c:	b570      	push	{r4, r5, r6, lr}
 800188e:	000e      	movs	r6, r1
 8001890:	001d      	movs	r5, r3
 8001892:	230e      	movs	r3, #14
 8001894:	5ec9      	ldrsh	r1, [r1, r3]
 8001896:	0014      	movs	r4, r2
 8001898:	b096      	sub	sp, #88	@ 0x58
 800189a:	2900      	cmp	r1, #0
 800189c:	da0c      	bge.n	80018b8 <__swhatbuf_r+0x2c>
 800189e:	89b2      	ldrh	r2, [r6, #12]
 80018a0:	2380      	movs	r3, #128	@ 0x80
 80018a2:	0011      	movs	r1, r2
 80018a4:	4019      	ands	r1, r3
 80018a6:	421a      	tst	r2, r3
 80018a8:	d114      	bne.n	80018d4 <__swhatbuf_r+0x48>
 80018aa:	2380      	movs	r3, #128	@ 0x80
 80018ac:	00db      	lsls	r3, r3, #3
 80018ae:	2000      	movs	r0, #0
 80018b0:	6029      	str	r1, [r5, #0]
 80018b2:	6023      	str	r3, [r4, #0]
 80018b4:	b016      	add	sp, #88	@ 0x58
 80018b6:	bd70      	pop	{r4, r5, r6, pc}
 80018b8:	466a      	mov	r2, sp
 80018ba:	f000 f853 	bl	8001964 <_fstat_r>
 80018be:	2800      	cmp	r0, #0
 80018c0:	dbed      	blt.n	800189e <__swhatbuf_r+0x12>
 80018c2:	23f0      	movs	r3, #240	@ 0xf0
 80018c4:	9901      	ldr	r1, [sp, #4]
 80018c6:	021b      	lsls	r3, r3, #8
 80018c8:	4019      	ands	r1, r3
 80018ca:	4b04      	ldr	r3, [pc, #16]	@ (80018dc <__swhatbuf_r+0x50>)
 80018cc:	18c9      	adds	r1, r1, r3
 80018ce:	424b      	negs	r3, r1
 80018d0:	4159      	adcs	r1, r3
 80018d2:	e7ea      	b.n	80018aa <__swhatbuf_r+0x1e>
 80018d4:	2100      	movs	r1, #0
 80018d6:	2340      	movs	r3, #64	@ 0x40
 80018d8:	e7e9      	b.n	80018ae <__swhatbuf_r+0x22>
 80018da:	46c0      	nop			@ (mov r8, r8)
 80018dc:	ffffe000 	.word	0xffffe000

080018e0 <__smakebuf_r>:
 80018e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018e2:	2602      	movs	r6, #2
 80018e4:	898b      	ldrh	r3, [r1, #12]
 80018e6:	0005      	movs	r5, r0
 80018e8:	000c      	movs	r4, r1
 80018ea:	b085      	sub	sp, #20
 80018ec:	4233      	tst	r3, r6
 80018ee:	d007      	beq.n	8001900 <__smakebuf_r+0x20>
 80018f0:	0023      	movs	r3, r4
 80018f2:	3347      	adds	r3, #71	@ 0x47
 80018f4:	6023      	str	r3, [r4, #0]
 80018f6:	6123      	str	r3, [r4, #16]
 80018f8:	2301      	movs	r3, #1
 80018fa:	6163      	str	r3, [r4, #20]
 80018fc:	b005      	add	sp, #20
 80018fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001900:	ab03      	add	r3, sp, #12
 8001902:	aa02      	add	r2, sp, #8
 8001904:	f7ff ffc2 	bl	800188c <__swhatbuf_r>
 8001908:	9f02      	ldr	r7, [sp, #8]
 800190a:	9001      	str	r0, [sp, #4]
 800190c:	0039      	movs	r1, r7
 800190e:	0028      	movs	r0, r5
 8001910:	f7ff fbb8 	bl	8001084 <_malloc_r>
 8001914:	2800      	cmp	r0, #0
 8001916:	d108      	bne.n	800192a <__smakebuf_r+0x4a>
 8001918:	220c      	movs	r2, #12
 800191a:	5ea3      	ldrsh	r3, [r4, r2]
 800191c:	059a      	lsls	r2, r3, #22
 800191e:	d4ed      	bmi.n	80018fc <__smakebuf_r+0x1c>
 8001920:	2203      	movs	r2, #3
 8001922:	4393      	bics	r3, r2
 8001924:	431e      	orrs	r6, r3
 8001926:	81a6      	strh	r6, [r4, #12]
 8001928:	e7e2      	b.n	80018f0 <__smakebuf_r+0x10>
 800192a:	2380      	movs	r3, #128	@ 0x80
 800192c:	89a2      	ldrh	r2, [r4, #12]
 800192e:	6020      	str	r0, [r4, #0]
 8001930:	4313      	orrs	r3, r2
 8001932:	81a3      	strh	r3, [r4, #12]
 8001934:	9b03      	ldr	r3, [sp, #12]
 8001936:	6120      	str	r0, [r4, #16]
 8001938:	6167      	str	r7, [r4, #20]
 800193a:	2b00      	cmp	r3, #0
 800193c:	d00c      	beq.n	8001958 <__smakebuf_r+0x78>
 800193e:	0028      	movs	r0, r5
 8001940:	230e      	movs	r3, #14
 8001942:	5ee1      	ldrsh	r1, [r4, r3]
 8001944:	f000 f820 	bl	8001988 <_isatty_r>
 8001948:	2800      	cmp	r0, #0
 800194a:	d005      	beq.n	8001958 <__smakebuf_r+0x78>
 800194c:	2303      	movs	r3, #3
 800194e:	89a2      	ldrh	r2, [r4, #12]
 8001950:	439a      	bics	r2, r3
 8001952:	3b02      	subs	r3, #2
 8001954:	4313      	orrs	r3, r2
 8001956:	81a3      	strh	r3, [r4, #12]
 8001958:	89a3      	ldrh	r3, [r4, #12]
 800195a:	9a01      	ldr	r2, [sp, #4]
 800195c:	4313      	orrs	r3, r2
 800195e:	81a3      	strh	r3, [r4, #12]
 8001960:	e7cc      	b.n	80018fc <__smakebuf_r+0x1c>
	...

08001964 <_fstat_r>:
 8001964:	2300      	movs	r3, #0
 8001966:	b570      	push	{r4, r5, r6, lr}
 8001968:	4d06      	ldr	r5, [pc, #24]	@ (8001984 <_fstat_r+0x20>)
 800196a:	0004      	movs	r4, r0
 800196c:	0008      	movs	r0, r1
 800196e:	0011      	movs	r1, r2
 8001970:	602b      	str	r3, [r5, #0]
 8001972:	f7fe fdac 	bl	80004ce <_fstat>
 8001976:	1c43      	adds	r3, r0, #1
 8001978:	d103      	bne.n	8001982 <_fstat_r+0x1e>
 800197a:	682b      	ldr	r3, [r5, #0]
 800197c:	2b00      	cmp	r3, #0
 800197e:	d000      	beq.n	8001982 <_fstat_r+0x1e>
 8001980:	6023      	str	r3, [r4, #0]
 8001982:	bd70      	pop	{r4, r5, r6, pc}
 8001984:	200001bc 	.word	0x200001bc

08001988 <_isatty_r>:
 8001988:	2300      	movs	r3, #0
 800198a:	b570      	push	{r4, r5, r6, lr}
 800198c:	4d06      	ldr	r5, [pc, #24]	@ (80019a8 <_isatty_r+0x20>)
 800198e:	0004      	movs	r4, r0
 8001990:	0008      	movs	r0, r1
 8001992:	602b      	str	r3, [r5, #0]
 8001994:	f7fe fda9 	bl	80004ea <_isatty>
 8001998:	1c43      	adds	r3, r0, #1
 800199a:	d103      	bne.n	80019a4 <_isatty_r+0x1c>
 800199c:	682b      	ldr	r3, [r5, #0]
 800199e:	2b00      	cmp	r3, #0
 80019a0:	d000      	beq.n	80019a4 <_isatty_r+0x1c>
 80019a2:	6023      	str	r3, [r4, #0]
 80019a4:	bd70      	pop	{r4, r5, r6, pc}
 80019a6:	46c0      	nop			@ (mov r8, r8)
 80019a8:	200001bc 	.word	0x200001bc

080019ac <_sbrk_r>:
 80019ac:	2300      	movs	r3, #0
 80019ae:	b570      	push	{r4, r5, r6, lr}
 80019b0:	4d06      	ldr	r5, [pc, #24]	@ (80019cc <_sbrk_r+0x20>)
 80019b2:	0004      	movs	r4, r0
 80019b4:	0008      	movs	r0, r1
 80019b6:	602b      	str	r3, [r5, #0]
 80019b8:	f7fe fdac 	bl	8000514 <_sbrk>
 80019bc:	1c43      	adds	r3, r0, #1
 80019be:	d103      	bne.n	80019c8 <_sbrk_r+0x1c>
 80019c0:	682b      	ldr	r3, [r5, #0]
 80019c2:	2b00      	cmp	r3, #0
 80019c4:	d000      	beq.n	80019c8 <_sbrk_r+0x1c>
 80019c6:	6023      	str	r3, [r4, #0]
 80019c8:	bd70      	pop	{r4, r5, r6, pc}
 80019ca:	46c0      	nop			@ (mov r8, r8)
 80019cc:	200001bc 	.word	0x200001bc

080019d0 <memchr>:
 80019d0:	b2c9      	uxtb	r1, r1
 80019d2:	1882      	adds	r2, r0, r2
 80019d4:	4290      	cmp	r0, r2
 80019d6:	d101      	bne.n	80019dc <memchr+0xc>
 80019d8:	2000      	movs	r0, #0
 80019da:	4770      	bx	lr
 80019dc:	7803      	ldrb	r3, [r0, #0]
 80019de:	428b      	cmp	r3, r1
 80019e0:	d0fb      	beq.n	80019da <memchr+0xa>
 80019e2:	3001      	adds	r0, #1
 80019e4:	e7f6      	b.n	80019d4 <memchr+0x4>
	...

080019e8 <_init>:
 80019e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019ea:	46c0      	nop			@ (mov r8, r8)
 80019ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019ee:	bc08      	pop	{r3}
 80019f0:	469e      	mov	lr, r3
 80019f2:	4770      	bx	lr

080019f4 <_fini>:
 80019f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019f6:	46c0      	nop			@ (mov r8, r8)
 80019f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019fa:	bc08      	pop	{r3}
 80019fc:	469e      	mov	lr, r3
 80019fe:	4770      	bx	lr
