
assignment3-dancinglights-HartnettMatt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000194c  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000c0  08001a0c  08001a0c  00002a0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001acc  08001acc  00003060  2**0
                  CONTENTS
  4 .ARM          00000000  08001acc  08001acc  00003060  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001acc  08001acc  00003060  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001acc  08001acc  00002acc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001ad0  08001ad0  00002ad0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000060  20000000  08001ad4  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000060  08001b34  00003060  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  08001b34  000031cc  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00003060  2**0
                  CONTENTS, READONLY
 12 .debug_info   000018b7  00000000  00000000  00003088  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000093a  00000000  00000000  0000493f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000258  00000000  00000000  00005280  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000190  00000000  00000000  000054d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00014b97  00000000  00000000  00005668  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003bbc  00000000  00000000  0001a1ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00068711  00000000  00000000  0001ddbb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000864cc  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000d70  00000000  00000000  00086510  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000095  00000000  00000000  00087280  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000060 	.word	0x20000060
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080019f4 	.word	0x080019f4

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000064 	.word	0x20000064
 8000104:	080019f4 	.word	0x080019f4

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	@ 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f806 	bl	8000230 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			@ (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__aeabi_idiv0>:
 8000230:	4770      	bx	lr
 8000232:	46c0      	nop			@ (mov r8, r8)

08000234 <button_init>:

#include <stm32f091xc.h>
#include "button.h"
#include "utilities.h"

int button_init(void) {
 8000234:	b580      	push	{r7, lr}
 8000236:	af00      	add	r7, sp, #0

	// This section of code was taken from Alex Dean's Github
	// https://github.com/alexander-g-dean/ESF/blob/master/ST/Code/ch2/Basic-LED/main.c
	// Enable peripheral clock of GPIOC (for Switch B1)
	RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 8000238:	4b0c      	ldr	r3, [pc, #48]	@ (800026c <button_init+0x38>)
 800023a:	695a      	ldr	r2, [r3, #20]
 800023c:	4b0b      	ldr	r3, [pc, #44]	@ (800026c <button_init+0x38>)
 800023e:	2180      	movs	r1, #128	@ 0x80
 8000240:	0309      	lsls	r1, r1, #12
 8000242:	430a      	orrs	r2, r1
 8000244:	615a      	str	r2, [r3, #20]
	// Configure PC13 in input mode (00=0)
	MODIFY_FIELD(GPIOC->MODER, GPIO_MODER_MODER13, ESF_GPIO_MODER_INPUT);
 8000246:	4b0a      	ldr	r3, [pc, #40]	@ (8000270 <button_init+0x3c>)
 8000248:	681a      	ldr	r2, [r3, #0]
 800024a:	4b09      	ldr	r3, [pc, #36]	@ (8000270 <button_init+0x3c>)
 800024c:	4909      	ldr	r1, [pc, #36]	@ (8000274 <button_init+0x40>)
 800024e:	400a      	ands	r2, r1
 8000250:	601a      	str	r2, [r3, #0]
	// End of Alex Dean Code
	MODIFY_FIELD(GPIOC->PUPDR, GPIO_PUPDR_PUPDR13, B1_PULL_VALUE);
 8000252:	4b07      	ldr	r3, [pc, #28]	@ (8000270 <button_init+0x3c>)
 8000254:	68db      	ldr	r3, [r3, #12]
 8000256:	4a07      	ldr	r2, [pc, #28]	@ (8000274 <button_init+0x40>)
 8000258:	401a      	ands	r2, r3
 800025a:	4b05      	ldr	r3, [pc, #20]	@ (8000270 <button_init+0x3c>)
 800025c:	2180      	movs	r1, #128	@ 0x80
 800025e:	04c9      	lsls	r1, r1, #19
 8000260:	430a      	orrs	r2, r1
 8000262:	60da      	str	r2, [r3, #12]

	return 0;
 8000264:	2300      	movs	r3, #0

}
 8000266:	0018      	movs	r0, r3
 8000268:	46bd      	mov	sp, r7
 800026a:	bd80      	pop	{r7, pc}
 800026c:	40021000 	.word	0x40021000
 8000270:	48000800 	.word	0x48000800
 8000274:	f3ffffff 	.word	0xf3ffffff

08000278 <read_button>:

int read_button(void){
 8000278:	b580      	push	{r7, lr}
 800027a:	af00      	add	r7, sp, #0
	return !(GPIOC->IDR & B1_IN_MSK);
 800027c:	4b05      	ldr	r3, [pc, #20]	@ (8000294 <read_button+0x1c>)
 800027e:	691a      	ldr	r2, [r3, #16]
 8000280:	2380      	movs	r3, #128	@ 0x80
 8000282:	019b      	lsls	r3, r3, #6
 8000284:	4013      	ands	r3, r2
 8000286:	425a      	negs	r2, r3
 8000288:	4153      	adcs	r3, r2
 800028a:	b2db      	uxtb	r3, r3
}
 800028c:	0018      	movs	r0, r3
 800028e:	46bd      	mov	sp, r7
 8000290:	bd80      	pop	{r7, pc}
 8000292:	46c0      	nop			@ (mov r8, r8)
 8000294:	48000800 	.word	0x48000800

08000298 <eled_init>:
#include "log.h"
#include <stm32f091xc.h>
#include "eled.h"
#include "utilities.h"

int eled_init(void) {
 8000298:	b580      	push	{r7, lr}
 800029a:	af00      	add	r7, sp, #0
	// Enable peripheral clock of GPIOB (for PB3)
	RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 800029c:	4b0c      	ldr	r3, [pc, #48]	@ (80002d0 <eled_init+0x38>)
 800029e:	695a      	ldr	r2, [r3, #20]
 80002a0:	4b0b      	ldr	r3, [pc, #44]	@ (80002d0 <eled_init+0x38>)
 80002a2:	2180      	movs	r1, #128	@ 0x80
 80002a4:	02c9      	lsls	r1, r1, #11
 80002a6:	430a      	orrs	r2, r1
 80002a8:	615a      	str	r2, [r3, #20]
	// Configure PB3 in output mode (01=1)
	MODIFY_FIELD(GPIOB->MODER, GPIO_MODER_MODER3, ESF_GPIO_MODER_OUTPUT);
 80002aa:	4b0a      	ldr	r3, [pc, #40]	@ (80002d4 <eled_init+0x3c>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	22c0      	movs	r2, #192	@ 0xc0
 80002b0:	4393      	bics	r3, r2
 80002b2:	001a      	movs	r2, r3
 80002b4:	4b07      	ldr	r3, [pc, #28]	@ (80002d4 <eled_init+0x3c>)
 80002b6:	2140      	movs	r1, #64	@ 0x40
 80002b8:	430a      	orrs	r2, r1
 80002ba:	601a      	str	r2, [r3, #0]
	// Turn off PB3
	GPIOB->BSRR |= PB3_OFF_MSK;
 80002bc:	4b05      	ldr	r3, [pc, #20]	@ (80002d4 <eled_init+0x3c>)
 80002be:	699a      	ldr	r2, [r3, #24]
 80002c0:	4b04      	ldr	r3, [pc, #16]	@ (80002d4 <eled_init+0x3c>)
 80002c2:	2108      	movs	r1, #8
 80002c4:	430a      	orrs	r2, r1
 80002c6:	619a      	str	r2, [r3, #24]

	return 0;
 80002c8:	2300      	movs	r3, #0

}
 80002ca:	0018      	movs	r0, r3
 80002cc:	46bd      	mov	sp, r7
 80002ce:	bd80      	pop	{r7, pc}
 80002d0:	40021000 	.word	0x40021000
 80002d4:	48000400 	.word	0x48000400

080002d8 <eled_on>:

int eled_on(void){
 80002d8:	b580      	push	{r7, lr}
 80002da:	af00      	add	r7, sp, #0
	LOG("ELED ON\r\n");
 80002dc:	4b07      	ldr	r3, [pc, #28]	@ (80002fc <eled_on+0x24>)
 80002de:	0018      	movs	r0, r3
 80002e0:	f000 fcf0 	bl	8000cc4 <puts>
	GPIOB->BSRR |= PB3_ON_MSK;
 80002e4:	4b06      	ldr	r3, [pc, #24]	@ (8000300 <eled_on+0x28>)
 80002e6:	699a      	ldr	r2, [r3, #24]
 80002e8:	4b05      	ldr	r3, [pc, #20]	@ (8000300 <eled_on+0x28>)
 80002ea:	2180      	movs	r1, #128	@ 0x80
 80002ec:	0309      	lsls	r1, r1, #12
 80002ee:	430a      	orrs	r2, r1
 80002f0:	619a      	str	r2, [r3, #24]
	return 0;
 80002f2:	2300      	movs	r3, #0
}
 80002f4:	0018      	movs	r0, r3
 80002f6:	46bd      	mov	sp, r7
 80002f8:	bd80      	pop	{r7, pc}
 80002fa:	46c0      	nop			@ (mov r8, r8)
 80002fc:	08001a0c 	.word	0x08001a0c
 8000300:	48000400 	.word	0x48000400

08000304 <eled_off>:

int eled_off(void){
 8000304:	b580      	push	{r7, lr}
 8000306:	af00      	add	r7, sp, #0
	LOG("ELED OFF\r\n");
 8000308:	4b06      	ldr	r3, [pc, #24]	@ (8000324 <eled_off+0x20>)
 800030a:	0018      	movs	r0, r3
 800030c:	f000 fcda 	bl	8000cc4 <puts>
	GPIOB->BSRR |= PB3_OFF_MSK;
 8000310:	4b05      	ldr	r3, [pc, #20]	@ (8000328 <eled_off+0x24>)
 8000312:	699a      	ldr	r2, [r3, #24]
 8000314:	4b04      	ldr	r3, [pc, #16]	@ (8000328 <eled_off+0x24>)
 8000316:	2108      	movs	r1, #8
 8000318:	430a      	orrs	r2, r1
 800031a:	619a      	str	r2, [r3, #24]
	return 0;
 800031c:	2300      	movs	r3, #0
}
 800031e:	0018      	movs	r0, r3
 8000320:	46bd      	mov	sp, r7
 8000322:	bd80      	pop	{r7, pc}
 8000324:	08001a18 	.word	0x08001a18
 8000328:	48000400 	.word	0x48000400

0800032c <init>:
 * Parameters:
 *   none
 *
 * Returns: 0 if everything runs correctly, 0 if an error occurs
 */
int init(void) {
 800032c:	b580      	push	{r7, lr}
 800032e:	af00      	add	r7, sp, #0

	// Configure peripherals
	uled_init();
 8000330:	f000 f96c 	bl	800060c <uled_init>
	eled_init();
 8000334:	f7ff ffb0 	bl	8000298 <eled_init>
	button_init();
 8000338:	f7ff ff7c 	bl	8000234 <button_init>

	// Start up sequence (uninterruptible)
	uled_on();
 800033c:	f000 f98c 	bl	8000658 <uled_on>
	delay(STARTUP_LONG_TIME, 0);
 8000340:	23fa      	movs	r3, #250	@ 0xfa
 8000342:	00db      	lsls	r3, r3, #3
 8000344:	2100      	movs	r1, #0
 8000346:	0018      	movs	r0, r3
 8000348:	f000 f922 	bl	8000590 <delay>
	uled_off();
 800034c:	f000 f998 	bl	8000680 <uled_off>
	delay(STARTUP_SHORT_TIME, 0);
 8000350:	23fa      	movs	r3, #250	@ 0xfa
 8000352:	009b      	lsls	r3, r3, #2
 8000354:	2100      	movs	r1, #0
 8000356:	0018      	movs	r0, r3
 8000358:	f000 f91a 	bl	8000590 <delay>
	eled_on();
 800035c:	f7ff ffbc 	bl	80002d8 <eled_on>
	delay(STARTUP_LONG_TIME, 0);
 8000360:	23fa      	movs	r3, #250	@ 0xfa
 8000362:	00db      	lsls	r3, r3, #3
 8000364:	2100      	movs	r1, #0
 8000366:	0018      	movs	r0, r3
 8000368:	f000 f912 	bl	8000590 <delay>
	eled_off();
 800036c:	f7ff ffca 	bl	8000304 <eled_off>
	delay(STARTUP_SHORT_TIME, 0);
 8000370:	23fa      	movs	r3, #250	@ 0xfa
 8000372:	009b      	lsls	r3, r3, #2
 8000374:	2100      	movs	r1, #0
 8000376:	0018      	movs	r0, r3
 8000378:	f000 f90a 	bl	8000590 <delay>
	uled_on();
 800037c:	f000 f96c 	bl	8000658 <uled_on>
	delay(STARTUP_LONG_TIME, 0);
 8000380:	23fa      	movs	r3, #250	@ 0xfa
 8000382:	00db      	lsls	r3, r3, #3
 8000384:	2100      	movs	r1, #0
 8000386:	0018      	movs	r0, r3
 8000388:	f000 f902 	bl	8000590 <delay>
	uled_off();
 800038c:	f000 f978 	bl	8000680 <uled_off>
	delay(STARTUP_SHORT_TIME, 0);
 8000390:	23fa      	movs	r3, #250	@ 0xfa
 8000392:	009b      	lsls	r3, r3, #2
 8000394:	2100      	movs	r1, #0
 8000396:	0018      	movs	r0, r3
 8000398:	f000 f8fa 	bl	8000590 <delay>

	return 0;
 800039c:	2300      	movs	r3, #0

}
 800039e:	0018      	movs	r0, r3
 80003a0:	46bd      	mov	sp, r7
 80003a2:	bd80      	pop	{r7, pc}

080003a4 <sequence1>:
 * Parameters:
 *   none
 *
 * Returns: 0 once the button is pressed, 1 if an error occurs
 */
int sequence1(void) {
 80003a4:	b580      	push	{r7, lr}
 80003a6:	af00      	add	r7, sp, #0
	// Loop the blinking infinitely unless a button is pressed
	while (1) {
		eled_on();
 80003a8:	f7ff ff96 	bl	80002d8 <eled_on>
		// These if statements run an interruptible delay loop
		// If the button interrupts the loop, exit the sequence
		if (delay(ELED_ON_TIME, 1)) {
 80003ac:	23fa      	movs	r3, #250	@ 0xfa
 80003ae:	009b      	lsls	r3, r3, #2
 80003b0:	2101      	movs	r1, #1
 80003b2:	0018      	movs	r0, r3
 80003b4:	f000 f8ec 	bl	8000590 <delay>
 80003b8:	1e03      	subs	r3, r0, #0
 80003ba:	d001      	beq.n	80003c0 <sequence1+0x1c>
			return 0;
 80003bc:	2300      	movs	r3, #0
 80003be:	e00a      	b.n	80003d6 <sequence1+0x32>
		}
		eled_off();
 80003c0:	f7ff ffa0 	bl	8000304 <eled_off>
		if (delay(ELED_OFF_TIME, 1)) {
 80003c4:	23fa      	movs	r3, #250	@ 0xfa
 80003c6:	005b      	lsls	r3, r3, #1
 80003c8:	2101      	movs	r1, #1
 80003ca:	0018      	movs	r0, r3
 80003cc:	f000 f8e0 	bl	8000590 <delay>
 80003d0:	1e03      	subs	r3, r0, #0
 80003d2:	d0e9      	beq.n	80003a8 <sequence1+0x4>
			return 0;
 80003d4:	2300      	movs	r3, #0
		}
	}
	return 1;
}
 80003d6:	0018      	movs	r0, r3
 80003d8:	46bd      	mov	sp, r7
 80003da:	bd80      	pop	{r7, pc}

080003dc <sequence2>:
 * Parameters:
 *   none
 *
 * Returns: 0 once the button is pressed, 1 if an error occurs
 */
int sequence2(void) {
 80003dc:	b580      	push	{r7, lr}
 80003de:	af00      	add	r7, sp, #0
	while (1) {
		uled_on();
 80003e0:	f000 f93a 	bl	8000658 <uled_on>
		if (delay(ULED_ON_TIME, 1)) {
 80003e4:	4b0a      	ldr	r3, [pc, #40]	@ (8000410 <sequence2+0x34>)
 80003e6:	2101      	movs	r1, #1
 80003e8:	0018      	movs	r0, r3
 80003ea:	f000 f8d1 	bl	8000590 <delay>
 80003ee:	1e03      	subs	r3, r0, #0
 80003f0:	d001      	beq.n	80003f6 <sequence2+0x1a>
			return 0;
 80003f2:	2300      	movs	r3, #0
 80003f4:	e009      	b.n	800040a <sequence2+0x2e>
		}
		uled_off();
 80003f6:	f000 f943 	bl	8000680 <uled_off>
		if (delay(ULED_OFF_TIME, 1)) {
 80003fa:	4b06      	ldr	r3, [pc, #24]	@ (8000414 <sequence2+0x38>)
 80003fc:	2101      	movs	r1, #1
 80003fe:	0018      	movs	r0, r3
 8000400:	f000 f8c6 	bl	8000590 <delay>
 8000404:	1e03      	subs	r3, r0, #0
 8000406:	d0eb      	beq.n	80003e0 <sequence2+0x4>
			return 0;
 8000408:	2300      	movs	r3, #0
		}
	}
	return 1;
}
 800040a:	0018      	movs	r0, r3
 800040c:	46bd      	mov	sp, r7
 800040e:	bd80      	pop	{r7, pc}
 8000410:	00000bb8 	.word	0x00000bb8
 8000414:	000005dc 	.word	0x000005dc

08000418 <main>:

int main(void) {
 8000418:	b580      	push	{r7, lr}
 800041a:	af00      	add	r7, sp, #0
	 * external program such as Putty or TeraTerm to view printf output.
	 * The settings are: Baud: 9600, Parity: None, Stop Bits: 1 with
	 * the ST-Link COM port setting.
	 * Clocks: Processor = 48 Mhz. AHB = 48 MHz. APB = 24 MHz.
	 */
	LOG("Hello World !\r\n");
 800041c:	4b0b      	ldr	r3, [pc, #44]	@ (800044c <main+0x34>)
 800041e:	0018      	movs	r0, r3
 8000420:	f000 fc50 	bl	8000cc4 <puts>
	init();
 8000424:	f7ff ff82 	bl	800032c <init>

	// Loop infinitely - if one sequence returns, switch to the other
	while (1) {
		sequence1(); 	// Blink ELED
 8000428:	f7ff ffbc 	bl	80003a4 <sequence1>
		eled_off(); 	// Ensure the ELED is off before moving on
 800042c:	f7ff ff6a 	bl	8000304 <eled_off>
#ifdef DEBUG
		printf("CHANGE LED TO ULED\r\n");
 8000430:	4b07      	ldr	r3, [pc, #28]	@ (8000450 <main+0x38>)
 8000432:	0018      	movs	r0, r3
 8000434:	f000 fc46 	bl	8000cc4 <puts>
#endif //DEBUG
		sequence2(); 	// Blink ULED
 8000438:	f7ff ffd0 	bl	80003dc <sequence2>
		uled_off(); 	// Ensure the ULED is off before moving on
 800043c:	f000 f920 	bl	8000680 <uled_off>
#ifdef DEBUG
		printf("CHANGE LED TO ELED\r\n");
 8000440:	4b04      	ldr	r3, [pc, #16]	@ (8000454 <main+0x3c>)
 8000442:	0018      	movs	r0, r3
 8000444:	f000 fc3e 	bl	8000cc4 <puts>
		sequence1(); 	// Blink ELED
 8000448:	46c0      	nop			@ (mov r8, r8)
 800044a:	e7ed      	b.n	8000428 <main+0x10>
 800044c:	08001a24 	.word	0x08001a24
 8000450:	08001a34 	.word	0x08001a34
 8000454:	08001a48 	.word	0x08001a48

08000458 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000458:	b580      	push	{r7, lr}
 800045a:	b086      	sub	sp, #24
 800045c:	af00      	add	r7, sp, #0
 800045e:	60f8      	str	r0, [r7, #12]
 8000460:	60b9      	str	r1, [r7, #8]
 8000462:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000464:	2300      	movs	r3, #0
 8000466:	617b      	str	r3, [r7, #20]
 8000468:	e00a      	b.n	8000480 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800046a:	e000      	b.n	800046e <_read+0x16>
 800046c:	bf00      	nop
 800046e:	0001      	movs	r1, r0
 8000470:	68bb      	ldr	r3, [r7, #8]
 8000472:	1c5a      	adds	r2, r3, #1
 8000474:	60ba      	str	r2, [r7, #8]
 8000476:	b2ca      	uxtb	r2, r1
 8000478:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800047a:	697b      	ldr	r3, [r7, #20]
 800047c:	3301      	adds	r3, #1
 800047e:	617b      	str	r3, [r7, #20]
 8000480:	697a      	ldr	r2, [r7, #20]
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	429a      	cmp	r2, r3
 8000486:	dbf0      	blt.n	800046a <_read+0x12>
  }

  return len;
 8000488:	687b      	ldr	r3, [r7, #4]
}
 800048a:	0018      	movs	r0, r3
 800048c:	46bd      	mov	sp, r7
 800048e:	b006      	add	sp, #24
 8000490:	bd80      	pop	{r7, pc}

08000492 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000492:	b580      	push	{r7, lr}
 8000494:	b086      	sub	sp, #24
 8000496:	af00      	add	r7, sp, #0
 8000498:	60f8      	str	r0, [r7, #12]
 800049a:	60b9      	str	r1, [r7, #8]
 800049c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800049e:	2300      	movs	r3, #0
 80004a0:	617b      	str	r3, [r7, #20]
 80004a2:	e009      	b.n	80004b8 <_write+0x26>
  {
    __io_putchar(*ptr++);
 80004a4:	68bb      	ldr	r3, [r7, #8]
 80004a6:	1c5a      	adds	r2, r3, #1
 80004a8:	60ba      	str	r2, [r7, #8]
 80004aa:	781b      	ldrb	r3, [r3, #0]
 80004ac:	0018      	movs	r0, r3
 80004ae:	f000 fad1 	bl	8000a54 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004b2:	697b      	ldr	r3, [r7, #20]
 80004b4:	3301      	adds	r3, #1
 80004b6:	617b      	str	r3, [r7, #20]
 80004b8:	697a      	ldr	r2, [r7, #20]
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	429a      	cmp	r2, r3
 80004be:	dbf1      	blt.n	80004a4 <_write+0x12>
  }
  return len;
 80004c0:	687b      	ldr	r3, [r7, #4]
}
 80004c2:	0018      	movs	r0, r3
 80004c4:	46bd      	mov	sp, r7
 80004c6:	b006      	add	sp, #24
 80004c8:	bd80      	pop	{r7, pc}

080004ca <_close>:

int _close(int file)
{
 80004ca:	b580      	push	{r7, lr}
 80004cc:	b082      	sub	sp, #8
 80004ce:	af00      	add	r7, sp, #0
 80004d0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80004d2:	2301      	movs	r3, #1
 80004d4:	425b      	negs	r3, r3
}
 80004d6:	0018      	movs	r0, r3
 80004d8:	46bd      	mov	sp, r7
 80004da:	b002      	add	sp, #8
 80004dc:	bd80      	pop	{r7, pc}

080004de <_fstat>:


int _fstat(int file, struct stat *st)
{
 80004de:	b580      	push	{r7, lr}
 80004e0:	b082      	sub	sp, #8
 80004e2:	af00      	add	r7, sp, #0
 80004e4:	6078      	str	r0, [r7, #4]
 80004e6:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80004e8:	683b      	ldr	r3, [r7, #0]
 80004ea:	2280      	movs	r2, #128	@ 0x80
 80004ec:	0192      	lsls	r2, r2, #6
 80004ee:	605a      	str	r2, [r3, #4]
  return 0;
 80004f0:	2300      	movs	r3, #0
}
 80004f2:	0018      	movs	r0, r3
 80004f4:	46bd      	mov	sp, r7
 80004f6:	b002      	add	sp, #8
 80004f8:	bd80      	pop	{r7, pc}

080004fa <_isatty>:

int _isatty(int file)
{
 80004fa:	b580      	push	{r7, lr}
 80004fc:	b082      	sub	sp, #8
 80004fe:	af00      	add	r7, sp, #0
 8000500:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000502:	2301      	movs	r3, #1
}
 8000504:	0018      	movs	r0, r3
 8000506:	46bd      	mov	sp, r7
 8000508:	b002      	add	sp, #8
 800050a:	bd80      	pop	{r7, pc}

0800050c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800050c:	b580      	push	{r7, lr}
 800050e:	b084      	sub	sp, #16
 8000510:	af00      	add	r7, sp, #0
 8000512:	60f8      	str	r0, [r7, #12]
 8000514:	60b9      	str	r1, [r7, #8]
 8000516:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000518:	2300      	movs	r3, #0
}
 800051a:	0018      	movs	r0, r3
 800051c:	46bd      	mov	sp, r7
 800051e:	b004      	add	sp, #16
 8000520:	bd80      	pop	{r7, pc}
	...

08000524 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000524:	b580      	push	{r7, lr}
 8000526:	b086      	sub	sp, #24
 8000528:	af00      	add	r7, sp, #0
 800052a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800052c:	4a14      	ldr	r2, [pc, #80]	@ (8000580 <_sbrk+0x5c>)
 800052e:	4b15      	ldr	r3, [pc, #84]	@ (8000584 <_sbrk+0x60>)
 8000530:	1ad3      	subs	r3, r2, r3
 8000532:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000534:	697b      	ldr	r3, [r7, #20]
 8000536:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000538:	4b13      	ldr	r3, [pc, #76]	@ (8000588 <_sbrk+0x64>)
 800053a:	681b      	ldr	r3, [r3, #0]
 800053c:	2b00      	cmp	r3, #0
 800053e:	d102      	bne.n	8000546 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000540:	4b11      	ldr	r3, [pc, #68]	@ (8000588 <_sbrk+0x64>)
 8000542:	4a12      	ldr	r2, [pc, #72]	@ (800058c <_sbrk+0x68>)
 8000544:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000546:	4b10      	ldr	r3, [pc, #64]	@ (8000588 <_sbrk+0x64>)
 8000548:	681a      	ldr	r2, [r3, #0]
 800054a:	687b      	ldr	r3, [r7, #4]
 800054c:	18d3      	adds	r3, r2, r3
 800054e:	693a      	ldr	r2, [r7, #16]
 8000550:	429a      	cmp	r2, r3
 8000552:	d207      	bcs.n	8000564 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000554:	f000 fd02 	bl	8000f5c <__errno>
 8000558:	0003      	movs	r3, r0
 800055a:	220c      	movs	r2, #12
 800055c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800055e:	2301      	movs	r3, #1
 8000560:	425b      	negs	r3, r3
 8000562:	e009      	b.n	8000578 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000564:	4b08      	ldr	r3, [pc, #32]	@ (8000588 <_sbrk+0x64>)
 8000566:	681b      	ldr	r3, [r3, #0]
 8000568:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800056a:	4b07      	ldr	r3, [pc, #28]	@ (8000588 <_sbrk+0x64>)
 800056c:	681a      	ldr	r2, [r3, #0]
 800056e:	687b      	ldr	r3, [r7, #4]
 8000570:	18d2      	adds	r2, r2, r3
 8000572:	4b05      	ldr	r3, [pc, #20]	@ (8000588 <_sbrk+0x64>)
 8000574:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8000576:	68fb      	ldr	r3, [r7, #12]
}
 8000578:	0018      	movs	r0, r3
 800057a:	46bd      	mov	sp, r7
 800057c:	b006      	add	sp, #24
 800057e:	bd80      	pop	{r7, pc}
 8000580:	20008000 	.word	0x20008000
 8000584:	00000400 	.word	0x00000400
 8000588:	2000007c 	.word	0x2000007c
 800058c:	200001d0 	.word	0x200001d0

08000590 <delay>:

#include "log.h"
#include "timer.h"
#include "button.h"

int delay(int delay_msec, int button_interrupt_en) {
 8000590:	b580      	push	{r7, lr}
 8000592:	b084      	sub	sp, #16
 8000594:	af00      	add	r7, sp, #0
 8000596:	6078      	str	r0, [r7, #4]
 8000598:	6039      	str	r1, [r7, #0]
	LOG("START TIMER %d\r\n", delay_msec);
 800059a:	687a      	ldr	r2, [r7, #4]
 800059c:	4b19      	ldr	r3, [pc, #100]	@ (8000604 <delay+0x74>)
 800059e:	0011      	movs	r1, r2
 80005a0:	0018      	movs	r0, r3
 80005a2:	f000 fb29 	bl	8000bf8 <iprintf>
	if (button_interrupt_en) {
 80005a6:	683b      	ldr	r3, [r7, #0]
 80005a8:	2b00      	cmp	r3, #0
 80005aa:	d017      	beq.n	80005dc <delay+0x4c>
		while (delay_msec > 0) {
 80005ac:	e011      	b.n	80005d2 <delay+0x42>
			int ctr = BUTTON_POLL_RATE * MSEC_TO_CTR;
 80005ae:	4b16      	ldr	r3, [pc, #88]	@ (8000608 <delay+0x78>)
 80005b0:	60fb      	str	r3, [r7, #12]
			while (ctr-- != 0) {
 80005b2:	e000      	b.n	80005b6 <delay+0x26>
				__asm volatile("NOP");
 80005b4:	46c0      	nop			@ (mov r8, r8)
			while (ctr-- != 0) {
 80005b6:	68fb      	ldr	r3, [r7, #12]
 80005b8:	1e5a      	subs	r2, r3, #1
 80005ba:	60fa      	str	r2, [r7, #12]
 80005bc:	2b00      	cmp	r3, #0
 80005be:	d1f9      	bne.n	80005b4 <delay+0x24>
			}
			if(read_button()){
 80005c0:	f7ff fe5a 	bl	8000278 <read_button>
 80005c4:	1e03      	subs	r3, r0, #0
 80005c6:	d001      	beq.n	80005cc <delay+0x3c>
				// If the button has been pressed, then cancel the timer
				return 1;
 80005c8:	2301      	movs	r3, #1
 80005ca:	e017      	b.n	80005fc <delay+0x6c>
			}
			delay_msec = delay_msec - BUTTON_POLL_RATE;
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	3b64      	subs	r3, #100	@ 0x64
 80005d0:	607b      	str	r3, [r7, #4]
		while (delay_msec > 0) {
 80005d2:	687b      	ldr	r3, [r7, #4]
 80005d4:	2b00      	cmp	r3, #0
 80005d6:	dcea      	bgt.n	80005ae <delay+0x1e>
		}
		return 0;
 80005d8:	2300      	movs	r3, #0
 80005da:	e00f      	b.n	80005fc <delay+0x6c>
	} else {
		int ctr = delay_msec * MSEC_TO_CTR;
 80005dc:	687a      	ldr	r2, [r7, #4]
 80005de:	0013      	movs	r3, r2
 80005e0:	009b      	lsls	r3, r3, #2
 80005e2:	189b      	adds	r3, r3, r2
 80005e4:	009a      	lsls	r2, r3, #2
 80005e6:	189b      	adds	r3, r3, r2
 80005e8:	01db      	lsls	r3, r3, #7
 80005ea:	60bb      	str	r3, [r7, #8]
		while (ctr-- != 0) {
 80005ec:	e000      	b.n	80005f0 <delay+0x60>
			__asm volatile("NOP");
 80005ee:	46c0      	nop			@ (mov r8, r8)
		while (ctr-- != 0) {
 80005f0:	68bb      	ldr	r3, [r7, #8]
 80005f2:	1e5a      	subs	r2, r3, #1
 80005f4:	60ba      	str	r2, [r7, #8]
 80005f6:	2b00      	cmp	r3, #0
 80005f8:	d1f9      	bne.n	80005ee <delay+0x5e>
		}
		return 0;
 80005fa:	2300      	movs	r3, #0
	}

}
 80005fc:	0018      	movs	r0, r3
 80005fe:	46bd      	mov	sp, r7
 8000600:	b004      	add	sp, #16
 8000602:	bd80      	pop	{r7, pc}
 8000604:	08001a5c 	.word	0x08001a5c
 8000608:	0004e200 	.word	0x0004e200

0800060c <uled_init>:
#include "log.h"
#include <stm32f091xc.h>
#include "uled.h"
#include "utilities.h"

int uled_init(void) {
 800060c:	b580      	push	{r7, lr}
 800060e:	af00      	add	r7, sp, #0

	// This section of code was taken from Alex Dean's Github
	// https://github.com/alexander-g-dean/ESF/blob/master/ST/Code/ch2/Basic-LED/main.c
	// Enable peripheral clock of GPIOA (for LD2)
	RCC->AHBENR |= RCC_AHBENR_GPIOAEN;
 8000610:	4b0f      	ldr	r3, [pc, #60]	@ (8000650 <uled_init+0x44>)
 8000612:	695a      	ldr	r2, [r3, #20]
 8000614:	4b0e      	ldr	r3, [pc, #56]	@ (8000650 <uled_init+0x44>)
 8000616:	2180      	movs	r1, #128	@ 0x80
 8000618:	0289      	lsls	r1, r1, #10
 800061a:	430a      	orrs	r2, r1
 800061c:	615a      	str	r2, [r3, #20]
	// Configure PA5 in output mode (01=1)
	MODIFY_FIELD(GPIOA->MODER, GPIO_MODER_MODER5, ESF_GPIO_MODER_OUTPUT);
 800061e:	2390      	movs	r3, #144	@ 0x90
 8000620:	05db      	lsls	r3, r3, #23
 8000622:	681b      	ldr	r3, [r3, #0]
 8000624:	4a0b      	ldr	r2, [pc, #44]	@ (8000654 <uled_init+0x48>)
 8000626:	401a      	ands	r2, r3
 8000628:	2390      	movs	r3, #144	@ 0x90
 800062a:	05db      	lsls	r3, r3, #23
 800062c:	2180      	movs	r1, #128	@ 0x80
 800062e:	00c9      	lsls	r1, r1, #3
 8000630:	430a      	orrs	r2, r1
 8000632:	601a      	str	r2, [r3, #0]
	// Turn off LD2
	GPIOA->BSRR |= LD2_OFF_MSK;
 8000634:	2390      	movs	r3, #144	@ 0x90
 8000636:	05db      	lsls	r3, r3, #23
 8000638:	699a      	ldr	r2, [r3, #24]
 800063a:	2390      	movs	r3, #144	@ 0x90
 800063c:	05db      	lsls	r3, r3, #23
 800063e:	2180      	movs	r1, #128	@ 0x80
 8000640:	0389      	lsls	r1, r1, #14
 8000642:	430a      	orrs	r2, r1
 8000644:	619a      	str	r2, [r3, #24]
	// End of Alex Dean Code

	return 0;
 8000646:	2300      	movs	r3, #0

}
 8000648:	0018      	movs	r0, r3
 800064a:	46bd      	mov	sp, r7
 800064c:	bd80      	pop	{r7, pc}
 800064e:	46c0      	nop			@ (mov r8, r8)
 8000650:	40021000 	.word	0x40021000
 8000654:	fffff3ff 	.word	0xfffff3ff

08000658 <uled_on>:

int uled_on(void){
 8000658:	b580      	push	{r7, lr}
 800065a:	af00      	add	r7, sp, #0
	LOG("ULED ON\r\n");
 800065c:	4b07      	ldr	r3, [pc, #28]	@ (800067c <uled_on+0x24>)
 800065e:	0018      	movs	r0, r3
 8000660:	f000 fb30 	bl	8000cc4 <puts>
	GPIOA->BSRR |= LD2_ON_MSK;
 8000664:	2390      	movs	r3, #144	@ 0x90
 8000666:	05db      	lsls	r3, r3, #23
 8000668:	699a      	ldr	r2, [r3, #24]
 800066a:	2390      	movs	r3, #144	@ 0x90
 800066c:	05db      	lsls	r3, r3, #23
 800066e:	2120      	movs	r1, #32
 8000670:	430a      	orrs	r2, r1
 8000672:	619a      	str	r2, [r3, #24]
	return 0;
 8000674:	2300      	movs	r3, #0
}
 8000676:	0018      	movs	r0, r3
 8000678:	46bd      	mov	sp, r7
 800067a:	bd80      	pop	{r7, pc}
 800067c:	08001a70 	.word	0x08001a70

08000680 <uled_off>:

int uled_off(void){
 8000680:	b580      	push	{r7, lr}
 8000682:	af00      	add	r7, sp, #0
	LOG("ULED OFF\r\n");
 8000684:	4b08      	ldr	r3, [pc, #32]	@ (80006a8 <uled_off+0x28>)
 8000686:	0018      	movs	r0, r3
 8000688:	f000 fb1c 	bl	8000cc4 <puts>
	GPIOA->BSRR |= LD2_OFF_MSK;
 800068c:	2390      	movs	r3, #144	@ 0x90
 800068e:	05db      	lsls	r3, r3, #23
 8000690:	699a      	ldr	r2, [r3, #24]
 8000692:	2390      	movs	r3, #144	@ 0x90
 8000694:	05db      	lsls	r3, r3, #23
 8000696:	2180      	movs	r1, #128	@ 0x80
 8000698:	0389      	lsls	r1, r1, #14
 800069a:	430a      	orrs	r2, r1
 800069c:	619a      	str	r2, [r3, #24]
	return 0;
 800069e:	2300      	movs	r3, #0
}
 80006a0:	0018      	movs	r0, r3
 80006a2:	46bd      	mov	sp, r7
 80006a4:	bd80      	pop	{r7, pc}
 80006a6:	46c0      	nop			@ (mov r8, r8)
 80006a8:	08001a7c 	.word	0x08001a7c

080006ac <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006ac:	480e      	ldr	r0, [pc, #56]	@ (80006e8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006ae:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006b0:	f000 f86a 	bl	8000788 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006b4:	480d      	ldr	r0, [pc, #52]	@ (80006ec <LoopForever+0x6>)
  ldr r1, =_edata
 80006b6:	490e      	ldr	r1, [pc, #56]	@ (80006f0 <LoopForever+0xa>)
  ldr r2, =_sidata
 80006b8:	4a0e      	ldr	r2, [pc, #56]	@ (80006f4 <LoopForever+0xe>)
  movs r3, #0
 80006ba:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006bc:	e002      	b.n	80006c4 <LoopCopyDataInit>

080006be <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006be:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006c0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006c2:	3304      	adds	r3, #4

080006c4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006c4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006c6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006c8:	d3f9      	bcc.n	80006be <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006ca:	4a0b      	ldr	r2, [pc, #44]	@ (80006f8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006cc:	4c0b      	ldr	r4, [pc, #44]	@ (80006fc <LoopForever+0x16>)
  movs r3, #0
 80006ce:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006d0:	e001      	b.n	80006d6 <LoopFillZerobss>

080006d2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006d2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80006d4:	3204      	adds	r2, #4

080006d6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80006d6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80006d8:	d3fb      	bcc.n	80006d2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80006da:	f000 fc45 	bl	8000f68 <__libc_init_array>
/* LP - Update system core clocks */
  bl SystemCoreClockUpdate
 80006de:	f000 f89b 	bl	8000818 <SystemCoreClockUpdate>
/* Call the application's entry point.*/
  bl main
 80006e2:	f7ff fe99 	bl	8000418 <main>

080006e6 <LoopForever>:

LoopForever:
  b LoopForever
 80006e6:	e7fe      	b.n	80006e6 <LoopForever>
  ldr   r0, =_estack
 80006e8:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 80006ec:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80006f0:	20000060 	.word	0x20000060
  ldr r2, =_sidata
 80006f4:	08001ad4 	.word	0x08001ad4
  ldr r2, =_sbss
 80006f8:	20000060 	.word	0x20000060
  ldr r4, =_ebss
 80006fc:	200001cc 	.word	0x200001cc

08000700 <ADC_COMP_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000700:	e7fe      	b.n	8000700 <ADC_COMP_IRQHandler>
	...

08000704 <Set_Clocks_To_48MHz>:
 8000704:	b580      	push	{r7, lr}
 8000706:	af00      	add	r7, sp, #0
 8000708:	4b1c      	ldr	r3, [pc, #112]	@ (800077c <Set_Clocks_To_48MHz+0x78>)
 800070a:	681a      	ldr	r2, [r3, #0]
 800070c:	4b1b      	ldr	r3, [pc, #108]	@ (800077c <Set_Clocks_To_48MHz+0x78>)
 800070e:	2101      	movs	r1, #1
 8000710:	430a      	orrs	r2, r1
 8000712:	601a      	str	r2, [r3, #0]
 8000714:	4b1a      	ldr	r3, [pc, #104]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 8000716:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000718:	4b19      	ldr	r3, [pc, #100]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 800071a:	2180      	movs	r1, #128	@ 0x80
 800071c:	0249      	lsls	r1, r1, #9
 800071e:	430a      	orrs	r2, r1
 8000720:	635a      	str	r2, [r3, #52]	@ 0x34
 8000722:	46c0      	nop			@ (mov r8, r8)
 8000724:	4b16      	ldr	r3, [pc, #88]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 8000726:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8000728:	2380      	movs	r3, #128	@ 0x80
 800072a:	029b      	lsls	r3, r3, #10
 800072c:	4013      	ands	r3, r2
 800072e:	d0f9      	beq.n	8000724 <Set_Clocks_To_48MHz+0x20>
 8000730:	4b13      	ldr	r3, [pc, #76]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 8000732:	685b      	ldr	r3, [r3, #4]
 8000734:	22f0      	movs	r2, #240	@ 0xf0
 8000736:	4393      	bics	r3, r2
 8000738:	001a      	movs	r2, r3
 800073a:	4b11      	ldr	r3, [pc, #68]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 800073c:	2110      	movs	r1, #16
 800073e:	430a      	orrs	r2, r1
 8000740:	605a      	str	r2, [r3, #4]
 8000742:	4b0f      	ldr	r3, [pc, #60]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 8000744:	685a      	ldr	r2, [r3, #4]
 8000746:	4b0e      	ldr	r3, [pc, #56]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 8000748:	2103      	movs	r1, #3
 800074a:	430a      	orrs	r2, r1
 800074c:	605a      	str	r2, [r3, #4]
 800074e:	46c0      	nop			@ (mov r8, r8)
 8000750:	4b0b      	ldr	r3, [pc, #44]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 8000752:	685b      	ldr	r3, [r3, #4]
 8000754:	089a      	lsrs	r2, r3, #2
 8000756:	4b0a      	ldr	r3, [pc, #40]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 8000758:	685b      	ldr	r3, [r3, #4]
 800075a:	4053      	eors	r3, r2
 800075c:	2203      	movs	r2, #3
 800075e:	4013      	ands	r3, r2
 8000760:	d1f6      	bne.n	8000750 <Set_Clocks_To_48MHz+0x4c>
 8000762:	4b07      	ldr	r3, [pc, #28]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 8000764:	685b      	ldr	r3, [r3, #4]
 8000766:	4a07      	ldr	r2, [pc, #28]	@ (8000784 <Set_Clocks_To_48MHz+0x80>)
 8000768:	401a      	ands	r2, r3
 800076a:	4b05      	ldr	r3, [pc, #20]	@ (8000780 <Set_Clocks_To_48MHz+0x7c>)
 800076c:	2180      	movs	r1, #128	@ 0x80
 800076e:	00c9      	lsls	r1, r1, #3
 8000770:	430a      	orrs	r2, r1
 8000772:	605a      	str	r2, [r3, #4]
 8000774:	46c0      	nop			@ (mov r8, r8)
 8000776:	46bd      	mov	sp, r7
 8000778:	bd80      	pop	{r7, pc}
 800077a:	46c0      	nop			@ (mov r8, r8)
 800077c:	40022000 	.word	0x40022000
 8000780:	40021000 	.word	0x40021000
 8000784:	fffff8ff 	.word	0xfffff8ff

08000788 <SystemInit>:
 8000788:	b580      	push	{r7, lr}
 800078a:	af00      	add	r7, sp, #0
 800078c:	4b1c      	ldr	r3, [pc, #112]	@ (8000800 <SystemInit+0x78>)
 800078e:	681a      	ldr	r2, [r3, #0]
 8000790:	4b1b      	ldr	r3, [pc, #108]	@ (8000800 <SystemInit+0x78>)
 8000792:	2101      	movs	r1, #1
 8000794:	430a      	orrs	r2, r1
 8000796:	601a      	str	r2, [r3, #0]
 8000798:	4b19      	ldr	r3, [pc, #100]	@ (8000800 <SystemInit+0x78>)
 800079a:	685a      	ldr	r2, [r3, #4]
 800079c:	4b18      	ldr	r3, [pc, #96]	@ (8000800 <SystemInit+0x78>)
 800079e:	4919      	ldr	r1, [pc, #100]	@ (8000804 <SystemInit+0x7c>)
 80007a0:	400a      	ands	r2, r1
 80007a2:	605a      	str	r2, [r3, #4]
 80007a4:	4b16      	ldr	r3, [pc, #88]	@ (8000800 <SystemInit+0x78>)
 80007a6:	681a      	ldr	r2, [r3, #0]
 80007a8:	4b15      	ldr	r3, [pc, #84]	@ (8000800 <SystemInit+0x78>)
 80007aa:	4917      	ldr	r1, [pc, #92]	@ (8000808 <SystemInit+0x80>)
 80007ac:	400a      	ands	r2, r1
 80007ae:	601a      	str	r2, [r3, #0]
 80007b0:	4b13      	ldr	r3, [pc, #76]	@ (8000800 <SystemInit+0x78>)
 80007b2:	681a      	ldr	r2, [r3, #0]
 80007b4:	4b12      	ldr	r3, [pc, #72]	@ (8000800 <SystemInit+0x78>)
 80007b6:	4915      	ldr	r1, [pc, #84]	@ (800080c <SystemInit+0x84>)
 80007b8:	400a      	ands	r2, r1
 80007ba:	601a      	str	r2, [r3, #0]
 80007bc:	4b10      	ldr	r3, [pc, #64]	@ (8000800 <SystemInit+0x78>)
 80007be:	685a      	ldr	r2, [r3, #4]
 80007c0:	4b0f      	ldr	r3, [pc, #60]	@ (8000800 <SystemInit+0x78>)
 80007c2:	4913      	ldr	r1, [pc, #76]	@ (8000810 <SystemInit+0x88>)
 80007c4:	400a      	ands	r2, r1
 80007c6:	605a      	str	r2, [r3, #4]
 80007c8:	4b0d      	ldr	r3, [pc, #52]	@ (8000800 <SystemInit+0x78>)
 80007ca:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80007cc:	4b0c      	ldr	r3, [pc, #48]	@ (8000800 <SystemInit+0x78>)
 80007ce:	210f      	movs	r1, #15
 80007d0:	438a      	bics	r2, r1
 80007d2:	62da      	str	r2, [r3, #44]	@ 0x2c
 80007d4:	4b0a      	ldr	r3, [pc, #40]	@ (8000800 <SystemInit+0x78>)
 80007d6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80007d8:	4b09      	ldr	r3, [pc, #36]	@ (8000800 <SystemInit+0x78>)
 80007da:	490e      	ldr	r1, [pc, #56]	@ (8000814 <SystemInit+0x8c>)
 80007dc:	400a      	ands	r2, r1
 80007de:	631a      	str	r2, [r3, #48]	@ 0x30
 80007e0:	4b07      	ldr	r3, [pc, #28]	@ (8000800 <SystemInit+0x78>)
 80007e2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80007e4:	4b06      	ldr	r3, [pc, #24]	@ (8000800 <SystemInit+0x78>)
 80007e6:	2101      	movs	r1, #1
 80007e8:	438a      	bics	r2, r1
 80007ea:	635a      	str	r2, [r3, #52]	@ 0x34
 80007ec:	4b04      	ldr	r3, [pc, #16]	@ (8000800 <SystemInit+0x78>)
 80007ee:	2200      	movs	r2, #0
 80007f0:	609a      	str	r2, [r3, #8]
 80007f2:	f7ff ff87 	bl	8000704 <Set_Clocks_To_48MHz>
 80007f6:	f000 f89f 	bl	8000938 <Init_USART2>
 80007fa:	46c0      	nop			@ (mov r8, r8)
 80007fc:	46bd      	mov	sp, r7
 80007fe:	bd80      	pop	{r7, pc}
 8000800:	40021000 	.word	0x40021000
 8000804:	08ffb80c 	.word	0x08ffb80c
 8000808:	fef6ffff 	.word	0xfef6ffff
 800080c:	fffbffff 	.word	0xfffbffff
 8000810:	ffc0ffff 	.word	0xffc0ffff
 8000814:	fff0feac 	.word	0xfff0feac

08000818 <SystemCoreClockUpdate>:
 8000818:	b580      	push	{r7, lr}
 800081a:	b084      	sub	sp, #16
 800081c:	af00      	add	r7, sp, #0
 800081e:	2300      	movs	r3, #0
 8000820:	60fb      	str	r3, [r7, #12]
 8000822:	2300      	movs	r3, #0
 8000824:	60bb      	str	r3, [r7, #8]
 8000826:	2300      	movs	r3, #0
 8000828:	607b      	str	r3, [r7, #4]
 800082a:	2300      	movs	r3, #0
 800082c:	603b      	str	r3, [r7, #0]
 800082e:	4b3d      	ldr	r3, [pc, #244]	@ (8000924 <SystemCoreClockUpdate+0x10c>)
 8000830:	685b      	ldr	r3, [r3, #4]
 8000832:	220c      	movs	r2, #12
 8000834:	4013      	ands	r3, r2
 8000836:	60fb      	str	r3, [r7, #12]
 8000838:	68fb      	ldr	r3, [r7, #12]
 800083a:	2b0c      	cmp	r3, #12
 800083c:	d00f      	beq.n	800085e <SystemCoreClockUpdate+0x46>
 800083e:	68fb      	ldr	r3, [r7, #12]
 8000840:	2b0c      	cmp	r3, #12
 8000842:	d859      	bhi.n	80008f8 <SystemCoreClockUpdate+0xe0>
 8000844:	68fb      	ldr	r3, [r7, #12]
 8000846:	2b08      	cmp	r3, #8
 8000848:	d015      	beq.n	8000876 <SystemCoreClockUpdate+0x5e>
 800084a:	68fb      	ldr	r3, [r7, #12]
 800084c:	2b08      	cmp	r3, #8
 800084e:	d853      	bhi.n	80008f8 <SystemCoreClockUpdate+0xe0>
 8000850:	68fb      	ldr	r3, [r7, #12]
 8000852:	2b00      	cmp	r3, #0
 8000854:	d007      	beq.n	8000866 <SystemCoreClockUpdate+0x4e>
 8000856:	68fb      	ldr	r3, [r7, #12]
 8000858:	2b04      	cmp	r3, #4
 800085a:	d008      	beq.n	800086e <SystemCoreClockUpdate+0x56>
 800085c:	e04c      	b.n	80008f8 <SystemCoreClockUpdate+0xe0>
 800085e:	4b32      	ldr	r3, [pc, #200]	@ (8000928 <SystemCoreClockUpdate+0x110>)
 8000860:	4a32      	ldr	r2, [pc, #200]	@ (800092c <SystemCoreClockUpdate+0x114>)
 8000862:	601a      	str	r2, [r3, #0]
 8000864:	e04c      	b.n	8000900 <SystemCoreClockUpdate+0xe8>
 8000866:	4b30      	ldr	r3, [pc, #192]	@ (8000928 <SystemCoreClockUpdate+0x110>)
 8000868:	4a31      	ldr	r2, [pc, #196]	@ (8000930 <SystemCoreClockUpdate+0x118>)
 800086a:	601a      	str	r2, [r3, #0]
 800086c:	e048      	b.n	8000900 <SystemCoreClockUpdate+0xe8>
 800086e:	4b2e      	ldr	r3, [pc, #184]	@ (8000928 <SystemCoreClockUpdate+0x110>)
 8000870:	4a2f      	ldr	r2, [pc, #188]	@ (8000930 <SystemCoreClockUpdate+0x118>)
 8000872:	601a      	str	r2, [r3, #0]
 8000874:	e044      	b.n	8000900 <SystemCoreClockUpdate+0xe8>
 8000876:	4b2b      	ldr	r3, [pc, #172]	@ (8000924 <SystemCoreClockUpdate+0x10c>)
 8000878:	685a      	ldr	r2, [r3, #4]
 800087a:	23f0      	movs	r3, #240	@ 0xf0
 800087c:	039b      	lsls	r3, r3, #14
 800087e:	4013      	ands	r3, r2
 8000880:	60bb      	str	r3, [r7, #8]
 8000882:	4b28      	ldr	r3, [pc, #160]	@ (8000924 <SystemCoreClockUpdate+0x10c>)
 8000884:	685a      	ldr	r2, [r3, #4]
 8000886:	23c0      	movs	r3, #192	@ 0xc0
 8000888:	025b      	lsls	r3, r3, #9
 800088a:	4013      	ands	r3, r2
 800088c:	607b      	str	r3, [r7, #4]
 800088e:	68bb      	ldr	r3, [r7, #8]
 8000890:	0c9b      	lsrs	r3, r3, #18
 8000892:	3302      	adds	r3, #2
 8000894:	60bb      	str	r3, [r7, #8]
 8000896:	4b23      	ldr	r3, [pc, #140]	@ (8000924 <SystemCoreClockUpdate+0x10c>)
 8000898:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800089a:	220f      	movs	r2, #15
 800089c:	4013      	ands	r3, r2
 800089e:	3301      	adds	r3, #1
 80008a0:	603b      	str	r3, [r7, #0]
 80008a2:	687a      	ldr	r2, [r7, #4]
 80008a4:	2380      	movs	r3, #128	@ 0x80
 80008a6:	025b      	lsls	r3, r3, #9
 80008a8:	429a      	cmp	r2, r3
 80008aa:	d10a      	bne.n	80008c2 <SystemCoreClockUpdate+0xaa>
 80008ac:	6839      	ldr	r1, [r7, #0]
 80008ae:	4820      	ldr	r0, [pc, #128]	@ (8000930 <SystemCoreClockUpdate+0x118>)
 80008b0:	f7ff fc34 	bl	800011c <__udivsi3>
 80008b4:	0003      	movs	r3, r0
 80008b6:	001a      	movs	r2, r3
 80008b8:	68bb      	ldr	r3, [r7, #8]
 80008ba:	435a      	muls	r2, r3
 80008bc:	4b1a      	ldr	r3, [pc, #104]	@ (8000928 <SystemCoreClockUpdate+0x110>)
 80008be:	601a      	str	r2, [r3, #0]
 80008c0:	e01e      	b.n	8000900 <SystemCoreClockUpdate+0xe8>
 80008c2:	687a      	ldr	r2, [r7, #4]
 80008c4:	23c0      	movs	r3, #192	@ 0xc0
 80008c6:	025b      	lsls	r3, r3, #9
 80008c8:	429a      	cmp	r2, r3
 80008ca:	d10a      	bne.n	80008e2 <SystemCoreClockUpdate+0xca>
 80008cc:	6839      	ldr	r1, [r7, #0]
 80008ce:	4817      	ldr	r0, [pc, #92]	@ (800092c <SystemCoreClockUpdate+0x114>)
 80008d0:	f7ff fc24 	bl	800011c <__udivsi3>
 80008d4:	0003      	movs	r3, r0
 80008d6:	001a      	movs	r2, r3
 80008d8:	68bb      	ldr	r3, [r7, #8]
 80008da:	435a      	muls	r2, r3
 80008dc:	4b12      	ldr	r3, [pc, #72]	@ (8000928 <SystemCoreClockUpdate+0x110>)
 80008de:	601a      	str	r2, [r3, #0]
 80008e0:	e00e      	b.n	8000900 <SystemCoreClockUpdate+0xe8>
 80008e2:	6839      	ldr	r1, [r7, #0]
 80008e4:	4812      	ldr	r0, [pc, #72]	@ (8000930 <SystemCoreClockUpdate+0x118>)
 80008e6:	f7ff fc19 	bl	800011c <__udivsi3>
 80008ea:	0003      	movs	r3, r0
 80008ec:	001a      	movs	r2, r3
 80008ee:	68bb      	ldr	r3, [r7, #8]
 80008f0:	435a      	muls	r2, r3
 80008f2:	4b0d      	ldr	r3, [pc, #52]	@ (8000928 <SystemCoreClockUpdate+0x110>)
 80008f4:	601a      	str	r2, [r3, #0]
 80008f6:	e003      	b.n	8000900 <SystemCoreClockUpdate+0xe8>
 80008f8:	4b0b      	ldr	r3, [pc, #44]	@ (8000928 <SystemCoreClockUpdate+0x110>)
 80008fa:	4a0d      	ldr	r2, [pc, #52]	@ (8000930 <SystemCoreClockUpdate+0x118>)
 80008fc:	601a      	str	r2, [r3, #0]
 80008fe:	46c0      	nop			@ (mov r8, r8)
 8000900:	4b08      	ldr	r3, [pc, #32]	@ (8000924 <SystemCoreClockUpdate+0x10c>)
 8000902:	685b      	ldr	r3, [r3, #4]
 8000904:	091b      	lsrs	r3, r3, #4
 8000906:	220f      	movs	r2, #15
 8000908:	4013      	ands	r3, r2
 800090a:	4a0a      	ldr	r2, [pc, #40]	@ (8000934 <SystemCoreClockUpdate+0x11c>)
 800090c:	5cd3      	ldrb	r3, [r2, r3]
 800090e:	60fb      	str	r3, [r7, #12]
 8000910:	4b05      	ldr	r3, [pc, #20]	@ (8000928 <SystemCoreClockUpdate+0x110>)
 8000912:	681a      	ldr	r2, [r3, #0]
 8000914:	68fb      	ldr	r3, [r7, #12]
 8000916:	40da      	lsrs	r2, r3
 8000918:	4b03      	ldr	r3, [pc, #12]	@ (8000928 <SystemCoreClockUpdate+0x110>)
 800091a:	601a      	str	r2, [r3, #0]
 800091c:	46c0      	nop			@ (mov r8, r8)
 800091e:	46bd      	mov	sp, r7
 8000920:	b004      	add	sp, #16
 8000922:	bd80      	pop	{r7, pc}
 8000924:	40021000 	.word	0x40021000
 8000928:	20000000 	.word	0x20000000
 800092c:	02dc6c00 	.word	0x02dc6c00
 8000930:	007a1200 	.word	0x007a1200
 8000934:	08001a88 	.word	0x08001a88

08000938 <Init_USART2>:
 8000938:	b580      	push	{r7, lr}
 800093a:	af00      	add	r7, sp, #0
 800093c:	4b31      	ldr	r3, [pc, #196]	@ (8000a04 <Init_USART2+0xcc>)
 800093e:	69da      	ldr	r2, [r3, #28]
 8000940:	4b30      	ldr	r3, [pc, #192]	@ (8000a04 <Init_USART2+0xcc>)
 8000942:	2180      	movs	r1, #128	@ 0x80
 8000944:	0289      	lsls	r1, r1, #10
 8000946:	430a      	orrs	r2, r1
 8000948:	61da      	str	r2, [r3, #28]
 800094a:	4b2e      	ldr	r3, [pc, #184]	@ (8000a04 <Init_USART2+0xcc>)
 800094c:	695a      	ldr	r2, [r3, #20]
 800094e:	4b2d      	ldr	r3, [pc, #180]	@ (8000a04 <Init_USART2+0xcc>)
 8000950:	2180      	movs	r1, #128	@ 0x80
 8000952:	0289      	lsls	r1, r1, #10
 8000954:	430a      	orrs	r2, r1
 8000956:	615a      	str	r2, [r3, #20]
 8000958:	2390      	movs	r3, #144	@ 0x90
 800095a:	05db      	lsls	r3, r3, #23
 800095c:	681b      	ldr	r3, [r3, #0]
 800095e:	2230      	movs	r2, #48	@ 0x30
 8000960:	4393      	bics	r3, r2
 8000962:	001a      	movs	r2, r3
 8000964:	2390      	movs	r3, #144	@ 0x90
 8000966:	05db      	lsls	r3, r3, #23
 8000968:	2120      	movs	r1, #32
 800096a:	430a      	orrs	r2, r1
 800096c:	601a      	str	r2, [r3, #0]
 800096e:	2390      	movs	r3, #144	@ 0x90
 8000970:	05db      	lsls	r3, r3, #23
 8000972:	681b      	ldr	r3, [r3, #0]
 8000974:	22c0      	movs	r2, #192	@ 0xc0
 8000976:	4393      	bics	r3, r2
 8000978:	001a      	movs	r2, r3
 800097a:	2390      	movs	r3, #144	@ 0x90
 800097c:	05db      	lsls	r3, r3, #23
 800097e:	2180      	movs	r1, #128	@ 0x80
 8000980:	430a      	orrs	r2, r1
 8000982:	601a      	str	r2, [r3, #0]
 8000984:	2390      	movs	r3, #144	@ 0x90
 8000986:	05db      	lsls	r3, r3, #23
 8000988:	6a1b      	ldr	r3, [r3, #32]
 800098a:	4a1f      	ldr	r2, [pc, #124]	@ (8000a08 <Init_USART2+0xd0>)
 800098c:	401a      	ands	r2, r3
 800098e:	2390      	movs	r3, #144	@ 0x90
 8000990:	05db      	lsls	r3, r3, #23
 8000992:	2180      	movs	r1, #128	@ 0x80
 8000994:	0049      	lsls	r1, r1, #1
 8000996:	430a      	orrs	r2, r1
 8000998:	621a      	str	r2, [r3, #32]
 800099a:	2390      	movs	r3, #144	@ 0x90
 800099c:	05db      	lsls	r3, r3, #23
 800099e:	6a1b      	ldr	r3, [r3, #32]
 80009a0:	4a1a      	ldr	r2, [pc, #104]	@ (8000a0c <Init_USART2+0xd4>)
 80009a2:	401a      	ands	r2, r3
 80009a4:	2390      	movs	r3, #144	@ 0x90
 80009a6:	05db      	lsls	r3, r3, #23
 80009a8:	2180      	movs	r1, #128	@ 0x80
 80009aa:	0149      	lsls	r1, r1, #5
 80009ac:	430a      	orrs	r2, r1
 80009ae:	621a      	str	r2, [r3, #32]
 80009b0:	4b17      	ldr	r3, [pc, #92]	@ (8000a10 <Init_USART2+0xd8>)
 80009b2:	4a18      	ldr	r2, [pc, #96]	@ (8000a14 <Init_USART2+0xdc>)
 80009b4:	60da      	str	r2, [r3, #12]
 80009b6:	4b16      	ldr	r3, [pc, #88]	@ (8000a10 <Init_USART2+0xd8>)
 80009b8:	681a      	ldr	r2, [r3, #0]
 80009ba:	4b15      	ldr	r3, [pc, #84]	@ (8000a10 <Init_USART2+0xd8>)
 80009bc:	4916      	ldr	r1, [pc, #88]	@ (8000a18 <Init_USART2+0xe0>)
 80009be:	400a      	ands	r2, r1
 80009c0:	601a      	str	r2, [r3, #0]
 80009c2:	4b13      	ldr	r3, [pc, #76]	@ (8000a10 <Init_USART2+0xd8>)
 80009c4:	681a      	ldr	r2, [r3, #0]
 80009c6:	4b12      	ldr	r3, [pc, #72]	@ (8000a10 <Init_USART2+0xd8>)
 80009c8:	4914      	ldr	r1, [pc, #80]	@ (8000a1c <Init_USART2+0xe4>)
 80009ca:	400a      	ands	r2, r1
 80009cc:	601a      	str	r2, [r3, #0]
 80009ce:	4b10      	ldr	r3, [pc, #64]	@ (8000a10 <Init_USART2+0xd8>)
 80009d0:	685a      	ldr	r2, [r3, #4]
 80009d2:	4b0f      	ldr	r3, [pc, #60]	@ (8000a10 <Init_USART2+0xd8>)
 80009d4:	4912      	ldr	r1, [pc, #72]	@ (8000a20 <Init_USART2+0xe8>)
 80009d6:	400a      	ands	r2, r1
 80009d8:	605a      	str	r2, [r3, #4]
 80009da:	4b0d      	ldr	r3, [pc, #52]	@ (8000a10 <Init_USART2+0xd8>)
 80009dc:	681a      	ldr	r2, [r3, #0]
 80009de:	4b0c      	ldr	r3, [pc, #48]	@ (8000a10 <Init_USART2+0xd8>)
 80009e0:	2108      	movs	r1, #8
 80009e2:	430a      	orrs	r2, r1
 80009e4:	601a      	str	r2, [r3, #0]
 80009e6:	4b0a      	ldr	r3, [pc, #40]	@ (8000a10 <Init_USART2+0xd8>)
 80009e8:	681a      	ldr	r2, [r3, #0]
 80009ea:	4b09      	ldr	r3, [pc, #36]	@ (8000a10 <Init_USART2+0xd8>)
 80009ec:	2104      	movs	r1, #4
 80009ee:	430a      	orrs	r2, r1
 80009f0:	601a      	str	r2, [r3, #0]
 80009f2:	4b07      	ldr	r3, [pc, #28]	@ (8000a10 <Init_USART2+0xd8>)
 80009f4:	681a      	ldr	r2, [r3, #0]
 80009f6:	4b06      	ldr	r3, [pc, #24]	@ (8000a10 <Init_USART2+0xd8>)
 80009f8:	2101      	movs	r1, #1
 80009fa:	430a      	orrs	r2, r1
 80009fc:	601a      	str	r2, [r3, #0]
 80009fe:	46c0      	nop			@ (mov r8, r8)
 8000a00:	46bd      	mov	sp, r7
 8000a02:	bd80      	pop	{r7, pc}
 8000a04:	40021000 	.word	0x40021000
 8000a08:	fffff0ff 	.word	0xfffff0ff
 8000a0c:	ffff0fff 	.word	0xffff0fff
 8000a10:	40004400 	.word	0x40004400
 8000a14:	000009c4 	.word	0x000009c4
 8000a18:	fffffbff 	.word	0xfffffbff
 8000a1c:	efffefff 	.word	0xefffefff
 8000a20:	ffffcfff 	.word	0xffffcfff

08000a24 <UART_Transmit>:
 8000a24:	b580      	push	{r7, lr}
 8000a26:	b082      	sub	sp, #8
 8000a28:	af00      	add	r7, sp, #0
 8000a2a:	0002      	movs	r2, r0
 8000a2c:	1dfb      	adds	r3, r7, #7
 8000a2e:	701a      	strb	r2, [r3, #0]
 8000a30:	46c0      	nop			@ (mov r8, r8)
 8000a32:	4b07      	ldr	r3, [pc, #28]	@ (8000a50 <UART_Transmit+0x2c>)
 8000a34:	69db      	ldr	r3, [r3, #28]
 8000a36:	2280      	movs	r2, #128	@ 0x80
 8000a38:	4013      	ands	r3, r2
 8000a3a:	d0fa      	beq.n	8000a32 <UART_Transmit+0xe>
 8000a3c:	4a04      	ldr	r2, [pc, #16]	@ (8000a50 <UART_Transmit+0x2c>)
 8000a3e:	1dfb      	adds	r3, r7, #7
 8000a40:	781b      	ldrb	r3, [r3, #0]
 8000a42:	b29b      	uxth	r3, r3
 8000a44:	8513      	strh	r3, [r2, #40]	@ 0x28
 8000a46:	46c0      	nop			@ (mov r8, r8)
 8000a48:	46bd      	mov	sp, r7
 8000a4a:	b002      	add	sp, #8
 8000a4c:	bd80      	pop	{r7, pc}
 8000a4e:	46c0      	nop			@ (mov r8, r8)
 8000a50:	40004400 	.word	0x40004400

08000a54 <__io_putchar>:
 8000a54:	b580      	push	{r7, lr}
 8000a56:	b082      	sub	sp, #8
 8000a58:	af00      	add	r7, sp, #0
 8000a5a:	6078      	str	r0, [r7, #4]
 8000a5c:	687b      	ldr	r3, [r7, #4]
 8000a5e:	b2db      	uxtb	r3, r3
 8000a60:	0018      	movs	r0, r3
 8000a62:	f7ff ffdf 	bl	8000a24 <UART_Transmit>
 8000a66:	687b      	ldr	r3, [r7, #4]
 8000a68:	0018      	movs	r0, r3
 8000a6a:	46bd      	mov	sp, r7
 8000a6c:	b002      	add	sp, #8
 8000a6e:	bd80      	pop	{r7, pc}

08000a70 <std>:
 8000a70:	2300      	movs	r3, #0
 8000a72:	b510      	push	{r4, lr}
 8000a74:	0004      	movs	r4, r0
 8000a76:	6003      	str	r3, [r0, #0]
 8000a78:	6043      	str	r3, [r0, #4]
 8000a7a:	6083      	str	r3, [r0, #8]
 8000a7c:	8181      	strh	r1, [r0, #12]
 8000a7e:	6643      	str	r3, [r0, #100]	@ 0x64
 8000a80:	81c2      	strh	r2, [r0, #14]
 8000a82:	6103      	str	r3, [r0, #16]
 8000a84:	6143      	str	r3, [r0, #20]
 8000a86:	6183      	str	r3, [r0, #24]
 8000a88:	0019      	movs	r1, r3
 8000a8a:	2208      	movs	r2, #8
 8000a8c:	305c      	adds	r0, #92	@ 0x5c
 8000a8e:	f000 fa0f 	bl	8000eb0 <memset>
 8000a92:	4b0b      	ldr	r3, [pc, #44]	@ (8000ac0 <std+0x50>)
 8000a94:	6224      	str	r4, [r4, #32]
 8000a96:	6263      	str	r3, [r4, #36]	@ 0x24
 8000a98:	4b0a      	ldr	r3, [pc, #40]	@ (8000ac4 <std+0x54>)
 8000a9a:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000a9c:	4b0a      	ldr	r3, [pc, #40]	@ (8000ac8 <std+0x58>)
 8000a9e:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000aa0:	4b0a      	ldr	r3, [pc, #40]	@ (8000acc <std+0x5c>)
 8000aa2:	6323      	str	r3, [r4, #48]	@ 0x30
 8000aa4:	4b0a      	ldr	r3, [pc, #40]	@ (8000ad0 <std+0x60>)
 8000aa6:	429c      	cmp	r4, r3
 8000aa8:	d005      	beq.n	8000ab6 <std+0x46>
 8000aaa:	4b0a      	ldr	r3, [pc, #40]	@ (8000ad4 <std+0x64>)
 8000aac:	429c      	cmp	r4, r3
 8000aae:	d002      	beq.n	8000ab6 <std+0x46>
 8000ab0:	4b09      	ldr	r3, [pc, #36]	@ (8000ad8 <std+0x68>)
 8000ab2:	429c      	cmp	r4, r3
 8000ab4:	d103      	bne.n	8000abe <std+0x4e>
 8000ab6:	0020      	movs	r0, r4
 8000ab8:	3058      	adds	r0, #88	@ 0x58
 8000aba:	f000 fa79 	bl	8000fb0 <__retarget_lock_init_recursive>
 8000abe:	bd10      	pop	{r4, pc}
 8000ac0:	08000cd9 	.word	0x08000cd9
 8000ac4:	08000d01 	.word	0x08000d01
 8000ac8:	08000d39 	.word	0x08000d39
 8000acc:	08000d65 	.word	0x08000d65
 8000ad0:	20000080 	.word	0x20000080
 8000ad4:	200000e8 	.word	0x200000e8
 8000ad8:	20000150 	.word	0x20000150

08000adc <stdio_exit_handler>:
 8000adc:	b510      	push	{r4, lr}
 8000ade:	4a03      	ldr	r2, [pc, #12]	@ (8000aec <stdio_exit_handler+0x10>)
 8000ae0:	4903      	ldr	r1, [pc, #12]	@ (8000af0 <stdio_exit_handler+0x14>)
 8000ae2:	4804      	ldr	r0, [pc, #16]	@ (8000af4 <stdio_exit_handler+0x18>)
 8000ae4:	f000 f86c 	bl	8000bc0 <_fwalk_sglue>
 8000ae8:	bd10      	pop	{r4, pc}
 8000aea:	46c0      	nop			@ (mov r8, r8)
 8000aec:	20000004 	.word	0x20000004
 8000af0:	08001841 	.word	0x08001841
 8000af4:	20000014 	.word	0x20000014

08000af8 <cleanup_stdio>:
 8000af8:	6841      	ldr	r1, [r0, #4]
 8000afa:	4b0b      	ldr	r3, [pc, #44]	@ (8000b28 <cleanup_stdio+0x30>)
 8000afc:	b510      	push	{r4, lr}
 8000afe:	0004      	movs	r4, r0
 8000b00:	4299      	cmp	r1, r3
 8000b02:	d001      	beq.n	8000b08 <cleanup_stdio+0x10>
 8000b04:	f000 fe9c 	bl	8001840 <_fflush_r>
 8000b08:	68a1      	ldr	r1, [r4, #8]
 8000b0a:	4b08      	ldr	r3, [pc, #32]	@ (8000b2c <cleanup_stdio+0x34>)
 8000b0c:	4299      	cmp	r1, r3
 8000b0e:	d002      	beq.n	8000b16 <cleanup_stdio+0x1e>
 8000b10:	0020      	movs	r0, r4
 8000b12:	f000 fe95 	bl	8001840 <_fflush_r>
 8000b16:	68e1      	ldr	r1, [r4, #12]
 8000b18:	4b05      	ldr	r3, [pc, #20]	@ (8000b30 <cleanup_stdio+0x38>)
 8000b1a:	4299      	cmp	r1, r3
 8000b1c:	d002      	beq.n	8000b24 <cleanup_stdio+0x2c>
 8000b1e:	0020      	movs	r0, r4
 8000b20:	f000 fe8e 	bl	8001840 <_fflush_r>
 8000b24:	bd10      	pop	{r4, pc}
 8000b26:	46c0      	nop			@ (mov r8, r8)
 8000b28:	20000080 	.word	0x20000080
 8000b2c:	200000e8 	.word	0x200000e8
 8000b30:	20000150 	.word	0x20000150

08000b34 <global_stdio_init.part.0>:
 8000b34:	b510      	push	{r4, lr}
 8000b36:	4b09      	ldr	r3, [pc, #36]	@ (8000b5c <global_stdio_init.part.0+0x28>)
 8000b38:	4a09      	ldr	r2, [pc, #36]	@ (8000b60 <global_stdio_init.part.0+0x2c>)
 8000b3a:	2104      	movs	r1, #4
 8000b3c:	601a      	str	r2, [r3, #0]
 8000b3e:	4809      	ldr	r0, [pc, #36]	@ (8000b64 <global_stdio_init.part.0+0x30>)
 8000b40:	2200      	movs	r2, #0
 8000b42:	f7ff ff95 	bl	8000a70 <std>
 8000b46:	2201      	movs	r2, #1
 8000b48:	2109      	movs	r1, #9
 8000b4a:	4807      	ldr	r0, [pc, #28]	@ (8000b68 <global_stdio_init.part.0+0x34>)
 8000b4c:	f7ff ff90 	bl	8000a70 <std>
 8000b50:	2202      	movs	r2, #2
 8000b52:	2112      	movs	r1, #18
 8000b54:	4805      	ldr	r0, [pc, #20]	@ (8000b6c <global_stdio_init.part.0+0x38>)
 8000b56:	f7ff ff8b 	bl	8000a70 <std>
 8000b5a:	bd10      	pop	{r4, pc}
 8000b5c:	200001b8 	.word	0x200001b8
 8000b60:	08000add 	.word	0x08000add
 8000b64:	20000080 	.word	0x20000080
 8000b68:	200000e8 	.word	0x200000e8
 8000b6c:	20000150 	.word	0x20000150

08000b70 <__sfp_lock_acquire>:
 8000b70:	b510      	push	{r4, lr}
 8000b72:	4802      	ldr	r0, [pc, #8]	@ (8000b7c <__sfp_lock_acquire+0xc>)
 8000b74:	f000 fa1d 	bl	8000fb2 <__retarget_lock_acquire_recursive>
 8000b78:	bd10      	pop	{r4, pc}
 8000b7a:	46c0      	nop			@ (mov r8, r8)
 8000b7c:	200001c1 	.word	0x200001c1

08000b80 <__sfp_lock_release>:
 8000b80:	b510      	push	{r4, lr}
 8000b82:	4802      	ldr	r0, [pc, #8]	@ (8000b8c <__sfp_lock_release+0xc>)
 8000b84:	f000 fa16 	bl	8000fb4 <__retarget_lock_release_recursive>
 8000b88:	bd10      	pop	{r4, pc}
 8000b8a:	46c0      	nop			@ (mov r8, r8)
 8000b8c:	200001c1 	.word	0x200001c1

08000b90 <__sinit>:
 8000b90:	b510      	push	{r4, lr}
 8000b92:	0004      	movs	r4, r0
 8000b94:	f7ff ffec 	bl	8000b70 <__sfp_lock_acquire>
 8000b98:	6a23      	ldr	r3, [r4, #32]
 8000b9a:	2b00      	cmp	r3, #0
 8000b9c:	d002      	beq.n	8000ba4 <__sinit+0x14>
 8000b9e:	f7ff ffef 	bl	8000b80 <__sfp_lock_release>
 8000ba2:	bd10      	pop	{r4, pc}
 8000ba4:	4b04      	ldr	r3, [pc, #16]	@ (8000bb8 <__sinit+0x28>)
 8000ba6:	6223      	str	r3, [r4, #32]
 8000ba8:	4b04      	ldr	r3, [pc, #16]	@ (8000bbc <__sinit+0x2c>)
 8000baa:	681b      	ldr	r3, [r3, #0]
 8000bac:	2b00      	cmp	r3, #0
 8000bae:	d1f6      	bne.n	8000b9e <__sinit+0xe>
 8000bb0:	f7ff ffc0 	bl	8000b34 <global_stdio_init.part.0>
 8000bb4:	e7f3      	b.n	8000b9e <__sinit+0xe>
 8000bb6:	46c0      	nop			@ (mov r8, r8)
 8000bb8:	08000af9 	.word	0x08000af9
 8000bbc:	200001b8 	.word	0x200001b8

08000bc0 <_fwalk_sglue>:
 8000bc0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000bc2:	0014      	movs	r4, r2
 8000bc4:	2600      	movs	r6, #0
 8000bc6:	9000      	str	r0, [sp, #0]
 8000bc8:	9101      	str	r1, [sp, #4]
 8000bca:	68a5      	ldr	r5, [r4, #8]
 8000bcc:	6867      	ldr	r7, [r4, #4]
 8000bce:	3f01      	subs	r7, #1
 8000bd0:	d504      	bpl.n	8000bdc <_fwalk_sglue+0x1c>
 8000bd2:	6824      	ldr	r4, [r4, #0]
 8000bd4:	2c00      	cmp	r4, #0
 8000bd6:	d1f8      	bne.n	8000bca <_fwalk_sglue+0xa>
 8000bd8:	0030      	movs	r0, r6
 8000bda:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000bdc:	89ab      	ldrh	r3, [r5, #12]
 8000bde:	2b01      	cmp	r3, #1
 8000be0:	d908      	bls.n	8000bf4 <_fwalk_sglue+0x34>
 8000be2:	220e      	movs	r2, #14
 8000be4:	5eab      	ldrsh	r3, [r5, r2]
 8000be6:	3301      	adds	r3, #1
 8000be8:	d004      	beq.n	8000bf4 <_fwalk_sglue+0x34>
 8000bea:	0029      	movs	r1, r5
 8000bec:	9800      	ldr	r0, [sp, #0]
 8000bee:	9b01      	ldr	r3, [sp, #4]
 8000bf0:	4798      	blx	r3
 8000bf2:	4306      	orrs	r6, r0
 8000bf4:	3568      	adds	r5, #104	@ 0x68
 8000bf6:	e7ea      	b.n	8000bce <_fwalk_sglue+0xe>

08000bf8 <iprintf>:
 8000bf8:	b40f      	push	{r0, r1, r2, r3}
 8000bfa:	b507      	push	{r0, r1, r2, lr}
 8000bfc:	4905      	ldr	r1, [pc, #20]	@ (8000c14 <iprintf+0x1c>)
 8000bfe:	ab04      	add	r3, sp, #16
 8000c00:	6808      	ldr	r0, [r1, #0]
 8000c02:	cb04      	ldmia	r3!, {r2}
 8000c04:	6881      	ldr	r1, [r0, #8]
 8000c06:	9301      	str	r3, [sp, #4]
 8000c08:	f000 fafa 	bl	8001200 <_vfiprintf_r>
 8000c0c:	b003      	add	sp, #12
 8000c0e:	bc08      	pop	{r3}
 8000c10:	b004      	add	sp, #16
 8000c12:	4718      	bx	r3
 8000c14:	20000010 	.word	0x20000010

08000c18 <_puts_r>:
 8000c18:	6a03      	ldr	r3, [r0, #32]
 8000c1a:	b570      	push	{r4, r5, r6, lr}
 8000c1c:	0005      	movs	r5, r0
 8000c1e:	000e      	movs	r6, r1
 8000c20:	6884      	ldr	r4, [r0, #8]
 8000c22:	2b00      	cmp	r3, #0
 8000c24:	d101      	bne.n	8000c2a <_puts_r+0x12>
 8000c26:	f7ff ffb3 	bl	8000b90 <__sinit>
 8000c2a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000c2c:	07db      	lsls	r3, r3, #31
 8000c2e:	d405      	bmi.n	8000c3c <_puts_r+0x24>
 8000c30:	89a3      	ldrh	r3, [r4, #12]
 8000c32:	059b      	lsls	r3, r3, #22
 8000c34:	d402      	bmi.n	8000c3c <_puts_r+0x24>
 8000c36:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c38:	f000 f9bb 	bl	8000fb2 <__retarget_lock_acquire_recursive>
 8000c3c:	89a3      	ldrh	r3, [r4, #12]
 8000c3e:	071b      	lsls	r3, r3, #28
 8000c40:	d502      	bpl.n	8000c48 <_puts_r+0x30>
 8000c42:	6923      	ldr	r3, [r4, #16]
 8000c44:	2b00      	cmp	r3, #0
 8000c46:	d11f      	bne.n	8000c88 <_puts_r+0x70>
 8000c48:	0021      	movs	r1, r4
 8000c4a:	0028      	movs	r0, r5
 8000c4c:	f000 f8d2 	bl	8000df4 <__swsetup_r>
 8000c50:	2800      	cmp	r0, #0
 8000c52:	d019      	beq.n	8000c88 <_puts_r+0x70>
 8000c54:	2501      	movs	r5, #1
 8000c56:	426d      	negs	r5, r5
 8000c58:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000c5a:	07db      	lsls	r3, r3, #31
 8000c5c:	d405      	bmi.n	8000c6a <_puts_r+0x52>
 8000c5e:	89a3      	ldrh	r3, [r4, #12]
 8000c60:	059b      	lsls	r3, r3, #22
 8000c62:	d402      	bmi.n	8000c6a <_puts_r+0x52>
 8000c64:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000c66:	f000 f9a5 	bl	8000fb4 <__retarget_lock_release_recursive>
 8000c6a:	0028      	movs	r0, r5
 8000c6c:	bd70      	pop	{r4, r5, r6, pc}
 8000c6e:	3601      	adds	r6, #1
 8000c70:	60a3      	str	r3, [r4, #8]
 8000c72:	2b00      	cmp	r3, #0
 8000c74:	da04      	bge.n	8000c80 <_puts_r+0x68>
 8000c76:	69a2      	ldr	r2, [r4, #24]
 8000c78:	429a      	cmp	r2, r3
 8000c7a:	dc16      	bgt.n	8000caa <_puts_r+0x92>
 8000c7c:	290a      	cmp	r1, #10
 8000c7e:	d014      	beq.n	8000caa <_puts_r+0x92>
 8000c80:	6823      	ldr	r3, [r4, #0]
 8000c82:	1c5a      	adds	r2, r3, #1
 8000c84:	6022      	str	r2, [r4, #0]
 8000c86:	7019      	strb	r1, [r3, #0]
 8000c88:	68a3      	ldr	r3, [r4, #8]
 8000c8a:	7831      	ldrb	r1, [r6, #0]
 8000c8c:	3b01      	subs	r3, #1
 8000c8e:	2900      	cmp	r1, #0
 8000c90:	d1ed      	bne.n	8000c6e <_puts_r+0x56>
 8000c92:	60a3      	str	r3, [r4, #8]
 8000c94:	2b00      	cmp	r3, #0
 8000c96:	da0f      	bge.n	8000cb8 <_puts_r+0xa0>
 8000c98:	0022      	movs	r2, r4
 8000c9a:	0028      	movs	r0, r5
 8000c9c:	310a      	adds	r1, #10
 8000c9e:	f000 f867 	bl	8000d70 <__swbuf_r>
 8000ca2:	3001      	adds	r0, #1
 8000ca4:	d0d6      	beq.n	8000c54 <_puts_r+0x3c>
 8000ca6:	250a      	movs	r5, #10
 8000ca8:	e7d6      	b.n	8000c58 <_puts_r+0x40>
 8000caa:	0022      	movs	r2, r4
 8000cac:	0028      	movs	r0, r5
 8000cae:	f000 f85f 	bl	8000d70 <__swbuf_r>
 8000cb2:	3001      	adds	r0, #1
 8000cb4:	d1e8      	bne.n	8000c88 <_puts_r+0x70>
 8000cb6:	e7cd      	b.n	8000c54 <_puts_r+0x3c>
 8000cb8:	6823      	ldr	r3, [r4, #0]
 8000cba:	1c5a      	adds	r2, r3, #1
 8000cbc:	6022      	str	r2, [r4, #0]
 8000cbe:	220a      	movs	r2, #10
 8000cc0:	701a      	strb	r2, [r3, #0]
 8000cc2:	e7f0      	b.n	8000ca6 <_puts_r+0x8e>

08000cc4 <puts>:
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4b03      	ldr	r3, [pc, #12]	@ (8000cd4 <puts+0x10>)
 8000cc8:	0001      	movs	r1, r0
 8000cca:	6818      	ldr	r0, [r3, #0]
 8000ccc:	f7ff ffa4 	bl	8000c18 <_puts_r>
 8000cd0:	bd10      	pop	{r4, pc}
 8000cd2:	46c0      	nop			@ (mov r8, r8)
 8000cd4:	20000010 	.word	0x20000010

08000cd8 <__sread>:
 8000cd8:	b570      	push	{r4, r5, r6, lr}
 8000cda:	000c      	movs	r4, r1
 8000cdc:	250e      	movs	r5, #14
 8000cde:	5f49      	ldrsh	r1, [r1, r5]
 8000ce0:	f000 f914 	bl	8000f0c <_read_r>
 8000ce4:	2800      	cmp	r0, #0
 8000ce6:	db03      	blt.n	8000cf0 <__sread+0x18>
 8000ce8:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8000cea:	181b      	adds	r3, r3, r0
 8000cec:	6563      	str	r3, [r4, #84]	@ 0x54
 8000cee:	bd70      	pop	{r4, r5, r6, pc}
 8000cf0:	89a3      	ldrh	r3, [r4, #12]
 8000cf2:	4a02      	ldr	r2, [pc, #8]	@ (8000cfc <__sread+0x24>)
 8000cf4:	4013      	ands	r3, r2
 8000cf6:	81a3      	strh	r3, [r4, #12]
 8000cf8:	e7f9      	b.n	8000cee <__sread+0x16>
 8000cfa:	46c0      	nop			@ (mov r8, r8)
 8000cfc:	ffffefff 	.word	0xffffefff

08000d00 <__swrite>:
 8000d00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d02:	001f      	movs	r7, r3
 8000d04:	898b      	ldrh	r3, [r1, #12]
 8000d06:	0005      	movs	r5, r0
 8000d08:	000c      	movs	r4, r1
 8000d0a:	0016      	movs	r6, r2
 8000d0c:	05db      	lsls	r3, r3, #23
 8000d0e:	d505      	bpl.n	8000d1c <__swrite+0x1c>
 8000d10:	230e      	movs	r3, #14
 8000d12:	5ec9      	ldrsh	r1, [r1, r3]
 8000d14:	2200      	movs	r2, #0
 8000d16:	2302      	movs	r3, #2
 8000d18:	f000 f8e4 	bl	8000ee4 <_lseek_r>
 8000d1c:	89a3      	ldrh	r3, [r4, #12]
 8000d1e:	4a05      	ldr	r2, [pc, #20]	@ (8000d34 <__swrite+0x34>)
 8000d20:	0028      	movs	r0, r5
 8000d22:	4013      	ands	r3, r2
 8000d24:	81a3      	strh	r3, [r4, #12]
 8000d26:	0032      	movs	r2, r6
 8000d28:	230e      	movs	r3, #14
 8000d2a:	5ee1      	ldrsh	r1, [r4, r3]
 8000d2c:	003b      	movs	r3, r7
 8000d2e:	f000 f901 	bl	8000f34 <_write_r>
 8000d32:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000d34:	ffffefff 	.word	0xffffefff

08000d38 <__sseek>:
 8000d38:	b570      	push	{r4, r5, r6, lr}
 8000d3a:	000c      	movs	r4, r1
 8000d3c:	250e      	movs	r5, #14
 8000d3e:	5f49      	ldrsh	r1, [r1, r5]
 8000d40:	f000 f8d0 	bl	8000ee4 <_lseek_r>
 8000d44:	89a3      	ldrh	r3, [r4, #12]
 8000d46:	1c42      	adds	r2, r0, #1
 8000d48:	d103      	bne.n	8000d52 <__sseek+0x1a>
 8000d4a:	4a05      	ldr	r2, [pc, #20]	@ (8000d60 <__sseek+0x28>)
 8000d4c:	4013      	ands	r3, r2
 8000d4e:	81a3      	strh	r3, [r4, #12]
 8000d50:	bd70      	pop	{r4, r5, r6, pc}
 8000d52:	2280      	movs	r2, #128	@ 0x80
 8000d54:	0152      	lsls	r2, r2, #5
 8000d56:	4313      	orrs	r3, r2
 8000d58:	81a3      	strh	r3, [r4, #12]
 8000d5a:	6560      	str	r0, [r4, #84]	@ 0x54
 8000d5c:	e7f8      	b.n	8000d50 <__sseek+0x18>
 8000d5e:	46c0      	nop			@ (mov r8, r8)
 8000d60:	ffffefff 	.word	0xffffefff

08000d64 <__sclose>:
 8000d64:	b510      	push	{r4, lr}
 8000d66:	230e      	movs	r3, #14
 8000d68:	5ec9      	ldrsh	r1, [r1, r3]
 8000d6a:	f000 f8a9 	bl	8000ec0 <_close_r>
 8000d6e:	bd10      	pop	{r4, pc}

08000d70 <__swbuf_r>:
 8000d70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d72:	0006      	movs	r6, r0
 8000d74:	000d      	movs	r5, r1
 8000d76:	0014      	movs	r4, r2
 8000d78:	2800      	cmp	r0, #0
 8000d7a:	d004      	beq.n	8000d86 <__swbuf_r+0x16>
 8000d7c:	6a03      	ldr	r3, [r0, #32]
 8000d7e:	2b00      	cmp	r3, #0
 8000d80:	d101      	bne.n	8000d86 <__swbuf_r+0x16>
 8000d82:	f7ff ff05 	bl	8000b90 <__sinit>
 8000d86:	69a3      	ldr	r3, [r4, #24]
 8000d88:	60a3      	str	r3, [r4, #8]
 8000d8a:	89a3      	ldrh	r3, [r4, #12]
 8000d8c:	071b      	lsls	r3, r3, #28
 8000d8e:	d502      	bpl.n	8000d96 <__swbuf_r+0x26>
 8000d90:	6923      	ldr	r3, [r4, #16]
 8000d92:	2b00      	cmp	r3, #0
 8000d94:	d109      	bne.n	8000daa <__swbuf_r+0x3a>
 8000d96:	0021      	movs	r1, r4
 8000d98:	0030      	movs	r0, r6
 8000d9a:	f000 f82b 	bl	8000df4 <__swsetup_r>
 8000d9e:	2800      	cmp	r0, #0
 8000da0:	d003      	beq.n	8000daa <__swbuf_r+0x3a>
 8000da2:	2501      	movs	r5, #1
 8000da4:	426d      	negs	r5, r5
 8000da6:	0028      	movs	r0, r5
 8000da8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000daa:	6923      	ldr	r3, [r4, #16]
 8000dac:	6820      	ldr	r0, [r4, #0]
 8000dae:	b2ef      	uxtb	r7, r5
 8000db0:	1ac0      	subs	r0, r0, r3
 8000db2:	6963      	ldr	r3, [r4, #20]
 8000db4:	b2ed      	uxtb	r5, r5
 8000db6:	4283      	cmp	r3, r0
 8000db8:	dc05      	bgt.n	8000dc6 <__swbuf_r+0x56>
 8000dba:	0021      	movs	r1, r4
 8000dbc:	0030      	movs	r0, r6
 8000dbe:	f000 fd3f 	bl	8001840 <_fflush_r>
 8000dc2:	2800      	cmp	r0, #0
 8000dc4:	d1ed      	bne.n	8000da2 <__swbuf_r+0x32>
 8000dc6:	68a3      	ldr	r3, [r4, #8]
 8000dc8:	3001      	adds	r0, #1
 8000dca:	3b01      	subs	r3, #1
 8000dcc:	60a3      	str	r3, [r4, #8]
 8000dce:	6823      	ldr	r3, [r4, #0]
 8000dd0:	1c5a      	adds	r2, r3, #1
 8000dd2:	6022      	str	r2, [r4, #0]
 8000dd4:	701f      	strb	r7, [r3, #0]
 8000dd6:	6963      	ldr	r3, [r4, #20]
 8000dd8:	4283      	cmp	r3, r0
 8000dda:	d004      	beq.n	8000de6 <__swbuf_r+0x76>
 8000ddc:	89a3      	ldrh	r3, [r4, #12]
 8000dde:	07db      	lsls	r3, r3, #31
 8000de0:	d5e1      	bpl.n	8000da6 <__swbuf_r+0x36>
 8000de2:	2d0a      	cmp	r5, #10
 8000de4:	d1df      	bne.n	8000da6 <__swbuf_r+0x36>
 8000de6:	0021      	movs	r1, r4
 8000de8:	0030      	movs	r0, r6
 8000dea:	f000 fd29 	bl	8001840 <_fflush_r>
 8000dee:	2800      	cmp	r0, #0
 8000df0:	d0d9      	beq.n	8000da6 <__swbuf_r+0x36>
 8000df2:	e7d6      	b.n	8000da2 <__swbuf_r+0x32>

08000df4 <__swsetup_r>:
 8000df4:	4b2d      	ldr	r3, [pc, #180]	@ (8000eac <__swsetup_r+0xb8>)
 8000df6:	b570      	push	{r4, r5, r6, lr}
 8000df8:	0005      	movs	r5, r0
 8000dfa:	6818      	ldr	r0, [r3, #0]
 8000dfc:	000c      	movs	r4, r1
 8000dfe:	2800      	cmp	r0, #0
 8000e00:	d004      	beq.n	8000e0c <__swsetup_r+0x18>
 8000e02:	6a03      	ldr	r3, [r0, #32]
 8000e04:	2b00      	cmp	r3, #0
 8000e06:	d101      	bne.n	8000e0c <__swsetup_r+0x18>
 8000e08:	f7ff fec2 	bl	8000b90 <__sinit>
 8000e0c:	230c      	movs	r3, #12
 8000e0e:	5ee2      	ldrsh	r2, [r4, r3]
 8000e10:	0713      	lsls	r3, r2, #28
 8000e12:	d423      	bmi.n	8000e5c <__swsetup_r+0x68>
 8000e14:	06d3      	lsls	r3, r2, #27
 8000e16:	d407      	bmi.n	8000e28 <__swsetup_r+0x34>
 8000e18:	2309      	movs	r3, #9
 8000e1a:	602b      	str	r3, [r5, #0]
 8000e1c:	2340      	movs	r3, #64	@ 0x40
 8000e1e:	2001      	movs	r0, #1
 8000e20:	4313      	orrs	r3, r2
 8000e22:	81a3      	strh	r3, [r4, #12]
 8000e24:	4240      	negs	r0, r0
 8000e26:	e03a      	b.n	8000e9e <__swsetup_r+0xaa>
 8000e28:	0752      	lsls	r2, r2, #29
 8000e2a:	d513      	bpl.n	8000e54 <__swsetup_r+0x60>
 8000e2c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000e2e:	2900      	cmp	r1, #0
 8000e30:	d008      	beq.n	8000e44 <__swsetup_r+0x50>
 8000e32:	0023      	movs	r3, r4
 8000e34:	3344      	adds	r3, #68	@ 0x44
 8000e36:	4299      	cmp	r1, r3
 8000e38:	d002      	beq.n	8000e40 <__swsetup_r+0x4c>
 8000e3a:	0028      	movs	r0, r5
 8000e3c:	f000 f8bc 	bl	8000fb8 <_free_r>
 8000e40:	2300      	movs	r3, #0
 8000e42:	6363      	str	r3, [r4, #52]	@ 0x34
 8000e44:	2224      	movs	r2, #36	@ 0x24
 8000e46:	89a3      	ldrh	r3, [r4, #12]
 8000e48:	4393      	bics	r3, r2
 8000e4a:	81a3      	strh	r3, [r4, #12]
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	6063      	str	r3, [r4, #4]
 8000e50:	6923      	ldr	r3, [r4, #16]
 8000e52:	6023      	str	r3, [r4, #0]
 8000e54:	2308      	movs	r3, #8
 8000e56:	89a2      	ldrh	r2, [r4, #12]
 8000e58:	4313      	orrs	r3, r2
 8000e5a:	81a3      	strh	r3, [r4, #12]
 8000e5c:	6923      	ldr	r3, [r4, #16]
 8000e5e:	2b00      	cmp	r3, #0
 8000e60:	d10b      	bne.n	8000e7a <__swsetup_r+0x86>
 8000e62:	21a0      	movs	r1, #160	@ 0xa0
 8000e64:	2280      	movs	r2, #128	@ 0x80
 8000e66:	89a3      	ldrh	r3, [r4, #12]
 8000e68:	0089      	lsls	r1, r1, #2
 8000e6a:	0092      	lsls	r2, r2, #2
 8000e6c:	400b      	ands	r3, r1
 8000e6e:	4293      	cmp	r3, r2
 8000e70:	d003      	beq.n	8000e7a <__swsetup_r+0x86>
 8000e72:	0021      	movs	r1, r4
 8000e74:	0028      	movs	r0, r5
 8000e76:	f000 fd39 	bl	80018ec <__smakebuf_r>
 8000e7a:	230c      	movs	r3, #12
 8000e7c:	5ee2      	ldrsh	r2, [r4, r3]
 8000e7e:	2101      	movs	r1, #1
 8000e80:	0013      	movs	r3, r2
 8000e82:	400b      	ands	r3, r1
 8000e84:	420a      	tst	r2, r1
 8000e86:	d00b      	beq.n	8000ea0 <__swsetup_r+0xac>
 8000e88:	2300      	movs	r3, #0
 8000e8a:	60a3      	str	r3, [r4, #8]
 8000e8c:	6963      	ldr	r3, [r4, #20]
 8000e8e:	425b      	negs	r3, r3
 8000e90:	61a3      	str	r3, [r4, #24]
 8000e92:	2000      	movs	r0, #0
 8000e94:	6923      	ldr	r3, [r4, #16]
 8000e96:	4283      	cmp	r3, r0
 8000e98:	d101      	bne.n	8000e9e <__swsetup_r+0xaa>
 8000e9a:	0613      	lsls	r3, r2, #24
 8000e9c:	d4be      	bmi.n	8000e1c <__swsetup_r+0x28>
 8000e9e:	bd70      	pop	{r4, r5, r6, pc}
 8000ea0:	0791      	lsls	r1, r2, #30
 8000ea2:	d400      	bmi.n	8000ea6 <__swsetup_r+0xb2>
 8000ea4:	6963      	ldr	r3, [r4, #20]
 8000ea6:	60a3      	str	r3, [r4, #8]
 8000ea8:	e7f3      	b.n	8000e92 <__swsetup_r+0x9e>
 8000eaa:	46c0      	nop			@ (mov r8, r8)
 8000eac:	20000010 	.word	0x20000010

08000eb0 <memset>:
 8000eb0:	0003      	movs	r3, r0
 8000eb2:	1882      	adds	r2, r0, r2
 8000eb4:	4293      	cmp	r3, r2
 8000eb6:	d100      	bne.n	8000eba <memset+0xa>
 8000eb8:	4770      	bx	lr
 8000eba:	7019      	strb	r1, [r3, #0]
 8000ebc:	3301      	adds	r3, #1
 8000ebe:	e7f9      	b.n	8000eb4 <memset+0x4>

08000ec0 <_close_r>:
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	b570      	push	{r4, r5, r6, lr}
 8000ec4:	4d06      	ldr	r5, [pc, #24]	@ (8000ee0 <_close_r+0x20>)
 8000ec6:	0004      	movs	r4, r0
 8000ec8:	0008      	movs	r0, r1
 8000eca:	602b      	str	r3, [r5, #0]
 8000ecc:	f7ff fafd 	bl	80004ca <_close>
 8000ed0:	1c43      	adds	r3, r0, #1
 8000ed2:	d103      	bne.n	8000edc <_close_r+0x1c>
 8000ed4:	682b      	ldr	r3, [r5, #0]
 8000ed6:	2b00      	cmp	r3, #0
 8000ed8:	d000      	beq.n	8000edc <_close_r+0x1c>
 8000eda:	6023      	str	r3, [r4, #0]
 8000edc:	bd70      	pop	{r4, r5, r6, pc}
 8000ede:	46c0      	nop			@ (mov r8, r8)
 8000ee0:	200001bc 	.word	0x200001bc

08000ee4 <_lseek_r>:
 8000ee4:	b570      	push	{r4, r5, r6, lr}
 8000ee6:	0004      	movs	r4, r0
 8000ee8:	0008      	movs	r0, r1
 8000eea:	0011      	movs	r1, r2
 8000eec:	001a      	movs	r2, r3
 8000eee:	2300      	movs	r3, #0
 8000ef0:	4d05      	ldr	r5, [pc, #20]	@ (8000f08 <_lseek_r+0x24>)
 8000ef2:	602b      	str	r3, [r5, #0]
 8000ef4:	f7ff fb0a 	bl	800050c <_lseek>
 8000ef8:	1c43      	adds	r3, r0, #1
 8000efa:	d103      	bne.n	8000f04 <_lseek_r+0x20>
 8000efc:	682b      	ldr	r3, [r5, #0]
 8000efe:	2b00      	cmp	r3, #0
 8000f00:	d000      	beq.n	8000f04 <_lseek_r+0x20>
 8000f02:	6023      	str	r3, [r4, #0]
 8000f04:	bd70      	pop	{r4, r5, r6, pc}
 8000f06:	46c0      	nop			@ (mov r8, r8)
 8000f08:	200001bc 	.word	0x200001bc

08000f0c <_read_r>:
 8000f0c:	b570      	push	{r4, r5, r6, lr}
 8000f0e:	0004      	movs	r4, r0
 8000f10:	0008      	movs	r0, r1
 8000f12:	0011      	movs	r1, r2
 8000f14:	001a      	movs	r2, r3
 8000f16:	2300      	movs	r3, #0
 8000f18:	4d05      	ldr	r5, [pc, #20]	@ (8000f30 <_read_r+0x24>)
 8000f1a:	602b      	str	r3, [r5, #0]
 8000f1c:	f7ff fa9c 	bl	8000458 <_read>
 8000f20:	1c43      	adds	r3, r0, #1
 8000f22:	d103      	bne.n	8000f2c <_read_r+0x20>
 8000f24:	682b      	ldr	r3, [r5, #0]
 8000f26:	2b00      	cmp	r3, #0
 8000f28:	d000      	beq.n	8000f2c <_read_r+0x20>
 8000f2a:	6023      	str	r3, [r4, #0]
 8000f2c:	bd70      	pop	{r4, r5, r6, pc}
 8000f2e:	46c0      	nop			@ (mov r8, r8)
 8000f30:	200001bc 	.word	0x200001bc

08000f34 <_write_r>:
 8000f34:	b570      	push	{r4, r5, r6, lr}
 8000f36:	0004      	movs	r4, r0
 8000f38:	0008      	movs	r0, r1
 8000f3a:	0011      	movs	r1, r2
 8000f3c:	001a      	movs	r2, r3
 8000f3e:	2300      	movs	r3, #0
 8000f40:	4d05      	ldr	r5, [pc, #20]	@ (8000f58 <_write_r+0x24>)
 8000f42:	602b      	str	r3, [r5, #0]
 8000f44:	f7ff faa5 	bl	8000492 <_write>
 8000f48:	1c43      	adds	r3, r0, #1
 8000f4a:	d103      	bne.n	8000f54 <_write_r+0x20>
 8000f4c:	682b      	ldr	r3, [r5, #0]
 8000f4e:	2b00      	cmp	r3, #0
 8000f50:	d000      	beq.n	8000f54 <_write_r+0x20>
 8000f52:	6023      	str	r3, [r4, #0]
 8000f54:	bd70      	pop	{r4, r5, r6, pc}
 8000f56:	46c0      	nop			@ (mov r8, r8)
 8000f58:	200001bc 	.word	0x200001bc

08000f5c <__errno>:
 8000f5c:	4b01      	ldr	r3, [pc, #4]	@ (8000f64 <__errno+0x8>)
 8000f5e:	6818      	ldr	r0, [r3, #0]
 8000f60:	4770      	bx	lr
 8000f62:	46c0      	nop			@ (mov r8, r8)
 8000f64:	20000010 	.word	0x20000010

08000f68 <__libc_init_array>:
 8000f68:	b570      	push	{r4, r5, r6, lr}
 8000f6a:	2600      	movs	r6, #0
 8000f6c:	4c0c      	ldr	r4, [pc, #48]	@ (8000fa0 <__libc_init_array+0x38>)
 8000f6e:	4d0d      	ldr	r5, [pc, #52]	@ (8000fa4 <__libc_init_array+0x3c>)
 8000f70:	1b64      	subs	r4, r4, r5
 8000f72:	10a4      	asrs	r4, r4, #2
 8000f74:	42a6      	cmp	r6, r4
 8000f76:	d109      	bne.n	8000f8c <__libc_init_array+0x24>
 8000f78:	2600      	movs	r6, #0
 8000f7a:	f000 fd3b 	bl	80019f4 <_init>
 8000f7e:	4c0a      	ldr	r4, [pc, #40]	@ (8000fa8 <__libc_init_array+0x40>)
 8000f80:	4d0a      	ldr	r5, [pc, #40]	@ (8000fac <__libc_init_array+0x44>)
 8000f82:	1b64      	subs	r4, r4, r5
 8000f84:	10a4      	asrs	r4, r4, #2
 8000f86:	42a6      	cmp	r6, r4
 8000f88:	d105      	bne.n	8000f96 <__libc_init_array+0x2e>
 8000f8a:	bd70      	pop	{r4, r5, r6, pc}
 8000f8c:	00b3      	lsls	r3, r6, #2
 8000f8e:	58eb      	ldr	r3, [r5, r3]
 8000f90:	4798      	blx	r3
 8000f92:	3601      	adds	r6, #1
 8000f94:	e7ee      	b.n	8000f74 <__libc_init_array+0xc>
 8000f96:	00b3      	lsls	r3, r6, #2
 8000f98:	58eb      	ldr	r3, [r5, r3]
 8000f9a:	4798      	blx	r3
 8000f9c:	3601      	adds	r6, #1
 8000f9e:	e7f2      	b.n	8000f86 <__libc_init_array+0x1e>
 8000fa0:	08001acc 	.word	0x08001acc
 8000fa4:	08001acc 	.word	0x08001acc
 8000fa8:	08001ad0 	.word	0x08001ad0
 8000fac:	08001acc 	.word	0x08001acc

08000fb0 <__retarget_lock_init_recursive>:
 8000fb0:	4770      	bx	lr

08000fb2 <__retarget_lock_acquire_recursive>:
 8000fb2:	4770      	bx	lr

08000fb4 <__retarget_lock_release_recursive>:
 8000fb4:	4770      	bx	lr
	...

08000fb8 <_free_r>:
 8000fb8:	b570      	push	{r4, r5, r6, lr}
 8000fba:	0005      	movs	r5, r0
 8000fbc:	1e0c      	subs	r4, r1, #0
 8000fbe:	d010      	beq.n	8000fe2 <_free_r+0x2a>
 8000fc0:	3c04      	subs	r4, #4
 8000fc2:	6823      	ldr	r3, [r4, #0]
 8000fc4:	2b00      	cmp	r3, #0
 8000fc6:	da00      	bge.n	8000fca <_free_r+0x12>
 8000fc8:	18e4      	adds	r4, r4, r3
 8000fca:	0028      	movs	r0, r5
 8000fcc:	f000 f8e0 	bl	8001190 <__malloc_lock>
 8000fd0:	4a1d      	ldr	r2, [pc, #116]	@ (8001048 <_free_r+0x90>)
 8000fd2:	6813      	ldr	r3, [r2, #0]
 8000fd4:	2b00      	cmp	r3, #0
 8000fd6:	d105      	bne.n	8000fe4 <_free_r+0x2c>
 8000fd8:	6063      	str	r3, [r4, #4]
 8000fda:	6014      	str	r4, [r2, #0]
 8000fdc:	0028      	movs	r0, r5
 8000fde:	f000 f8df 	bl	80011a0 <__malloc_unlock>
 8000fe2:	bd70      	pop	{r4, r5, r6, pc}
 8000fe4:	42a3      	cmp	r3, r4
 8000fe6:	d908      	bls.n	8000ffa <_free_r+0x42>
 8000fe8:	6820      	ldr	r0, [r4, #0]
 8000fea:	1821      	adds	r1, r4, r0
 8000fec:	428b      	cmp	r3, r1
 8000fee:	d1f3      	bne.n	8000fd8 <_free_r+0x20>
 8000ff0:	6819      	ldr	r1, [r3, #0]
 8000ff2:	685b      	ldr	r3, [r3, #4]
 8000ff4:	1809      	adds	r1, r1, r0
 8000ff6:	6021      	str	r1, [r4, #0]
 8000ff8:	e7ee      	b.n	8000fd8 <_free_r+0x20>
 8000ffa:	001a      	movs	r2, r3
 8000ffc:	685b      	ldr	r3, [r3, #4]
 8000ffe:	2b00      	cmp	r3, #0
 8001000:	d001      	beq.n	8001006 <_free_r+0x4e>
 8001002:	42a3      	cmp	r3, r4
 8001004:	d9f9      	bls.n	8000ffa <_free_r+0x42>
 8001006:	6811      	ldr	r1, [r2, #0]
 8001008:	1850      	adds	r0, r2, r1
 800100a:	42a0      	cmp	r0, r4
 800100c:	d10b      	bne.n	8001026 <_free_r+0x6e>
 800100e:	6820      	ldr	r0, [r4, #0]
 8001010:	1809      	adds	r1, r1, r0
 8001012:	1850      	adds	r0, r2, r1
 8001014:	6011      	str	r1, [r2, #0]
 8001016:	4283      	cmp	r3, r0
 8001018:	d1e0      	bne.n	8000fdc <_free_r+0x24>
 800101a:	6818      	ldr	r0, [r3, #0]
 800101c:	685b      	ldr	r3, [r3, #4]
 800101e:	1841      	adds	r1, r0, r1
 8001020:	6011      	str	r1, [r2, #0]
 8001022:	6053      	str	r3, [r2, #4]
 8001024:	e7da      	b.n	8000fdc <_free_r+0x24>
 8001026:	42a0      	cmp	r0, r4
 8001028:	d902      	bls.n	8001030 <_free_r+0x78>
 800102a:	230c      	movs	r3, #12
 800102c:	602b      	str	r3, [r5, #0]
 800102e:	e7d5      	b.n	8000fdc <_free_r+0x24>
 8001030:	6820      	ldr	r0, [r4, #0]
 8001032:	1821      	adds	r1, r4, r0
 8001034:	428b      	cmp	r3, r1
 8001036:	d103      	bne.n	8001040 <_free_r+0x88>
 8001038:	6819      	ldr	r1, [r3, #0]
 800103a:	685b      	ldr	r3, [r3, #4]
 800103c:	1809      	adds	r1, r1, r0
 800103e:	6021      	str	r1, [r4, #0]
 8001040:	6063      	str	r3, [r4, #4]
 8001042:	6054      	str	r4, [r2, #4]
 8001044:	e7ca      	b.n	8000fdc <_free_r+0x24>
 8001046:	46c0      	nop			@ (mov r8, r8)
 8001048:	200001c8 	.word	0x200001c8

0800104c <sbrk_aligned>:
 800104c:	b570      	push	{r4, r5, r6, lr}
 800104e:	4e0f      	ldr	r6, [pc, #60]	@ (800108c <sbrk_aligned+0x40>)
 8001050:	000d      	movs	r5, r1
 8001052:	6831      	ldr	r1, [r6, #0]
 8001054:	0004      	movs	r4, r0
 8001056:	2900      	cmp	r1, #0
 8001058:	d102      	bne.n	8001060 <sbrk_aligned+0x14>
 800105a:	f000 fcad 	bl	80019b8 <_sbrk_r>
 800105e:	6030      	str	r0, [r6, #0]
 8001060:	0029      	movs	r1, r5
 8001062:	0020      	movs	r0, r4
 8001064:	f000 fca8 	bl	80019b8 <_sbrk_r>
 8001068:	1c43      	adds	r3, r0, #1
 800106a:	d103      	bne.n	8001074 <sbrk_aligned+0x28>
 800106c:	2501      	movs	r5, #1
 800106e:	426d      	negs	r5, r5
 8001070:	0028      	movs	r0, r5
 8001072:	bd70      	pop	{r4, r5, r6, pc}
 8001074:	2303      	movs	r3, #3
 8001076:	1cc5      	adds	r5, r0, #3
 8001078:	439d      	bics	r5, r3
 800107a:	42a8      	cmp	r0, r5
 800107c:	d0f8      	beq.n	8001070 <sbrk_aligned+0x24>
 800107e:	1a29      	subs	r1, r5, r0
 8001080:	0020      	movs	r0, r4
 8001082:	f000 fc99 	bl	80019b8 <_sbrk_r>
 8001086:	3001      	adds	r0, #1
 8001088:	d1f2      	bne.n	8001070 <sbrk_aligned+0x24>
 800108a:	e7ef      	b.n	800106c <sbrk_aligned+0x20>
 800108c:	200001c4 	.word	0x200001c4

08001090 <_malloc_r>:
 8001090:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001092:	2203      	movs	r2, #3
 8001094:	1ccb      	adds	r3, r1, #3
 8001096:	4393      	bics	r3, r2
 8001098:	3308      	adds	r3, #8
 800109a:	0005      	movs	r5, r0
 800109c:	001f      	movs	r7, r3
 800109e:	2b0c      	cmp	r3, #12
 80010a0:	d234      	bcs.n	800110c <_malloc_r+0x7c>
 80010a2:	270c      	movs	r7, #12
 80010a4:	42b9      	cmp	r1, r7
 80010a6:	d833      	bhi.n	8001110 <_malloc_r+0x80>
 80010a8:	0028      	movs	r0, r5
 80010aa:	f000 f871 	bl	8001190 <__malloc_lock>
 80010ae:	4e37      	ldr	r6, [pc, #220]	@ (800118c <_malloc_r+0xfc>)
 80010b0:	6833      	ldr	r3, [r6, #0]
 80010b2:	001c      	movs	r4, r3
 80010b4:	2c00      	cmp	r4, #0
 80010b6:	d12f      	bne.n	8001118 <_malloc_r+0x88>
 80010b8:	0039      	movs	r1, r7
 80010ba:	0028      	movs	r0, r5
 80010bc:	f7ff ffc6 	bl	800104c <sbrk_aligned>
 80010c0:	0004      	movs	r4, r0
 80010c2:	1c43      	adds	r3, r0, #1
 80010c4:	d15f      	bne.n	8001186 <_malloc_r+0xf6>
 80010c6:	6834      	ldr	r4, [r6, #0]
 80010c8:	9400      	str	r4, [sp, #0]
 80010ca:	9b00      	ldr	r3, [sp, #0]
 80010cc:	2b00      	cmp	r3, #0
 80010ce:	d14a      	bne.n	8001166 <_malloc_r+0xd6>
 80010d0:	2c00      	cmp	r4, #0
 80010d2:	d052      	beq.n	800117a <_malloc_r+0xea>
 80010d4:	6823      	ldr	r3, [r4, #0]
 80010d6:	0028      	movs	r0, r5
 80010d8:	18e3      	adds	r3, r4, r3
 80010da:	9900      	ldr	r1, [sp, #0]
 80010dc:	9301      	str	r3, [sp, #4]
 80010de:	f000 fc6b 	bl	80019b8 <_sbrk_r>
 80010e2:	9b01      	ldr	r3, [sp, #4]
 80010e4:	4283      	cmp	r3, r0
 80010e6:	d148      	bne.n	800117a <_malloc_r+0xea>
 80010e8:	6823      	ldr	r3, [r4, #0]
 80010ea:	0028      	movs	r0, r5
 80010ec:	1aff      	subs	r7, r7, r3
 80010ee:	0039      	movs	r1, r7
 80010f0:	f7ff ffac 	bl	800104c <sbrk_aligned>
 80010f4:	3001      	adds	r0, #1
 80010f6:	d040      	beq.n	800117a <_malloc_r+0xea>
 80010f8:	6823      	ldr	r3, [r4, #0]
 80010fa:	19db      	adds	r3, r3, r7
 80010fc:	6023      	str	r3, [r4, #0]
 80010fe:	6833      	ldr	r3, [r6, #0]
 8001100:	685a      	ldr	r2, [r3, #4]
 8001102:	2a00      	cmp	r2, #0
 8001104:	d133      	bne.n	800116e <_malloc_r+0xde>
 8001106:	9b00      	ldr	r3, [sp, #0]
 8001108:	6033      	str	r3, [r6, #0]
 800110a:	e019      	b.n	8001140 <_malloc_r+0xb0>
 800110c:	2b00      	cmp	r3, #0
 800110e:	dac9      	bge.n	80010a4 <_malloc_r+0x14>
 8001110:	230c      	movs	r3, #12
 8001112:	602b      	str	r3, [r5, #0]
 8001114:	2000      	movs	r0, #0
 8001116:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001118:	6821      	ldr	r1, [r4, #0]
 800111a:	1bc9      	subs	r1, r1, r7
 800111c:	d420      	bmi.n	8001160 <_malloc_r+0xd0>
 800111e:	290b      	cmp	r1, #11
 8001120:	d90a      	bls.n	8001138 <_malloc_r+0xa8>
 8001122:	19e2      	adds	r2, r4, r7
 8001124:	6027      	str	r7, [r4, #0]
 8001126:	42a3      	cmp	r3, r4
 8001128:	d104      	bne.n	8001134 <_malloc_r+0xa4>
 800112a:	6032      	str	r2, [r6, #0]
 800112c:	6863      	ldr	r3, [r4, #4]
 800112e:	6011      	str	r1, [r2, #0]
 8001130:	6053      	str	r3, [r2, #4]
 8001132:	e005      	b.n	8001140 <_malloc_r+0xb0>
 8001134:	605a      	str	r2, [r3, #4]
 8001136:	e7f9      	b.n	800112c <_malloc_r+0x9c>
 8001138:	6862      	ldr	r2, [r4, #4]
 800113a:	42a3      	cmp	r3, r4
 800113c:	d10e      	bne.n	800115c <_malloc_r+0xcc>
 800113e:	6032      	str	r2, [r6, #0]
 8001140:	0028      	movs	r0, r5
 8001142:	f000 f82d 	bl	80011a0 <__malloc_unlock>
 8001146:	0020      	movs	r0, r4
 8001148:	2207      	movs	r2, #7
 800114a:	300b      	adds	r0, #11
 800114c:	1d23      	adds	r3, r4, #4
 800114e:	4390      	bics	r0, r2
 8001150:	1ac2      	subs	r2, r0, r3
 8001152:	4298      	cmp	r0, r3
 8001154:	d0df      	beq.n	8001116 <_malloc_r+0x86>
 8001156:	1a1b      	subs	r3, r3, r0
 8001158:	50a3      	str	r3, [r4, r2]
 800115a:	e7dc      	b.n	8001116 <_malloc_r+0x86>
 800115c:	605a      	str	r2, [r3, #4]
 800115e:	e7ef      	b.n	8001140 <_malloc_r+0xb0>
 8001160:	0023      	movs	r3, r4
 8001162:	6864      	ldr	r4, [r4, #4]
 8001164:	e7a6      	b.n	80010b4 <_malloc_r+0x24>
 8001166:	9c00      	ldr	r4, [sp, #0]
 8001168:	6863      	ldr	r3, [r4, #4]
 800116a:	9300      	str	r3, [sp, #0]
 800116c:	e7ad      	b.n	80010ca <_malloc_r+0x3a>
 800116e:	001a      	movs	r2, r3
 8001170:	685b      	ldr	r3, [r3, #4]
 8001172:	42a3      	cmp	r3, r4
 8001174:	d1fb      	bne.n	800116e <_malloc_r+0xde>
 8001176:	2300      	movs	r3, #0
 8001178:	e7da      	b.n	8001130 <_malloc_r+0xa0>
 800117a:	230c      	movs	r3, #12
 800117c:	0028      	movs	r0, r5
 800117e:	602b      	str	r3, [r5, #0]
 8001180:	f000 f80e 	bl	80011a0 <__malloc_unlock>
 8001184:	e7c6      	b.n	8001114 <_malloc_r+0x84>
 8001186:	6007      	str	r7, [r0, #0]
 8001188:	e7da      	b.n	8001140 <_malloc_r+0xb0>
 800118a:	46c0      	nop			@ (mov r8, r8)
 800118c:	200001c8 	.word	0x200001c8

08001190 <__malloc_lock>:
 8001190:	b510      	push	{r4, lr}
 8001192:	4802      	ldr	r0, [pc, #8]	@ (800119c <__malloc_lock+0xc>)
 8001194:	f7ff ff0d 	bl	8000fb2 <__retarget_lock_acquire_recursive>
 8001198:	bd10      	pop	{r4, pc}
 800119a:	46c0      	nop			@ (mov r8, r8)
 800119c:	200001c0 	.word	0x200001c0

080011a0 <__malloc_unlock>:
 80011a0:	b510      	push	{r4, lr}
 80011a2:	4802      	ldr	r0, [pc, #8]	@ (80011ac <__malloc_unlock+0xc>)
 80011a4:	f7ff ff06 	bl	8000fb4 <__retarget_lock_release_recursive>
 80011a8:	bd10      	pop	{r4, pc}
 80011aa:	46c0      	nop			@ (mov r8, r8)
 80011ac:	200001c0 	.word	0x200001c0

080011b0 <__sfputc_r>:
 80011b0:	6893      	ldr	r3, [r2, #8]
 80011b2:	b510      	push	{r4, lr}
 80011b4:	3b01      	subs	r3, #1
 80011b6:	6093      	str	r3, [r2, #8]
 80011b8:	2b00      	cmp	r3, #0
 80011ba:	da04      	bge.n	80011c6 <__sfputc_r+0x16>
 80011bc:	6994      	ldr	r4, [r2, #24]
 80011be:	42a3      	cmp	r3, r4
 80011c0:	db07      	blt.n	80011d2 <__sfputc_r+0x22>
 80011c2:	290a      	cmp	r1, #10
 80011c4:	d005      	beq.n	80011d2 <__sfputc_r+0x22>
 80011c6:	6813      	ldr	r3, [r2, #0]
 80011c8:	1c58      	adds	r0, r3, #1
 80011ca:	6010      	str	r0, [r2, #0]
 80011cc:	7019      	strb	r1, [r3, #0]
 80011ce:	0008      	movs	r0, r1
 80011d0:	bd10      	pop	{r4, pc}
 80011d2:	f7ff fdcd 	bl	8000d70 <__swbuf_r>
 80011d6:	0001      	movs	r1, r0
 80011d8:	e7f9      	b.n	80011ce <__sfputc_r+0x1e>

080011da <__sfputs_r>:
 80011da:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011dc:	0006      	movs	r6, r0
 80011de:	000f      	movs	r7, r1
 80011e0:	0014      	movs	r4, r2
 80011e2:	18d5      	adds	r5, r2, r3
 80011e4:	42ac      	cmp	r4, r5
 80011e6:	d101      	bne.n	80011ec <__sfputs_r+0x12>
 80011e8:	2000      	movs	r0, #0
 80011ea:	e007      	b.n	80011fc <__sfputs_r+0x22>
 80011ec:	7821      	ldrb	r1, [r4, #0]
 80011ee:	003a      	movs	r2, r7
 80011f0:	0030      	movs	r0, r6
 80011f2:	f7ff ffdd 	bl	80011b0 <__sfputc_r>
 80011f6:	3401      	adds	r4, #1
 80011f8:	1c43      	adds	r3, r0, #1
 80011fa:	d1f3      	bne.n	80011e4 <__sfputs_r+0xa>
 80011fc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08001200 <_vfiprintf_r>:
 8001200:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001202:	b0a1      	sub	sp, #132	@ 0x84
 8001204:	000f      	movs	r7, r1
 8001206:	0015      	movs	r5, r2
 8001208:	001e      	movs	r6, r3
 800120a:	9003      	str	r0, [sp, #12]
 800120c:	2800      	cmp	r0, #0
 800120e:	d004      	beq.n	800121a <_vfiprintf_r+0x1a>
 8001210:	6a03      	ldr	r3, [r0, #32]
 8001212:	2b00      	cmp	r3, #0
 8001214:	d101      	bne.n	800121a <_vfiprintf_r+0x1a>
 8001216:	f7ff fcbb 	bl	8000b90 <__sinit>
 800121a:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800121c:	07db      	lsls	r3, r3, #31
 800121e:	d405      	bmi.n	800122c <_vfiprintf_r+0x2c>
 8001220:	89bb      	ldrh	r3, [r7, #12]
 8001222:	059b      	lsls	r3, r3, #22
 8001224:	d402      	bmi.n	800122c <_vfiprintf_r+0x2c>
 8001226:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8001228:	f7ff fec3 	bl	8000fb2 <__retarget_lock_acquire_recursive>
 800122c:	89bb      	ldrh	r3, [r7, #12]
 800122e:	071b      	lsls	r3, r3, #28
 8001230:	d502      	bpl.n	8001238 <_vfiprintf_r+0x38>
 8001232:	693b      	ldr	r3, [r7, #16]
 8001234:	2b00      	cmp	r3, #0
 8001236:	d113      	bne.n	8001260 <_vfiprintf_r+0x60>
 8001238:	0039      	movs	r1, r7
 800123a:	9803      	ldr	r0, [sp, #12]
 800123c:	f7ff fdda 	bl	8000df4 <__swsetup_r>
 8001240:	2800      	cmp	r0, #0
 8001242:	d00d      	beq.n	8001260 <_vfiprintf_r+0x60>
 8001244:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 8001246:	07db      	lsls	r3, r3, #31
 8001248:	d503      	bpl.n	8001252 <_vfiprintf_r+0x52>
 800124a:	2001      	movs	r0, #1
 800124c:	4240      	negs	r0, r0
 800124e:	b021      	add	sp, #132	@ 0x84
 8001250:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001252:	89bb      	ldrh	r3, [r7, #12]
 8001254:	059b      	lsls	r3, r3, #22
 8001256:	d4f8      	bmi.n	800124a <_vfiprintf_r+0x4a>
 8001258:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 800125a:	f7ff feab 	bl	8000fb4 <__retarget_lock_release_recursive>
 800125e:	e7f4      	b.n	800124a <_vfiprintf_r+0x4a>
 8001260:	2300      	movs	r3, #0
 8001262:	ac08      	add	r4, sp, #32
 8001264:	6163      	str	r3, [r4, #20]
 8001266:	3320      	adds	r3, #32
 8001268:	7663      	strb	r3, [r4, #25]
 800126a:	3310      	adds	r3, #16
 800126c:	76a3      	strb	r3, [r4, #26]
 800126e:	9607      	str	r6, [sp, #28]
 8001270:	002e      	movs	r6, r5
 8001272:	7833      	ldrb	r3, [r6, #0]
 8001274:	2b00      	cmp	r3, #0
 8001276:	d001      	beq.n	800127c <_vfiprintf_r+0x7c>
 8001278:	2b25      	cmp	r3, #37	@ 0x25
 800127a:	d148      	bne.n	800130e <_vfiprintf_r+0x10e>
 800127c:	1b73      	subs	r3, r6, r5
 800127e:	9305      	str	r3, [sp, #20]
 8001280:	42ae      	cmp	r6, r5
 8001282:	d00b      	beq.n	800129c <_vfiprintf_r+0x9c>
 8001284:	002a      	movs	r2, r5
 8001286:	0039      	movs	r1, r7
 8001288:	9803      	ldr	r0, [sp, #12]
 800128a:	f7ff ffa6 	bl	80011da <__sfputs_r>
 800128e:	3001      	adds	r0, #1
 8001290:	d100      	bne.n	8001294 <_vfiprintf_r+0x94>
 8001292:	e0ae      	b.n	80013f2 <_vfiprintf_r+0x1f2>
 8001294:	6963      	ldr	r3, [r4, #20]
 8001296:	9a05      	ldr	r2, [sp, #20]
 8001298:	189b      	adds	r3, r3, r2
 800129a:	6163      	str	r3, [r4, #20]
 800129c:	7833      	ldrb	r3, [r6, #0]
 800129e:	2b00      	cmp	r3, #0
 80012a0:	d100      	bne.n	80012a4 <_vfiprintf_r+0xa4>
 80012a2:	e0a6      	b.n	80013f2 <_vfiprintf_r+0x1f2>
 80012a4:	2201      	movs	r2, #1
 80012a6:	2300      	movs	r3, #0
 80012a8:	4252      	negs	r2, r2
 80012aa:	6062      	str	r2, [r4, #4]
 80012ac:	a904      	add	r1, sp, #16
 80012ae:	3254      	adds	r2, #84	@ 0x54
 80012b0:	1852      	adds	r2, r2, r1
 80012b2:	1c75      	adds	r5, r6, #1
 80012b4:	6023      	str	r3, [r4, #0]
 80012b6:	60e3      	str	r3, [r4, #12]
 80012b8:	60a3      	str	r3, [r4, #8]
 80012ba:	7013      	strb	r3, [r2, #0]
 80012bc:	65a3      	str	r3, [r4, #88]	@ 0x58
 80012be:	4b59      	ldr	r3, [pc, #356]	@ (8001424 <_vfiprintf_r+0x224>)
 80012c0:	2205      	movs	r2, #5
 80012c2:	0018      	movs	r0, r3
 80012c4:	7829      	ldrb	r1, [r5, #0]
 80012c6:	9305      	str	r3, [sp, #20]
 80012c8:	f000 fb88 	bl	80019dc <memchr>
 80012cc:	1c6e      	adds	r6, r5, #1
 80012ce:	2800      	cmp	r0, #0
 80012d0:	d11f      	bne.n	8001312 <_vfiprintf_r+0x112>
 80012d2:	6822      	ldr	r2, [r4, #0]
 80012d4:	06d3      	lsls	r3, r2, #27
 80012d6:	d504      	bpl.n	80012e2 <_vfiprintf_r+0xe2>
 80012d8:	2353      	movs	r3, #83	@ 0x53
 80012da:	a904      	add	r1, sp, #16
 80012dc:	185b      	adds	r3, r3, r1
 80012de:	2120      	movs	r1, #32
 80012e0:	7019      	strb	r1, [r3, #0]
 80012e2:	0713      	lsls	r3, r2, #28
 80012e4:	d504      	bpl.n	80012f0 <_vfiprintf_r+0xf0>
 80012e6:	2353      	movs	r3, #83	@ 0x53
 80012e8:	a904      	add	r1, sp, #16
 80012ea:	185b      	adds	r3, r3, r1
 80012ec:	212b      	movs	r1, #43	@ 0x2b
 80012ee:	7019      	strb	r1, [r3, #0]
 80012f0:	782b      	ldrb	r3, [r5, #0]
 80012f2:	2b2a      	cmp	r3, #42	@ 0x2a
 80012f4:	d016      	beq.n	8001324 <_vfiprintf_r+0x124>
 80012f6:	002e      	movs	r6, r5
 80012f8:	2100      	movs	r1, #0
 80012fa:	200a      	movs	r0, #10
 80012fc:	68e3      	ldr	r3, [r4, #12]
 80012fe:	7832      	ldrb	r2, [r6, #0]
 8001300:	1c75      	adds	r5, r6, #1
 8001302:	3a30      	subs	r2, #48	@ 0x30
 8001304:	2a09      	cmp	r2, #9
 8001306:	d950      	bls.n	80013aa <_vfiprintf_r+0x1aa>
 8001308:	2900      	cmp	r1, #0
 800130a:	d111      	bne.n	8001330 <_vfiprintf_r+0x130>
 800130c:	e017      	b.n	800133e <_vfiprintf_r+0x13e>
 800130e:	3601      	adds	r6, #1
 8001310:	e7af      	b.n	8001272 <_vfiprintf_r+0x72>
 8001312:	9b05      	ldr	r3, [sp, #20]
 8001314:	6822      	ldr	r2, [r4, #0]
 8001316:	1ac0      	subs	r0, r0, r3
 8001318:	2301      	movs	r3, #1
 800131a:	4083      	lsls	r3, r0
 800131c:	4313      	orrs	r3, r2
 800131e:	0035      	movs	r5, r6
 8001320:	6023      	str	r3, [r4, #0]
 8001322:	e7cc      	b.n	80012be <_vfiprintf_r+0xbe>
 8001324:	9b07      	ldr	r3, [sp, #28]
 8001326:	1d19      	adds	r1, r3, #4
 8001328:	681b      	ldr	r3, [r3, #0]
 800132a:	9107      	str	r1, [sp, #28]
 800132c:	2b00      	cmp	r3, #0
 800132e:	db01      	blt.n	8001334 <_vfiprintf_r+0x134>
 8001330:	930b      	str	r3, [sp, #44]	@ 0x2c
 8001332:	e004      	b.n	800133e <_vfiprintf_r+0x13e>
 8001334:	425b      	negs	r3, r3
 8001336:	60e3      	str	r3, [r4, #12]
 8001338:	2302      	movs	r3, #2
 800133a:	4313      	orrs	r3, r2
 800133c:	6023      	str	r3, [r4, #0]
 800133e:	7833      	ldrb	r3, [r6, #0]
 8001340:	2b2e      	cmp	r3, #46	@ 0x2e
 8001342:	d10c      	bne.n	800135e <_vfiprintf_r+0x15e>
 8001344:	7873      	ldrb	r3, [r6, #1]
 8001346:	2b2a      	cmp	r3, #42	@ 0x2a
 8001348:	d134      	bne.n	80013b4 <_vfiprintf_r+0x1b4>
 800134a:	9b07      	ldr	r3, [sp, #28]
 800134c:	3602      	adds	r6, #2
 800134e:	1d1a      	adds	r2, r3, #4
 8001350:	681b      	ldr	r3, [r3, #0]
 8001352:	9207      	str	r2, [sp, #28]
 8001354:	2b00      	cmp	r3, #0
 8001356:	da01      	bge.n	800135c <_vfiprintf_r+0x15c>
 8001358:	2301      	movs	r3, #1
 800135a:	425b      	negs	r3, r3
 800135c:	9309      	str	r3, [sp, #36]	@ 0x24
 800135e:	4d32      	ldr	r5, [pc, #200]	@ (8001428 <_vfiprintf_r+0x228>)
 8001360:	2203      	movs	r2, #3
 8001362:	0028      	movs	r0, r5
 8001364:	7831      	ldrb	r1, [r6, #0]
 8001366:	f000 fb39 	bl	80019dc <memchr>
 800136a:	2800      	cmp	r0, #0
 800136c:	d006      	beq.n	800137c <_vfiprintf_r+0x17c>
 800136e:	2340      	movs	r3, #64	@ 0x40
 8001370:	1b40      	subs	r0, r0, r5
 8001372:	4083      	lsls	r3, r0
 8001374:	6822      	ldr	r2, [r4, #0]
 8001376:	3601      	adds	r6, #1
 8001378:	4313      	orrs	r3, r2
 800137a:	6023      	str	r3, [r4, #0]
 800137c:	7831      	ldrb	r1, [r6, #0]
 800137e:	2206      	movs	r2, #6
 8001380:	482a      	ldr	r0, [pc, #168]	@ (800142c <_vfiprintf_r+0x22c>)
 8001382:	1c75      	adds	r5, r6, #1
 8001384:	7621      	strb	r1, [r4, #24]
 8001386:	f000 fb29 	bl	80019dc <memchr>
 800138a:	2800      	cmp	r0, #0
 800138c:	d040      	beq.n	8001410 <_vfiprintf_r+0x210>
 800138e:	4b28      	ldr	r3, [pc, #160]	@ (8001430 <_vfiprintf_r+0x230>)
 8001390:	2b00      	cmp	r3, #0
 8001392:	d122      	bne.n	80013da <_vfiprintf_r+0x1da>
 8001394:	2207      	movs	r2, #7
 8001396:	9b07      	ldr	r3, [sp, #28]
 8001398:	3307      	adds	r3, #7
 800139a:	4393      	bics	r3, r2
 800139c:	3308      	adds	r3, #8
 800139e:	9307      	str	r3, [sp, #28]
 80013a0:	6963      	ldr	r3, [r4, #20]
 80013a2:	9a04      	ldr	r2, [sp, #16]
 80013a4:	189b      	adds	r3, r3, r2
 80013a6:	6163      	str	r3, [r4, #20]
 80013a8:	e762      	b.n	8001270 <_vfiprintf_r+0x70>
 80013aa:	4343      	muls	r3, r0
 80013ac:	002e      	movs	r6, r5
 80013ae:	2101      	movs	r1, #1
 80013b0:	189b      	adds	r3, r3, r2
 80013b2:	e7a4      	b.n	80012fe <_vfiprintf_r+0xfe>
 80013b4:	2300      	movs	r3, #0
 80013b6:	200a      	movs	r0, #10
 80013b8:	0019      	movs	r1, r3
 80013ba:	3601      	adds	r6, #1
 80013bc:	6063      	str	r3, [r4, #4]
 80013be:	7832      	ldrb	r2, [r6, #0]
 80013c0:	1c75      	adds	r5, r6, #1
 80013c2:	3a30      	subs	r2, #48	@ 0x30
 80013c4:	2a09      	cmp	r2, #9
 80013c6:	d903      	bls.n	80013d0 <_vfiprintf_r+0x1d0>
 80013c8:	2b00      	cmp	r3, #0
 80013ca:	d0c8      	beq.n	800135e <_vfiprintf_r+0x15e>
 80013cc:	9109      	str	r1, [sp, #36]	@ 0x24
 80013ce:	e7c6      	b.n	800135e <_vfiprintf_r+0x15e>
 80013d0:	4341      	muls	r1, r0
 80013d2:	002e      	movs	r6, r5
 80013d4:	2301      	movs	r3, #1
 80013d6:	1889      	adds	r1, r1, r2
 80013d8:	e7f1      	b.n	80013be <_vfiprintf_r+0x1be>
 80013da:	aa07      	add	r2, sp, #28
 80013dc:	9200      	str	r2, [sp, #0]
 80013de:	0021      	movs	r1, r4
 80013e0:	003a      	movs	r2, r7
 80013e2:	4b14      	ldr	r3, [pc, #80]	@ (8001434 <_vfiprintf_r+0x234>)
 80013e4:	9803      	ldr	r0, [sp, #12]
 80013e6:	e000      	b.n	80013ea <_vfiprintf_r+0x1ea>
 80013e8:	bf00      	nop
 80013ea:	9004      	str	r0, [sp, #16]
 80013ec:	9b04      	ldr	r3, [sp, #16]
 80013ee:	3301      	adds	r3, #1
 80013f0:	d1d6      	bne.n	80013a0 <_vfiprintf_r+0x1a0>
 80013f2:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80013f4:	07db      	lsls	r3, r3, #31
 80013f6:	d405      	bmi.n	8001404 <_vfiprintf_r+0x204>
 80013f8:	89bb      	ldrh	r3, [r7, #12]
 80013fa:	059b      	lsls	r3, r3, #22
 80013fc:	d402      	bmi.n	8001404 <_vfiprintf_r+0x204>
 80013fe:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8001400:	f7ff fdd8 	bl	8000fb4 <__retarget_lock_release_recursive>
 8001404:	89bb      	ldrh	r3, [r7, #12]
 8001406:	065b      	lsls	r3, r3, #25
 8001408:	d500      	bpl.n	800140c <_vfiprintf_r+0x20c>
 800140a:	e71e      	b.n	800124a <_vfiprintf_r+0x4a>
 800140c:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800140e:	e71e      	b.n	800124e <_vfiprintf_r+0x4e>
 8001410:	aa07      	add	r2, sp, #28
 8001412:	9200      	str	r2, [sp, #0]
 8001414:	0021      	movs	r1, r4
 8001416:	003a      	movs	r2, r7
 8001418:	4b06      	ldr	r3, [pc, #24]	@ (8001434 <_vfiprintf_r+0x234>)
 800141a:	9803      	ldr	r0, [sp, #12]
 800141c:	f000 f87c 	bl	8001518 <_printf_i>
 8001420:	e7e3      	b.n	80013ea <_vfiprintf_r+0x1ea>
 8001422:	46c0      	nop			@ (mov r8, r8)
 8001424:	08001a98 	.word	0x08001a98
 8001428:	08001a9e 	.word	0x08001a9e
 800142c:	08001aa2 	.word	0x08001aa2
 8001430:	00000000 	.word	0x00000000
 8001434:	080011db 	.word	0x080011db

08001438 <_printf_common>:
 8001438:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800143a:	0016      	movs	r6, r2
 800143c:	9301      	str	r3, [sp, #4]
 800143e:	688a      	ldr	r2, [r1, #8]
 8001440:	690b      	ldr	r3, [r1, #16]
 8001442:	000c      	movs	r4, r1
 8001444:	9000      	str	r0, [sp, #0]
 8001446:	4293      	cmp	r3, r2
 8001448:	da00      	bge.n	800144c <_printf_common+0x14>
 800144a:	0013      	movs	r3, r2
 800144c:	0022      	movs	r2, r4
 800144e:	6033      	str	r3, [r6, #0]
 8001450:	3243      	adds	r2, #67	@ 0x43
 8001452:	7812      	ldrb	r2, [r2, #0]
 8001454:	2a00      	cmp	r2, #0
 8001456:	d001      	beq.n	800145c <_printf_common+0x24>
 8001458:	3301      	adds	r3, #1
 800145a:	6033      	str	r3, [r6, #0]
 800145c:	6823      	ldr	r3, [r4, #0]
 800145e:	069b      	lsls	r3, r3, #26
 8001460:	d502      	bpl.n	8001468 <_printf_common+0x30>
 8001462:	6833      	ldr	r3, [r6, #0]
 8001464:	3302      	adds	r3, #2
 8001466:	6033      	str	r3, [r6, #0]
 8001468:	6822      	ldr	r2, [r4, #0]
 800146a:	2306      	movs	r3, #6
 800146c:	0015      	movs	r5, r2
 800146e:	401d      	ands	r5, r3
 8001470:	421a      	tst	r2, r3
 8001472:	d027      	beq.n	80014c4 <_printf_common+0x8c>
 8001474:	0023      	movs	r3, r4
 8001476:	3343      	adds	r3, #67	@ 0x43
 8001478:	781b      	ldrb	r3, [r3, #0]
 800147a:	1e5a      	subs	r2, r3, #1
 800147c:	4193      	sbcs	r3, r2
 800147e:	6822      	ldr	r2, [r4, #0]
 8001480:	0692      	lsls	r2, r2, #26
 8001482:	d430      	bmi.n	80014e6 <_printf_common+0xae>
 8001484:	0022      	movs	r2, r4
 8001486:	9901      	ldr	r1, [sp, #4]
 8001488:	9800      	ldr	r0, [sp, #0]
 800148a:	9d08      	ldr	r5, [sp, #32]
 800148c:	3243      	adds	r2, #67	@ 0x43
 800148e:	47a8      	blx	r5
 8001490:	3001      	adds	r0, #1
 8001492:	d025      	beq.n	80014e0 <_printf_common+0xa8>
 8001494:	2206      	movs	r2, #6
 8001496:	6823      	ldr	r3, [r4, #0]
 8001498:	2500      	movs	r5, #0
 800149a:	4013      	ands	r3, r2
 800149c:	2b04      	cmp	r3, #4
 800149e:	d105      	bne.n	80014ac <_printf_common+0x74>
 80014a0:	6833      	ldr	r3, [r6, #0]
 80014a2:	68e5      	ldr	r5, [r4, #12]
 80014a4:	1aed      	subs	r5, r5, r3
 80014a6:	43eb      	mvns	r3, r5
 80014a8:	17db      	asrs	r3, r3, #31
 80014aa:	401d      	ands	r5, r3
 80014ac:	68a3      	ldr	r3, [r4, #8]
 80014ae:	6922      	ldr	r2, [r4, #16]
 80014b0:	4293      	cmp	r3, r2
 80014b2:	dd01      	ble.n	80014b8 <_printf_common+0x80>
 80014b4:	1a9b      	subs	r3, r3, r2
 80014b6:	18ed      	adds	r5, r5, r3
 80014b8:	2600      	movs	r6, #0
 80014ba:	42b5      	cmp	r5, r6
 80014bc:	d120      	bne.n	8001500 <_printf_common+0xc8>
 80014be:	2000      	movs	r0, #0
 80014c0:	e010      	b.n	80014e4 <_printf_common+0xac>
 80014c2:	3501      	adds	r5, #1
 80014c4:	68e3      	ldr	r3, [r4, #12]
 80014c6:	6832      	ldr	r2, [r6, #0]
 80014c8:	1a9b      	subs	r3, r3, r2
 80014ca:	42ab      	cmp	r3, r5
 80014cc:	ddd2      	ble.n	8001474 <_printf_common+0x3c>
 80014ce:	0022      	movs	r2, r4
 80014d0:	2301      	movs	r3, #1
 80014d2:	9901      	ldr	r1, [sp, #4]
 80014d4:	9800      	ldr	r0, [sp, #0]
 80014d6:	9f08      	ldr	r7, [sp, #32]
 80014d8:	3219      	adds	r2, #25
 80014da:	47b8      	blx	r7
 80014dc:	3001      	adds	r0, #1
 80014de:	d1f0      	bne.n	80014c2 <_printf_common+0x8a>
 80014e0:	2001      	movs	r0, #1
 80014e2:	4240      	negs	r0, r0
 80014e4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80014e6:	2030      	movs	r0, #48	@ 0x30
 80014e8:	18e1      	adds	r1, r4, r3
 80014ea:	3143      	adds	r1, #67	@ 0x43
 80014ec:	7008      	strb	r0, [r1, #0]
 80014ee:	0021      	movs	r1, r4
 80014f0:	1c5a      	adds	r2, r3, #1
 80014f2:	3145      	adds	r1, #69	@ 0x45
 80014f4:	7809      	ldrb	r1, [r1, #0]
 80014f6:	18a2      	adds	r2, r4, r2
 80014f8:	3243      	adds	r2, #67	@ 0x43
 80014fa:	3302      	adds	r3, #2
 80014fc:	7011      	strb	r1, [r2, #0]
 80014fe:	e7c1      	b.n	8001484 <_printf_common+0x4c>
 8001500:	0022      	movs	r2, r4
 8001502:	2301      	movs	r3, #1
 8001504:	9901      	ldr	r1, [sp, #4]
 8001506:	9800      	ldr	r0, [sp, #0]
 8001508:	9f08      	ldr	r7, [sp, #32]
 800150a:	321a      	adds	r2, #26
 800150c:	47b8      	blx	r7
 800150e:	3001      	adds	r0, #1
 8001510:	d0e6      	beq.n	80014e0 <_printf_common+0xa8>
 8001512:	3601      	adds	r6, #1
 8001514:	e7d1      	b.n	80014ba <_printf_common+0x82>
	...

08001518 <_printf_i>:
 8001518:	b5f0      	push	{r4, r5, r6, r7, lr}
 800151a:	b08b      	sub	sp, #44	@ 0x2c
 800151c:	9206      	str	r2, [sp, #24]
 800151e:	000a      	movs	r2, r1
 8001520:	3243      	adds	r2, #67	@ 0x43
 8001522:	9307      	str	r3, [sp, #28]
 8001524:	9005      	str	r0, [sp, #20]
 8001526:	9203      	str	r2, [sp, #12]
 8001528:	7e0a      	ldrb	r2, [r1, #24]
 800152a:	000c      	movs	r4, r1
 800152c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 800152e:	2a78      	cmp	r2, #120	@ 0x78
 8001530:	d809      	bhi.n	8001546 <_printf_i+0x2e>
 8001532:	2a62      	cmp	r2, #98	@ 0x62
 8001534:	d80b      	bhi.n	800154e <_printf_i+0x36>
 8001536:	2a00      	cmp	r2, #0
 8001538:	d100      	bne.n	800153c <_printf_i+0x24>
 800153a:	e0bc      	b.n	80016b6 <_printf_i+0x19e>
 800153c:	497b      	ldr	r1, [pc, #492]	@ (800172c <_printf_i+0x214>)
 800153e:	9104      	str	r1, [sp, #16]
 8001540:	2a58      	cmp	r2, #88	@ 0x58
 8001542:	d100      	bne.n	8001546 <_printf_i+0x2e>
 8001544:	e090      	b.n	8001668 <_printf_i+0x150>
 8001546:	0025      	movs	r5, r4
 8001548:	3542      	adds	r5, #66	@ 0x42
 800154a:	702a      	strb	r2, [r5, #0]
 800154c:	e022      	b.n	8001594 <_printf_i+0x7c>
 800154e:	0010      	movs	r0, r2
 8001550:	3863      	subs	r0, #99	@ 0x63
 8001552:	2815      	cmp	r0, #21
 8001554:	d8f7      	bhi.n	8001546 <_printf_i+0x2e>
 8001556:	f7fe fdd7 	bl	8000108 <__gnu_thumb1_case_shi>
 800155a:	0016      	.short	0x0016
 800155c:	fff6001f 	.word	0xfff6001f
 8001560:	fff6fff6 	.word	0xfff6fff6
 8001564:	001ffff6 	.word	0x001ffff6
 8001568:	fff6fff6 	.word	0xfff6fff6
 800156c:	fff6fff6 	.word	0xfff6fff6
 8001570:	003600a1 	.word	0x003600a1
 8001574:	fff60080 	.word	0xfff60080
 8001578:	00b2fff6 	.word	0x00b2fff6
 800157c:	0036fff6 	.word	0x0036fff6
 8001580:	fff6fff6 	.word	0xfff6fff6
 8001584:	0084      	.short	0x0084
 8001586:	0025      	movs	r5, r4
 8001588:	681a      	ldr	r2, [r3, #0]
 800158a:	3542      	adds	r5, #66	@ 0x42
 800158c:	1d11      	adds	r1, r2, #4
 800158e:	6019      	str	r1, [r3, #0]
 8001590:	6813      	ldr	r3, [r2, #0]
 8001592:	702b      	strb	r3, [r5, #0]
 8001594:	2301      	movs	r3, #1
 8001596:	e0a0      	b.n	80016da <_printf_i+0x1c2>
 8001598:	6818      	ldr	r0, [r3, #0]
 800159a:	6809      	ldr	r1, [r1, #0]
 800159c:	1d02      	adds	r2, r0, #4
 800159e:	060d      	lsls	r5, r1, #24
 80015a0:	d50b      	bpl.n	80015ba <_printf_i+0xa2>
 80015a2:	6806      	ldr	r6, [r0, #0]
 80015a4:	601a      	str	r2, [r3, #0]
 80015a6:	2e00      	cmp	r6, #0
 80015a8:	da03      	bge.n	80015b2 <_printf_i+0x9a>
 80015aa:	232d      	movs	r3, #45	@ 0x2d
 80015ac:	9a03      	ldr	r2, [sp, #12]
 80015ae:	4276      	negs	r6, r6
 80015b0:	7013      	strb	r3, [r2, #0]
 80015b2:	4b5e      	ldr	r3, [pc, #376]	@ (800172c <_printf_i+0x214>)
 80015b4:	270a      	movs	r7, #10
 80015b6:	9304      	str	r3, [sp, #16]
 80015b8:	e018      	b.n	80015ec <_printf_i+0xd4>
 80015ba:	6806      	ldr	r6, [r0, #0]
 80015bc:	601a      	str	r2, [r3, #0]
 80015be:	0649      	lsls	r1, r1, #25
 80015c0:	d5f1      	bpl.n	80015a6 <_printf_i+0x8e>
 80015c2:	b236      	sxth	r6, r6
 80015c4:	e7ef      	b.n	80015a6 <_printf_i+0x8e>
 80015c6:	6808      	ldr	r0, [r1, #0]
 80015c8:	6819      	ldr	r1, [r3, #0]
 80015ca:	c940      	ldmia	r1!, {r6}
 80015cc:	0605      	lsls	r5, r0, #24
 80015ce:	d402      	bmi.n	80015d6 <_printf_i+0xbe>
 80015d0:	0640      	lsls	r0, r0, #25
 80015d2:	d500      	bpl.n	80015d6 <_printf_i+0xbe>
 80015d4:	b2b6      	uxth	r6, r6
 80015d6:	6019      	str	r1, [r3, #0]
 80015d8:	4b54      	ldr	r3, [pc, #336]	@ (800172c <_printf_i+0x214>)
 80015da:	270a      	movs	r7, #10
 80015dc:	9304      	str	r3, [sp, #16]
 80015de:	2a6f      	cmp	r2, #111	@ 0x6f
 80015e0:	d100      	bne.n	80015e4 <_printf_i+0xcc>
 80015e2:	3f02      	subs	r7, #2
 80015e4:	0023      	movs	r3, r4
 80015e6:	2200      	movs	r2, #0
 80015e8:	3343      	adds	r3, #67	@ 0x43
 80015ea:	701a      	strb	r2, [r3, #0]
 80015ec:	6863      	ldr	r3, [r4, #4]
 80015ee:	60a3      	str	r3, [r4, #8]
 80015f0:	2b00      	cmp	r3, #0
 80015f2:	db03      	blt.n	80015fc <_printf_i+0xe4>
 80015f4:	2104      	movs	r1, #4
 80015f6:	6822      	ldr	r2, [r4, #0]
 80015f8:	438a      	bics	r2, r1
 80015fa:	6022      	str	r2, [r4, #0]
 80015fc:	2e00      	cmp	r6, #0
 80015fe:	d102      	bne.n	8001606 <_printf_i+0xee>
 8001600:	9d03      	ldr	r5, [sp, #12]
 8001602:	2b00      	cmp	r3, #0
 8001604:	d00c      	beq.n	8001620 <_printf_i+0x108>
 8001606:	9d03      	ldr	r5, [sp, #12]
 8001608:	0030      	movs	r0, r6
 800160a:	0039      	movs	r1, r7
 800160c:	f7fe fe0c 	bl	8000228 <__aeabi_uidivmod>
 8001610:	9b04      	ldr	r3, [sp, #16]
 8001612:	3d01      	subs	r5, #1
 8001614:	5c5b      	ldrb	r3, [r3, r1]
 8001616:	702b      	strb	r3, [r5, #0]
 8001618:	0033      	movs	r3, r6
 800161a:	0006      	movs	r6, r0
 800161c:	429f      	cmp	r7, r3
 800161e:	d9f3      	bls.n	8001608 <_printf_i+0xf0>
 8001620:	2f08      	cmp	r7, #8
 8001622:	d109      	bne.n	8001638 <_printf_i+0x120>
 8001624:	6823      	ldr	r3, [r4, #0]
 8001626:	07db      	lsls	r3, r3, #31
 8001628:	d506      	bpl.n	8001638 <_printf_i+0x120>
 800162a:	6862      	ldr	r2, [r4, #4]
 800162c:	6923      	ldr	r3, [r4, #16]
 800162e:	429a      	cmp	r2, r3
 8001630:	dc02      	bgt.n	8001638 <_printf_i+0x120>
 8001632:	2330      	movs	r3, #48	@ 0x30
 8001634:	3d01      	subs	r5, #1
 8001636:	702b      	strb	r3, [r5, #0]
 8001638:	9b03      	ldr	r3, [sp, #12]
 800163a:	1b5b      	subs	r3, r3, r5
 800163c:	6123      	str	r3, [r4, #16]
 800163e:	9b07      	ldr	r3, [sp, #28]
 8001640:	0021      	movs	r1, r4
 8001642:	9300      	str	r3, [sp, #0]
 8001644:	9805      	ldr	r0, [sp, #20]
 8001646:	9b06      	ldr	r3, [sp, #24]
 8001648:	aa09      	add	r2, sp, #36	@ 0x24
 800164a:	f7ff fef5 	bl	8001438 <_printf_common>
 800164e:	3001      	adds	r0, #1
 8001650:	d148      	bne.n	80016e4 <_printf_i+0x1cc>
 8001652:	2001      	movs	r0, #1
 8001654:	4240      	negs	r0, r0
 8001656:	b00b      	add	sp, #44	@ 0x2c
 8001658:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800165a:	2220      	movs	r2, #32
 800165c:	6809      	ldr	r1, [r1, #0]
 800165e:	430a      	orrs	r2, r1
 8001660:	6022      	str	r2, [r4, #0]
 8001662:	2278      	movs	r2, #120	@ 0x78
 8001664:	4932      	ldr	r1, [pc, #200]	@ (8001730 <_printf_i+0x218>)
 8001666:	9104      	str	r1, [sp, #16]
 8001668:	0021      	movs	r1, r4
 800166a:	3145      	adds	r1, #69	@ 0x45
 800166c:	700a      	strb	r2, [r1, #0]
 800166e:	6819      	ldr	r1, [r3, #0]
 8001670:	6822      	ldr	r2, [r4, #0]
 8001672:	c940      	ldmia	r1!, {r6}
 8001674:	0610      	lsls	r0, r2, #24
 8001676:	d402      	bmi.n	800167e <_printf_i+0x166>
 8001678:	0650      	lsls	r0, r2, #25
 800167a:	d500      	bpl.n	800167e <_printf_i+0x166>
 800167c:	b2b6      	uxth	r6, r6
 800167e:	6019      	str	r1, [r3, #0]
 8001680:	07d3      	lsls	r3, r2, #31
 8001682:	d502      	bpl.n	800168a <_printf_i+0x172>
 8001684:	2320      	movs	r3, #32
 8001686:	4313      	orrs	r3, r2
 8001688:	6023      	str	r3, [r4, #0]
 800168a:	2e00      	cmp	r6, #0
 800168c:	d001      	beq.n	8001692 <_printf_i+0x17a>
 800168e:	2710      	movs	r7, #16
 8001690:	e7a8      	b.n	80015e4 <_printf_i+0xcc>
 8001692:	2220      	movs	r2, #32
 8001694:	6823      	ldr	r3, [r4, #0]
 8001696:	4393      	bics	r3, r2
 8001698:	6023      	str	r3, [r4, #0]
 800169a:	e7f8      	b.n	800168e <_printf_i+0x176>
 800169c:	681a      	ldr	r2, [r3, #0]
 800169e:	680d      	ldr	r5, [r1, #0]
 80016a0:	1d10      	adds	r0, r2, #4
 80016a2:	6949      	ldr	r1, [r1, #20]
 80016a4:	6018      	str	r0, [r3, #0]
 80016a6:	6813      	ldr	r3, [r2, #0]
 80016a8:	062e      	lsls	r6, r5, #24
 80016aa:	d501      	bpl.n	80016b0 <_printf_i+0x198>
 80016ac:	6019      	str	r1, [r3, #0]
 80016ae:	e002      	b.n	80016b6 <_printf_i+0x19e>
 80016b0:	066d      	lsls	r5, r5, #25
 80016b2:	d5fb      	bpl.n	80016ac <_printf_i+0x194>
 80016b4:	8019      	strh	r1, [r3, #0]
 80016b6:	2300      	movs	r3, #0
 80016b8:	9d03      	ldr	r5, [sp, #12]
 80016ba:	6123      	str	r3, [r4, #16]
 80016bc:	e7bf      	b.n	800163e <_printf_i+0x126>
 80016be:	681a      	ldr	r2, [r3, #0]
 80016c0:	1d11      	adds	r1, r2, #4
 80016c2:	6019      	str	r1, [r3, #0]
 80016c4:	6815      	ldr	r5, [r2, #0]
 80016c6:	2100      	movs	r1, #0
 80016c8:	0028      	movs	r0, r5
 80016ca:	6862      	ldr	r2, [r4, #4]
 80016cc:	f000 f986 	bl	80019dc <memchr>
 80016d0:	2800      	cmp	r0, #0
 80016d2:	d001      	beq.n	80016d8 <_printf_i+0x1c0>
 80016d4:	1b40      	subs	r0, r0, r5
 80016d6:	6060      	str	r0, [r4, #4]
 80016d8:	6863      	ldr	r3, [r4, #4]
 80016da:	6123      	str	r3, [r4, #16]
 80016dc:	2300      	movs	r3, #0
 80016de:	9a03      	ldr	r2, [sp, #12]
 80016e0:	7013      	strb	r3, [r2, #0]
 80016e2:	e7ac      	b.n	800163e <_printf_i+0x126>
 80016e4:	002a      	movs	r2, r5
 80016e6:	6923      	ldr	r3, [r4, #16]
 80016e8:	9906      	ldr	r1, [sp, #24]
 80016ea:	9805      	ldr	r0, [sp, #20]
 80016ec:	9d07      	ldr	r5, [sp, #28]
 80016ee:	47a8      	blx	r5
 80016f0:	3001      	adds	r0, #1
 80016f2:	d0ae      	beq.n	8001652 <_printf_i+0x13a>
 80016f4:	6823      	ldr	r3, [r4, #0]
 80016f6:	079b      	lsls	r3, r3, #30
 80016f8:	d415      	bmi.n	8001726 <_printf_i+0x20e>
 80016fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80016fc:	68e0      	ldr	r0, [r4, #12]
 80016fe:	4298      	cmp	r0, r3
 8001700:	daa9      	bge.n	8001656 <_printf_i+0x13e>
 8001702:	0018      	movs	r0, r3
 8001704:	e7a7      	b.n	8001656 <_printf_i+0x13e>
 8001706:	0022      	movs	r2, r4
 8001708:	2301      	movs	r3, #1
 800170a:	9906      	ldr	r1, [sp, #24]
 800170c:	9805      	ldr	r0, [sp, #20]
 800170e:	9e07      	ldr	r6, [sp, #28]
 8001710:	3219      	adds	r2, #25
 8001712:	47b0      	blx	r6
 8001714:	3001      	adds	r0, #1
 8001716:	d09c      	beq.n	8001652 <_printf_i+0x13a>
 8001718:	3501      	adds	r5, #1
 800171a:	68e3      	ldr	r3, [r4, #12]
 800171c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 800171e:	1a9b      	subs	r3, r3, r2
 8001720:	42ab      	cmp	r3, r5
 8001722:	dcf0      	bgt.n	8001706 <_printf_i+0x1ee>
 8001724:	e7e9      	b.n	80016fa <_printf_i+0x1e2>
 8001726:	2500      	movs	r5, #0
 8001728:	e7f7      	b.n	800171a <_printf_i+0x202>
 800172a:	46c0      	nop			@ (mov r8, r8)
 800172c:	08001aa9 	.word	0x08001aa9
 8001730:	08001aba 	.word	0x08001aba

08001734 <__sflush_r>:
 8001734:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001736:	220c      	movs	r2, #12
 8001738:	5e8b      	ldrsh	r3, [r1, r2]
 800173a:	0005      	movs	r5, r0
 800173c:	000c      	movs	r4, r1
 800173e:	071a      	lsls	r2, r3, #28
 8001740:	d456      	bmi.n	80017f0 <__sflush_r+0xbc>
 8001742:	684a      	ldr	r2, [r1, #4]
 8001744:	2a00      	cmp	r2, #0
 8001746:	dc02      	bgt.n	800174e <__sflush_r+0x1a>
 8001748:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 800174a:	2a00      	cmp	r2, #0
 800174c:	dd4e      	ble.n	80017ec <__sflush_r+0xb8>
 800174e:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001750:	2f00      	cmp	r7, #0
 8001752:	d04b      	beq.n	80017ec <__sflush_r+0xb8>
 8001754:	2200      	movs	r2, #0
 8001756:	2080      	movs	r0, #128	@ 0x80
 8001758:	682e      	ldr	r6, [r5, #0]
 800175a:	602a      	str	r2, [r5, #0]
 800175c:	001a      	movs	r2, r3
 800175e:	0140      	lsls	r0, r0, #5
 8001760:	6a21      	ldr	r1, [r4, #32]
 8001762:	4002      	ands	r2, r0
 8001764:	4203      	tst	r3, r0
 8001766:	d033      	beq.n	80017d0 <__sflush_r+0x9c>
 8001768:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800176a:	89a3      	ldrh	r3, [r4, #12]
 800176c:	075b      	lsls	r3, r3, #29
 800176e:	d506      	bpl.n	800177e <__sflush_r+0x4a>
 8001770:	6863      	ldr	r3, [r4, #4]
 8001772:	1ad2      	subs	r2, r2, r3
 8001774:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001776:	2b00      	cmp	r3, #0
 8001778:	d001      	beq.n	800177e <__sflush_r+0x4a>
 800177a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800177c:	1ad2      	subs	r2, r2, r3
 800177e:	2300      	movs	r3, #0
 8001780:	0028      	movs	r0, r5
 8001782:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8001784:	6a21      	ldr	r1, [r4, #32]
 8001786:	47b8      	blx	r7
 8001788:	89a2      	ldrh	r2, [r4, #12]
 800178a:	1c43      	adds	r3, r0, #1
 800178c:	d106      	bne.n	800179c <__sflush_r+0x68>
 800178e:	6829      	ldr	r1, [r5, #0]
 8001790:	291d      	cmp	r1, #29
 8001792:	d846      	bhi.n	8001822 <__sflush_r+0xee>
 8001794:	4b29      	ldr	r3, [pc, #164]	@ (800183c <__sflush_r+0x108>)
 8001796:	410b      	asrs	r3, r1
 8001798:	07db      	lsls	r3, r3, #31
 800179a:	d442      	bmi.n	8001822 <__sflush_r+0xee>
 800179c:	2300      	movs	r3, #0
 800179e:	6063      	str	r3, [r4, #4]
 80017a0:	6923      	ldr	r3, [r4, #16]
 80017a2:	6023      	str	r3, [r4, #0]
 80017a4:	04d2      	lsls	r2, r2, #19
 80017a6:	d505      	bpl.n	80017b4 <__sflush_r+0x80>
 80017a8:	1c43      	adds	r3, r0, #1
 80017aa:	d102      	bne.n	80017b2 <__sflush_r+0x7e>
 80017ac:	682b      	ldr	r3, [r5, #0]
 80017ae:	2b00      	cmp	r3, #0
 80017b0:	d100      	bne.n	80017b4 <__sflush_r+0x80>
 80017b2:	6560      	str	r0, [r4, #84]	@ 0x54
 80017b4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80017b6:	602e      	str	r6, [r5, #0]
 80017b8:	2900      	cmp	r1, #0
 80017ba:	d017      	beq.n	80017ec <__sflush_r+0xb8>
 80017bc:	0023      	movs	r3, r4
 80017be:	3344      	adds	r3, #68	@ 0x44
 80017c0:	4299      	cmp	r1, r3
 80017c2:	d002      	beq.n	80017ca <__sflush_r+0x96>
 80017c4:	0028      	movs	r0, r5
 80017c6:	f7ff fbf7 	bl	8000fb8 <_free_r>
 80017ca:	2300      	movs	r3, #0
 80017cc:	6363      	str	r3, [r4, #52]	@ 0x34
 80017ce:	e00d      	b.n	80017ec <__sflush_r+0xb8>
 80017d0:	2301      	movs	r3, #1
 80017d2:	0028      	movs	r0, r5
 80017d4:	47b8      	blx	r7
 80017d6:	0002      	movs	r2, r0
 80017d8:	1c43      	adds	r3, r0, #1
 80017da:	d1c6      	bne.n	800176a <__sflush_r+0x36>
 80017dc:	682b      	ldr	r3, [r5, #0]
 80017de:	2b00      	cmp	r3, #0
 80017e0:	d0c3      	beq.n	800176a <__sflush_r+0x36>
 80017e2:	2b1d      	cmp	r3, #29
 80017e4:	d001      	beq.n	80017ea <__sflush_r+0xb6>
 80017e6:	2b16      	cmp	r3, #22
 80017e8:	d11a      	bne.n	8001820 <__sflush_r+0xec>
 80017ea:	602e      	str	r6, [r5, #0]
 80017ec:	2000      	movs	r0, #0
 80017ee:	e01e      	b.n	800182e <__sflush_r+0xfa>
 80017f0:	690e      	ldr	r6, [r1, #16]
 80017f2:	2e00      	cmp	r6, #0
 80017f4:	d0fa      	beq.n	80017ec <__sflush_r+0xb8>
 80017f6:	680f      	ldr	r7, [r1, #0]
 80017f8:	600e      	str	r6, [r1, #0]
 80017fa:	1bba      	subs	r2, r7, r6
 80017fc:	9201      	str	r2, [sp, #4]
 80017fe:	2200      	movs	r2, #0
 8001800:	079b      	lsls	r3, r3, #30
 8001802:	d100      	bne.n	8001806 <__sflush_r+0xd2>
 8001804:	694a      	ldr	r2, [r1, #20]
 8001806:	60a2      	str	r2, [r4, #8]
 8001808:	9b01      	ldr	r3, [sp, #4]
 800180a:	2b00      	cmp	r3, #0
 800180c:	ddee      	ble.n	80017ec <__sflush_r+0xb8>
 800180e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8001810:	0032      	movs	r2, r6
 8001812:	001f      	movs	r7, r3
 8001814:	0028      	movs	r0, r5
 8001816:	9b01      	ldr	r3, [sp, #4]
 8001818:	6a21      	ldr	r1, [r4, #32]
 800181a:	47b8      	blx	r7
 800181c:	2800      	cmp	r0, #0
 800181e:	dc07      	bgt.n	8001830 <__sflush_r+0xfc>
 8001820:	89a2      	ldrh	r2, [r4, #12]
 8001822:	2340      	movs	r3, #64	@ 0x40
 8001824:	2001      	movs	r0, #1
 8001826:	4313      	orrs	r3, r2
 8001828:	b21b      	sxth	r3, r3
 800182a:	81a3      	strh	r3, [r4, #12]
 800182c:	4240      	negs	r0, r0
 800182e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001830:	9b01      	ldr	r3, [sp, #4]
 8001832:	1836      	adds	r6, r6, r0
 8001834:	1a1b      	subs	r3, r3, r0
 8001836:	9301      	str	r3, [sp, #4]
 8001838:	e7e6      	b.n	8001808 <__sflush_r+0xd4>
 800183a:	46c0      	nop			@ (mov r8, r8)
 800183c:	dfbffffe 	.word	0xdfbffffe

08001840 <_fflush_r>:
 8001840:	690b      	ldr	r3, [r1, #16]
 8001842:	b570      	push	{r4, r5, r6, lr}
 8001844:	0005      	movs	r5, r0
 8001846:	000c      	movs	r4, r1
 8001848:	2b00      	cmp	r3, #0
 800184a:	d102      	bne.n	8001852 <_fflush_r+0x12>
 800184c:	2500      	movs	r5, #0
 800184e:	0028      	movs	r0, r5
 8001850:	bd70      	pop	{r4, r5, r6, pc}
 8001852:	2800      	cmp	r0, #0
 8001854:	d004      	beq.n	8001860 <_fflush_r+0x20>
 8001856:	6a03      	ldr	r3, [r0, #32]
 8001858:	2b00      	cmp	r3, #0
 800185a:	d101      	bne.n	8001860 <_fflush_r+0x20>
 800185c:	f7ff f998 	bl	8000b90 <__sinit>
 8001860:	220c      	movs	r2, #12
 8001862:	5ea3      	ldrsh	r3, [r4, r2]
 8001864:	2b00      	cmp	r3, #0
 8001866:	d0f1      	beq.n	800184c <_fflush_r+0xc>
 8001868:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 800186a:	07d2      	lsls	r2, r2, #31
 800186c:	d404      	bmi.n	8001878 <_fflush_r+0x38>
 800186e:	059b      	lsls	r3, r3, #22
 8001870:	d402      	bmi.n	8001878 <_fflush_r+0x38>
 8001872:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001874:	f7ff fb9d 	bl	8000fb2 <__retarget_lock_acquire_recursive>
 8001878:	0028      	movs	r0, r5
 800187a:	0021      	movs	r1, r4
 800187c:	f7ff ff5a 	bl	8001734 <__sflush_r>
 8001880:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001882:	0005      	movs	r5, r0
 8001884:	07db      	lsls	r3, r3, #31
 8001886:	d4e2      	bmi.n	800184e <_fflush_r+0xe>
 8001888:	89a3      	ldrh	r3, [r4, #12]
 800188a:	059b      	lsls	r3, r3, #22
 800188c:	d4df      	bmi.n	800184e <_fflush_r+0xe>
 800188e:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001890:	f7ff fb90 	bl	8000fb4 <__retarget_lock_release_recursive>
 8001894:	e7db      	b.n	800184e <_fflush_r+0xe>
	...

08001898 <__swhatbuf_r>:
 8001898:	b570      	push	{r4, r5, r6, lr}
 800189a:	000e      	movs	r6, r1
 800189c:	001d      	movs	r5, r3
 800189e:	230e      	movs	r3, #14
 80018a0:	5ec9      	ldrsh	r1, [r1, r3]
 80018a2:	0014      	movs	r4, r2
 80018a4:	b096      	sub	sp, #88	@ 0x58
 80018a6:	2900      	cmp	r1, #0
 80018a8:	da0c      	bge.n	80018c4 <__swhatbuf_r+0x2c>
 80018aa:	89b2      	ldrh	r2, [r6, #12]
 80018ac:	2380      	movs	r3, #128	@ 0x80
 80018ae:	0011      	movs	r1, r2
 80018b0:	4019      	ands	r1, r3
 80018b2:	421a      	tst	r2, r3
 80018b4:	d114      	bne.n	80018e0 <__swhatbuf_r+0x48>
 80018b6:	2380      	movs	r3, #128	@ 0x80
 80018b8:	00db      	lsls	r3, r3, #3
 80018ba:	2000      	movs	r0, #0
 80018bc:	6029      	str	r1, [r5, #0]
 80018be:	6023      	str	r3, [r4, #0]
 80018c0:	b016      	add	sp, #88	@ 0x58
 80018c2:	bd70      	pop	{r4, r5, r6, pc}
 80018c4:	466a      	mov	r2, sp
 80018c6:	f000 f853 	bl	8001970 <_fstat_r>
 80018ca:	2800      	cmp	r0, #0
 80018cc:	dbed      	blt.n	80018aa <__swhatbuf_r+0x12>
 80018ce:	23f0      	movs	r3, #240	@ 0xf0
 80018d0:	9901      	ldr	r1, [sp, #4]
 80018d2:	021b      	lsls	r3, r3, #8
 80018d4:	4019      	ands	r1, r3
 80018d6:	4b04      	ldr	r3, [pc, #16]	@ (80018e8 <__swhatbuf_r+0x50>)
 80018d8:	18c9      	adds	r1, r1, r3
 80018da:	424b      	negs	r3, r1
 80018dc:	4159      	adcs	r1, r3
 80018de:	e7ea      	b.n	80018b6 <__swhatbuf_r+0x1e>
 80018e0:	2100      	movs	r1, #0
 80018e2:	2340      	movs	r3, #64	@ 0x40
 80018e4:	e7e9      	b.n	80018ba <__swhatbuf_r+0x22>
 80018e6:	46c0      	nop			@ (mov r8, r8)
 80018e8:	ffffe000 	.word	0xffffe000

080018ec <__smakebuf_r>:
 80018ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80018ee:	2602      	movs	r6, #2
 80018f0:	898b      	ldrh	r3, [r1, #12]
 80018f2:	0005      	movs	r5, r0
 80018f4:	000c      	movs	r4, r1
 80018f6:	b085      	sub	sp, #20
 80018f8:	4233      	tst	r3, r6
 80018fa:	d007      	beq.n	800190c <__smakebuf_r+0x20>
 80018fc:	0023      	movs	r3, r4
 80018fe:	3347      	adds	r3, #71	@ 0x47
 8001900:	6023      	str	r3, [r4, #0]
 8001902:	6123      	str	r3, [r4, #16]
 8001904:	2301      	movs	r3, #1
 8001906:	6163      	str	r3, [r4, #20]
 8001908:	b005      	add	sp, #20
 800190a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800190c:	ab03      	add	r3, sp, #12
 800190e:	aa02      	add	r2, sp, #8
 8001910:	f7ff ffc2 	bl	8001898 <__swhatbuf_r>
 8001914:	9f02      	ldr	r7, [sp, #8]
 8001916:	9001      	str	r0, [sp, #4]
 8001918:	0039      	movs	r1, r7
 800191a:	0028      	movs	r0, r5
 800191c:	f7ff fbb8 	bl	8001090 <_malloc_r>
 8001920:	2800      	cmp	r0, #0
 8001922:	d108      	bne.n	8001936 <__smakebuf_r+0x4a>
 8001924:	220c      	movs	r2, #12
 8001926:	5ea3      	ldrsh	r3, [r4, r2]
 8001928:	059a      	lsls	r2, r3, #22
 800192a:	d4ed      	bmi.n	8001908 <__smakebuf_r+0x1c>
 800192c:	2203      	movs	r2, #3
 800192e:	4393      	bics	r3, r2
 8001930:	431e      	orrs	r6, r3
 8001932:	81a6      	strh	r6, [r4, #12]
 8001934:	e7e2      	b.n	80018fc <__smakebuf_r+0x10>
 8001936:	2380      	movs	r3, #128	@ 0x80
 8001938:	89a2      	ldrh	r2, [r4, #12]
 800193a:	6020      	str	r0, [r4, #0]
 800193c:	4313      	orrs	r3, r2
 800193e:	81a3      	strh	r3, [r4, #12]
 8001940:	9b03      	ldr	r3, [sp, #12]
 8001942:	6120      	str	r0, [r4, #16]
 8001944:	6167      	str	r7, [r4, #20]
 8001946:	2b00      	cmp	r3, #0
 8001948:	d00c      	beq.n	8001964 <__smakebuf_r+0x78>
 800194a:	0028      	movs	r0, r5
 800194c:	230e      	movs	r3, #14
 800194e:	5ee1      	ldrsh	r1, [r4, r3]
 8001950:	f000 f820 	bl	8001994 <_isatty_r>
 8001954:	2800      	cmp	r0, #0
 8001956:	d005      	beq.n	8001964 <__smakebuf_r+0x78>
 8001958:	2303      	movs	r3, #3
 800195a:	89a2      	ldrh	r2, [r4, #12]
 800195c:	439a      	bics	r2, r3
 800195e:	3b02      	subs	r3, #2
 8001960:	4313      	orrs	r3, r2
 8001962:	81a3      	strh	r3, [r4, #12]
 8001964:	89a3      	ldrh	r3, [r4, #12]
 8001966:	9a01      	ldr	r2, [sp, #4]
 8001968:	4313      	orrs	r3, r2
 800196a:	81a3      	strh	r3, [r4, #12]
 800196c:	e7cc      	b.n	8001908 <__smakebuf_r+0x1c>
	...

08001970 <_fstat_r>:
 8001970:	2300      	movs	r3, #0
 8001972:	b570      	push	{r4, r5, r6, lr}
 8001974:	4d06      	ldr	r5, [pc, #24]	@ (8001990 <_fstat_r+0x20>)
 8001976:	0004      	movs	r4, r0
 8001978:	0008      	movs	r0, r1
 800197a:	0011      	movs	r1, r2
 800197c:	602b      	str	r3, [r5, #0]
 800197e:	f7fe fdae 	bl	80004de <_fstat>
 8001982:	1c43      	adds	r3, r0, #1
 8001984:	d103      	bne.n	800198e <_fstat_r+0x1e>
 8001986:	682b      	ldr	r3, [r5, #0]
 8001988:	2b00      	cmp	r3, #0
 800198a:	d000      	beq.n	800198e <_fstat_r+0x1e>
 800198c:	6023      	str	r3, [r4, #0]
 800198e:	bd70      	pop	{r4, r5, r6, pc}
 8001990:	200001bc 	.word	0x200001bc

08001994 <_isatty_r>:
 8001994:	2300      	movs	r3, #0
 8001996:	b570      	push	{r4, r5, r6, lr}
 8001998:	4d06      	ldr	r5, [pc, #24]	@ (80019b4 <_isatty_r+0x20>)
 800199a:	0004      	movs	r4, r0
 800199c:	0008      	movs	r0, r1
 800199e:	602b      	str	r3, [r5, #0]
 80019a0:	f7fe fdab 	bl	80004fa <_isatty>
 80019a4:	1c43      	adds	r3, r0, #1
 80019a6:	d103      	bne.n	80019b0 <_isatty_r+0x1c>
 80019a8:	682b      	ldr	r3, [r5, #0]
 80019aa:	2b00      	cmp	r3, #0
 80019ac:	d000      	beq.n	80019b0 <_isatty_r+0x1c>
 80019ae:	6023      	str	r3, [r4, #0]
 80019b0:	bd70      	pop	{r4, r5, r6, pc}
 80019b2:	46c0      	nop			@ (mov r8, r8)
 80019b4:	200001bc 	.word	0x200001bc

080019b8 <_sbrk_r>:
 80019b8:	2300      	movs	r3, #0
 80019ba:	b570      	push	{r4, r5, r6, lr}
 80019bc:	4d06      	ldr	r5, [pc, #24]	@ (80019d8 <_sbrk_r+0x20>)
 80019be:	0004      	movs	r4, r0
 80019c0:	0008      	movs	r0, r1
 80019c2:	602b      	str	r3, [r5, #0]
 80019c4:	f7fe fdae 	bl	8000524 <_sbrk>
 80019c8:	1c43      	adds	r3, r0, #1
 80019ca:	d103      	bne.n	80019d4 <_sbrk_r+0x1c>
 80019cc:	682b      	ldr	r3, [r5, #0]
 80019ce:	2b00      	cmp	r3, #0
 80019d0:	d000      	beq.n	80019d4 <_sbrk_r+0x1c>
 80019d2:	6023      	str	r3, [r4, #0]
 80019d4:	bd70      	pop	{r4, r5, r6, pc}
 80019d6:	46c0      	nop			@ (mov r8, r8)
 80019d8:	200001bc 	.word	0x200001bc

080019dc <memchr>:
 80019dc:	b2c9      	uxtb	r1, r1
 80019de:	1882      	adds	r2, r0, r2
 80019e0:	4290      	cmp	r0, r2
 80019e2:	d101      	bne.n	80019e8 <memchr+0xc>
 80019e4:	2000      	movs	r0, #0
 80019e6:	4770      	bx	lr
 80019e8:	7803      	ldrb	r3, [r0, #0]
 80019ea:	428b      	cmp	r3, r1
 80019ec:	d0fb      	beq.n	80019e6 <memchr+0xa>
 80019ee:	3001      	adds	r0, #1
 80019f0:	e7f6      	b.n	80019e0 <memchr+0x4>
	...

080019f4 <_init>:
 80019f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80019f6:	46c0      	nop			@ (mov r8, r8)
 80019f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80019fa:	bc08      	pop	{r3}
 80019fc:	469e      	mov	lr, r3
 80019fe:	4770      	bx	lr

08001a00 <_fini>:
 8001a00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a02:	46c0      	nop			@ (mov r8, r8)
 8001a04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001a06:	bc08      	pop	{r3}
 8001a08:	469e      	mov	lr, r3
 8001a0a:	4770      	bx	lr
